import "Base.proto";
import "Common.proto";
option java_package = "com.game.pb";
option java_outer_classname = "GamePb";

//
message BeginGameRq {
    required int32 serverId = 1;
    required int32 keyId = 2;
    required string token = 3;
    required string deviceNo = 4;
    required string curVersion = 5;
    optional string clientId = 6;
    extend Base
    {
      optional BeginGameRq ext = 201;
    }
}

message BeginGameRs {
    optional int32 state = 1;       // 1.角色未创建 2.角色已创建 3.禁止登陆 4.不属于白名单，无法登陆
    optional int32 time = 2;
    repeated string name = 3;       //角色未创建时，传递一些随机名字
    extend Base
    {
      optional BeginGameRs ext = 202;
    }
}

//
message CreateRoleRq {
    required int32 portrait = 1;
    required string nick = 2;
    required int32 sex = 3;          //性别 1 男 2 女
    extend Base
    {
      optional CreateRoleRq ext = 203;
    }
}

message CreateRoleRs {
    optional int32 state = 1;       //1.成功  2.名字被占用  3.角色已创建(返回nick和portrait)
    optional string nick = 2;
    optional int32 portrait = 3;
    extend Base
    {
      optional CreateRoleRs ext = 204;
    }
}

//
message GetNamesRq {
    extend Base
    {
      optional GetNamesRq ext = 205;
    }
}

message GetNamesRs {
    repeated string name = 1;

    extend Base
    {
      optional GetNamesRs ext = 206;
    }
}

//
message RoleLoginRq {
    extend Base
    {
      optional RoleLoginRq ext = 207;
    }
}

message RoleLoginRs {
    optional int32 state = 1;       //预留扩展
    optional int32 war = 2;
    optional int32 boss = 3;
    optional int32 staffing = 4;    //编制功能开启
    optional int32 fortress = 5;    //要塞战开启
    optional bool drill = 6;        // 军事演习（红蓝大战）是否已报名
    optional int32 crossFight = 7;  // 跨服战是否开启(1开启)
    optional int32 crossParty = 8;  // 跨服军团战是否开启(1开启)
    optional int32 crossDrill = 9;  // 跨服军演是否开启(1开启)
    extend Base
    {
      optional RoleLoginRs ext = 208;
    }
}

//
message GetLordRq {
    extend Base
    {
      optional GetLordRq ext = 209;
    }
}

message GetLordRs {
    optional int64 lordId = 1;
    optional string nick = 2;
    optional int32 portrait = 3;
    optional int32 level = 4;
    optional int64 exp = 5;
    optional int32 vip = 6;
    optional int32 pos = 7;
    optional int32 gold = 8;
    optional int32 ranks = 9;                   //军衔
    optional int32 command = 10;                //统帅等级
    optional int32 fame = 11;                   //声望值
    optional int32 fameLv = 12;                 //声望等级
    optional int32 honour = 13;                 //荣誉
    optional int32 combat = 14;                 //副本进度
    optional int32 pros = 15;                   //繁荣度
    optional int32 prosMax = 16;                //最大繁荣度
    optional int32 prosTime = 17;               //恢复繁荣度的剩余时间秒数
    optional int32 power = 18;                  //当前能量
    optional int32 powerTime = 19;              //恢复能量的剩余时间秒数
    optional int64 newState = 20;               //新手引导状态
    optional int64 fight = 21;                  //战斗力
    optional int32 equip = 22;                  //装备仓库容量
    optional int32 fitting = 23;                //零件数量
    optional int32 metal = 24;                  //记忆金属数量
    optional int32 plan = 25;                   //设计蓝图数量
    optional int32 mineral = 26;                //金属矿物数量
    optional int32 tool = 27;                   //改造工具数量
    optional int32 draw = 28;                   //改造图纸数量

    optional int32 equipEplr = 29;              //装备副本已挑战次数
    optional int32 partEplr = 30;               //配件副本已挑战次数
    optional int32 extrEplr = 31;               //极限副本已挑战次数
    optional int32 timeEplr = 32;               //限时副本已挑战次数
    optional int32 equipBuy = 33;               //装备副本已购买次数
    optional int32 partBuy = 34;                //配件副本已购买次数
    optional int32 extrReset = 35;              //极限副本已重置次数

    optional int32 huangbao = 36;               //荒宝碎片数量

    optional bool clickFame = 37;               //能否领取声望
    optional bool buyFame = 38;                 //能否授勋
    optional int32 sex = 39;                    //性别 1.男 2.女
    optional int32 buyPower = 40;               //购买体力次数

    optional int32 newerGift = 41;              //新手引导礼包领取状态
    optional int32 buildCount = 42;             //购买的建造位

    optional int32 olTime = 43;                 //当日累计在线时间
    optional int32 ctTime = 44;                 //在线奖励倒计时开始时间(港口)
    optional int32 olAward = 45;                //领取了第几个在线奖励(港口)
    optional int32 gm = 46;                     //gm权限 0.无权限
    optional int32 topup = 47;                  //累计充值金币数量（vip点数）
    optional int32 guider = 48;                 //新手引导员 0.非引导员
    optional int32 partyTipAward = 49;          //军团引导奖励
    optional int32 staffing = 50;               //编制
    optional int32 staffingLv = 51;             //编制等级
    optional int32 staffingExp = 52;            //编制经验

    optional Ruins ruins = 53;                  //废墟信息
    optional int32 militaryEplr =54;            //军工副本已挑战次数
    optional int32 militaryBuy = 55;            //军工副本已购买次数
    optional int64 createRoleTime = 56;         //创建角色时间
    optional int32 scout = 57;                  //查询矿,玩家次数
    optional int32 energyStoneEplrId = 58;      //军工副本已挑战次数
    optional int32 energyStoneBuy = 59;         //军工副本已购买次数
    optional int32 timeBuy = 60;                //限时副本购买次数
    required int32 openServerDay = 61;          // 当前是服务器开发第几天，开服当天为第一天

    optional int32 tankDrive = 62;              //坦克驱动数量
    optional int32 chariotDrive = 63;           //战车驱动数量
    optional int32 artilleryDrive = 64;         //火炮驱动数量
    optional int32 rocketDrive = 65;            //火箭驱动数量

    optional int32 detergent = 66;              //洗涤剂
    optional int32 grindstone = 67;             //研磨石
    optional int32 polishingMtr = 68;           //抛光材料
    optional int32 maintainOil = 69;            //保养油
    optional int32 grindTool = 70;              //打磨工具
    optional int32 medalUpCdTime = 71;          //勋章强化冷却结束时间
    optional int32 medalEplr = 72;              //勋章关卡次数
    optional int32 medalBuy = 73;               //勋章关卡购买次数

    optional int32 scoutCdTime = 74;            //侦查CD
    repeated TwoInt partMatrial = 75;           //10以后的配件材料
    optional int32 underAttack = 76;            //离线时受到攻击次数
    optional int64 oldLordId = 77;              //旧角色ID

    optional int32 bubbleId = 78;               //当前聊天气泡id
    optional int32 precisionInstrument = 79;    //精密仪器
    optional int32 mysteryStone = 80;           //神秘石

	optional int32 bounty = 81;					//赏金活动代币
    optional int32 corundumMatrial = 82;		//刚玉磨料
	optional int32 inertGas = 83;				//惰性气体
	repeated int32 activeBox = 84;				//活跃宝箱
	optional int32 tacticsBuy = 85;                //战术副本已购买次数
    optional int32 tacticsReset = 86;              //战术副本已经挑战次数

    extend Base
    {
      optional GetLordRs ext = 210;
    }
}

//
message GetTimeRq {
    extend Base
    {
      optional GetTimeRq ext = 211;
    }
}

message GetTimeRs {
    optional int32 time = 1;
    optional bool openPay = 2;  //是否开放充值
    extend Base
    {
      optional GetTimeRs ext = 212;
    }
}

//
message GetTankRq {
    extend Base
    {
      optional GetTankRq ext = 213;
    }
}

message GetTankRs {
    repeated Tank tank = 1;
    repeated TankQue queue_1 = 2;       //第一战车工厂生产队列
    repeated TankQue queue_2 = 3;       //第二战车工厂生产队列
    repeated RefitQue refit = 4;         //改装工厂改装队列
    extend Base
    {
      optional GetTankRs ext = 214;
    }
}

//
message GetArmyRq {
    extend Base
    {
      optional GetArmyRq ext = 215;
    }
}

message GetArmyRs {
    repeated Army army = 1;
    extend Base
    {
      optional GetArmyRs ext = 216;
    }
}

//
message GetFormRq {  //获取阵型数据
    extend Base
    {
      optional GetFormRq ext = 217;
    }
}

message GetFormRs {
    repeated Form form = 1;
    extend Base
    {
      optional GetFormRs ext = 218;
    }
}

//
message SetFormRq {
    required Form form = 1;
    optional bool clean = 2;
    extend Base
    {
      optional SetFormRq ext = 219;
    }
}

message SetFormRs {
    optional Form form = 1;     //最终设置成功的阵型
    optional int64 fight = 2;
    extend Base
    {
      optional SetFormRs ext = 220;
    }
}

//
message RepairRq {  //修理坦克
    required int32 tankId = 1;
    required int32 repairType = 2;  //修理方式 1.宝石 2.金币
    extend Base
    {
      optional RepairRq ext = 221;
    }
}

message RepairRs {
    optional int32 count = 1;   //修理数量
    optional int64 cur = 2;     //当前宝石或金币数量
    extend Base
    {
      optional RepairRs ext = 222;
    }
}

//
message GetResourceRq {
    extend Base
    {
      optional GetResourceRq ext = 223;
    }
}

message GetResourceRs {
    optional int64 iron = 1;    //铁
    optional int64 oil = 2;     //石油
    optional int64 copper = 3;  //铜
    optional int64 silicon = 4; //硅
    optional int64 stone = 5;   //宝石
    extend Base
    {
      optional GetResourceRs ext = 224;
    }
}

//
message GetBuildingRq {
    extend Base
    {
      optional GetBuildingRq ext = 225;
    }
}

message GetBuildingRs {
    optional int32 ware1 = 1;       //第一仓库等级
    optional int32 ware2 = 2;       //第二仓库等级
    optional int32 tech = 3;        //科技馆等级
    optional int32 factory1 = 4;    //第一战车工厂等级
    optional int32 factory2 = 5;    //第二战车工厂等级
    optional int32 refit = 6;       //改装工厂等级
    optional int32 command = 7;     //司令部等级
    optional int32 workShop = 8;    //制造车间等级
    optional int32 leqm = 9;        //军备材料工坊等级
    repeated BuildQue queue = 10;
    optional int32 upBuildTime = 11;    //自动升级建筑剩余时间
    optional int32 onBuild = 12;        //是否开启自动升级建筑
    repeated Mill mill = 13;
    extend Base
    {
      optional GetBuildingRs ext = 226;
    }
}

//
message UpBuildingRq {
    required int32 type = 1;        //升级类型 1.金币升级 2.资源升级
    required int32 buildingId = 2;
    optional int32 pos = 3;         //升级城外工厂时，传入位置 1-42
    extend Base
    {
      optional UpBuildingRq ext = 227;
    }
}

message UpBuildingRs {
    optional int32 gold = 2;        //升级后金币,如果是金币升级，就返回这个字段
    optional int64 iron = 3;        //升级后铁资源数量, 如果是资源升级，就返回这个字段
    optional int64 oil = 4;
    optional int64 copper = 5;
    optional int64 silicon = 6;
    optional BuildQue queue = 7;
    extend Base
    {
      optional UpBuildingRs ext = 228;
    }
}

//
// message GetBuildQueRq {
//     extend Base
//     {
//       optional GetBuildQueRq ext = 229;
//     }
// }

// message GetBuildQueRs {
//     repeated BuildQue queue = 1;
//     extend Base
//     {
//       optional GetBuildQueRs ext = 230;
//     }
// }

message LoadDataRq {
    extend Base
    {
      optional LoadDataRq ext = 229;
    }
}

message LoadDataRs {
    optional bool success = 1;
    extend Base
    {
      optional LoadDataRs ext = 230;
    }
}

message BuildTankRq {
    required int32 tankId = 1;
    required int32 count = 2;
    required int32 which = 3;       //选择哪个战车工厂生产，1.第一个 2.第二个
    extend Base
    {
      optional BuildTankRq ext = 231;
    }
}

message BuildTankRs {
    optional TankQue queue = 1;
    optional int64 oil = 2;         //建造完以后的资源数据，消耗什么发什么
    optional int64 iron = 3;
    optional int64 copper = 4;
    optional int64 silicon = 5;
    extend Base
    {
      optional BuildTankRs ext = 232;
    }
}

message HeartRq {
    extend Base
    {
      optional HeartRq ext = 233;
    }
}

message HeartRs {
    extend Base
    {
      optional HeartRs ext = 234;
    }
}

message CancelQueRq {
    required int32 type = 1;    //队列类型 1.建筑 2.坦克 3.改装 4.制作车间造道具 5.科技
    required int32 keyId = 2;   //队列keyId
    optional int32 which = 3;   //第几战车工厂
    extend Base
    {
      optional CancelQueRq ext = 235;
    }
}

message CancelQueRs {
    optional int64 oil = 2;         //返还资源数据，消耗什么发什么
    optional int64 iron = 3;
    optional int64 copper = 4;
    optional int64 silicon = 5;
    optional int64 stone = 6;
    repeated Award award = 7;       //返还道具列表
    extend Base
    {
      optional CancelQueRs ext = 236;
    }
}

message GetPropRq {
    extend Base
    {
      optional GetPropRq ext = 237;
    }
}

message GetPropRs {
    repeated Prop prop = 1;
    repeated PropQue queue = 2;
    extend Base
    {
      optional GetPropRs ext = 238;
    }
}

message BuyPropRq {
    required int32 propId = 1;
    required int32 count = 2;
    extend Base
    {
      optional BuyPropRq ext = 239;
    }
}

message BuyPropRs {
    optional int32 gold = 1;        //购买后金币数量
    optional int32 count = 2;       //购买后道具数量
    extend Base
    {
      optional BuyPropRs ext = 240;
    }
}

message UsePropRq {
    required int32 propId = 1;
    required int32 count = 2;
    optional string param = 3;
    extend Base
    {
      optional UsePropRq ext = 241;
    }
}

message UsePropRs {
    optional int32 count = 1;       //使用后道具数量
    repeated Effect effect = 2;
    repeated Award award = 3;
    extend Base
    {
      optional UsePropRs ext = 242;
    }
}

message SpeedQueRq {
    required int32 type = 1;        //加速类型 1.建筑升级 2.生产坦克 3.改装 4.制作车间造道具 5.科技 6.行军
    required int32 cost = 2;        //使用金币还是道具  1.金币 2.道具
    required int32 keyId = 3;
    optional int32 which = 4;       //如果是加速生产坦克，表示第几战车工厂
    optional int32 propId = 5;      //使用哪个道具
	optional int32 propCount = 6;   //道具数量
    extend Base
    {
      optional SpeedQueRq ext = 243;
    }
}

message SpeedQueRs {
    optional int32 gold = 1;        //金币加速时购买后金币数量
    optional int32 count = 2;       //道具加速时返回使用后道具数量
    optional int32 endTime = 3;    //道具加速时返回队列结束时间
    extend Base
    {
      optional SpeedQueRs ext = 244;
    }
}

message BuildPropRq {
    required int32 propId = 1;
    required int32 count = 2;
    extend Base
    {
      optional BuildPropRq ext = 245;
    }
}

message BuildPropRs {
    optional PropQue queue = 1;
    optional int64 stone = 2;
    optional int32 skillBook = 3;
    optional int32 heroChip = 4;
    repeated Atom2 atom2 = 5;//剩余道具
    extend Base
    {
      optional BuildPropRs ext = 246;
    }
}

message RefitTankRq {
    required int32 tankId = 1;
    required int32 count = 2;
    extend Base
    {
      optional RefitTankRq ext = 247;
    }
}

message RefitTankRs {
    optional RefitQue queue = 1;
    optional int64 oil = 2;         //建造完以后的资源数据，消耗什么发什么
    optional int64 iron = 3;
    optional int64 copper = 4;
    optional int64 silicon = 5;
    extend Base
    {
      optional RefitTankRs ext = 248;
    }
}

message GetEquipRq {  //获取装备数据
    extend Base
    {
      optional GetEquipRq ext = 249;
    }
}

message GetEquipRs {
    repeated Equip equip = 1;
    extend Base
    {
      optional GetEquipRs ext = 250;
    }
}

message SellEquipRq {
    repeated int32 keyId = 1;
    extend Base
    {
      optional SellEquipRq ext = 251;
    }
}

message SellEquipRs {
    optional int64 stone = 1;
    extend Base
    {
      optional SellEquipRs ext = 252;
    }
}

message UpEquipRq {
    required int32 keyId = 1;
    required int32 pos = 2;         //要升级的装备属于哪一格，0表示在仓库中
    repeated int32 from = 3;        //要被吞掉的keyId
    extend Base
    {
      optional UpEquipRq ext = 253;
    }
}

message UpEquipRs {
    optional int32 lv = 1;
    optional int32 exp = 2;
    extend Base
    {
      optional UpEquipRs ext = 254;
    }
}

message OnEquipRq {
    required int32 from = 1;        //要穿戴或卸下的装备keyId
    required int32 fromPos = 2;     //要穿戴或卸下的装备属于哪个格子，0表示仓库中
    required int32 toPos = 3;       //要装备到第几格,0表示卸下
    optional int32 to = 4;          //要装备到的位子已经有装备时，传入这个装备keyId，空格可以不传
                                    //from 和 to 同时为0，表示部队装备互换
    extend Base
    {
      optional OnEquipRq ext = 255;
    }
}

message OnEquipRs {
    extend Base
    {
      optional OnEquipRs ext = 256;
    }
}

message UpCapacityRq {
    extend Base
    {
      optional UpCapacityRq ext = 257;
    }
}

message UpCapacityRs {
    optional int32 gold = 1;
    extend Base
    {
      optional UpCapacityRs ext = 258;
    }
}

message AllEquipRq {
    repeated int32 on = 1;        //要穿戴的装备keyId
    required int32 pos = 2;
    repeated int32 off = 3;       //要卸下的装备keyId
    extend Base
    {
      optional AllEquipRq ext = 259;
    }
}

message AllEquipRs {
    extend Base
    {
      optional AllEquipRs ext = 260;
    }
}

message GetPartRq {  //获取配件数据
    extend Base
    {
      optional GetPartRq ext = 261;
    }
}

message GetPartRs {
    repeated Part part = 1;
    extend Base
    {
      optional GetPartRs ext = 262;
    }
}

message GetChipRq {  //获取碎片数据
    extend Base
    {
      optional GetChipRq ext = 263;
    }
}

message GetChipRs {
    repeated Chip chip = 1;
    extend Base
    {
      optional GetChipRs ext = 264;
    }
}

message CombinePartRq {
    required int32 partId = 1;
    extend Base
    {
      optional CombinePartRq ext = 265;
    }
}

message CombinePartRs {
    optional Part part = 1;
    extend Base
    {
      optional CombinePartRs ext = 266;
    }
}

message ExplodePartRq {             //只能分解仓库里的配件
    optional int32 keyId = 1;       //单个分解，传入
    repeated int32 quality = 2;     //批量分解，传入
    extend Base
    {
      optional ExplodePartRq ext = 267;
    }
}

message ExplodePartRs {
    optional int32 fitting = 1;     //零件
    optional int32 plan = 2;        //蓝图
    optional int32 mineral = 3;     //矿物
    optional int32 tool = 4;        //工具
    optional int64 stone = 5;
    repeated Award award = 6;       //增加各种道具
    extend Base
    {
      optional ExplodePartRs ext = 268;
    }
}

message OnPartRq {
    required int32 keyId = 1;
    optional int32 pos = 2;        //卸下时传入配件所在pos
    extend Base
    {
      optional OnPartRq ext = 269;
    }
}

message OnPartRs {
    extend Base
    {
      optional OnPartRs ext = 270;
    }
}

message ExplodeChipRq {
    optional int32 chipId = 1;
    optional int32 count = 2;
    repeated int32 quality = 3;     //批量分解
    extend Base
    {
      optional ExplodeChipRq ext = 271;
    }
}

message ExplodeChipRs {
    optional int32 fitting = 1;
    extend Base
    {
      optional ExplodeChipRs ext = 272;
    }
}

message UpPartRq {
    required int32 keyId = 1;
    required int32 pos = 2;        //配件所在pos
    required int32 metal = 3;      //使用记忆金属数量
    extend Base
    {
      optional UpPartRq ext = 273;
    }
}

message UpPartRs {
    optional bool success = 1;
    optional int64 stone = 2;
    optional int32 metal = 3;
    extend Base
    {
      optional UpPartRs ext = 274;
    }
}

message RefitPartRq {
    required int32 keyId = 1;
    required int32 pos = 2;
    required bool draw  = 3;    //是否使用改造图纸
    extend Base
    {
      optional RefitPartRq ext = 275;
    }
}

message RefitPartRs {
    optional int32 upLv = 1;    //当前强化等级
    extend Base
    {
      optional RefitPartRs ext = 276;
    }
}

//科技馆数据
message GetScienceRq {
    extend Base
    {
      optional GetScienceRq ext = 277;
    }
}

message GetScienceRs {
    repeated Science science = 1;
    repeated ScienceQue queue = 2;
    extend Base
    {
      optional GetScienceRs ext = 278;
    }
}

//科技升级
message UpgradeScienceRq {
    required int32 scienceId = 1;
    extend Base
    {
      optional UpgradeScienceRq ext = 279;
    }
}

message UpgradeScienceRs {
    optional ScienceQue queue = 1;
    optional int64 oil = 2;         //石油
    optional int64 iron = 3;        //铁
    optional int64 copper = 4;      //铜
    optional int64 silicon = 5;     //硅
    optional int64 stone = 6;       //宝石
    extend Base
    {
      optional UpgradeScienceRs ext = 280;
    }
}

message GetCombatRq {
    extend Base
    {
      optional GetCombatRq ext = 281;
    }
}

message GetCombatRs {
    repeated Combat combat = 1;     //普通副本
    repeated Combat explore = 2;    //探险副本(装备、配件、限时)
    repeated Section section = 3;
    optional int32 combatId = 4;        //普通副本进度
    optional int32 equipEplrId = 5;     //装备副本进度
    optional int32 partEplrId = 6;      //配件副本进度
    optional int32 extrEplrId = 7;      //极限副本进度
    optional int32 timePrlrId = 8;      //限时副本进度
    optional int32 extrMark = 9;        //极限副本历史最高层数
    optional int32 wipeTime = 10;       //限时副本开始扫荡时间
    optional int32 militaryEplrId = 11; //军工副本进度
    optional int32 energyStoneEplrId = 12; //能晶副本进度
    optional int32 medalEplrId = 13;    //勋章副本进度
	optional int32 tacticsId = 14;      //战术副本进度
    extend Base
    {
      optional GetCombatRs ext = 282;
    }
}

message DoCombatRq {
    required int32 type = 1;        //1.普通副本 2.装备 3.配件 4.极限 5.限时，6军工,7要塞战
    required int32 combatId = 2;
    required Form form = 3;
    optional bool wipe = 4;         //是否扫荡，是扫荡的话不回传record
    extend Base
    {
      optional DoCombatRq ext = 283;
    }
}

message DoCombatRs {
    optional int32 result = 1;      //-1输 1.1星 2.2星 3.3星
    optional Record record = 2;
    repeated Award award = 3;
    repeated RptTank haust = 4;        //扫荡时，传入这个字段，表示战损
    optional int32 exp = 5;
    extend Base
    {
      optional DoCombatRs ext = 284;
    }
}

//我的将领数据
message GetMyHerosRq {
    extend Base
    {
      optional GetMyHerosRq ext = 285;
    }
}

message GetMyHerosRs {
    repeated Hero hero = 1;
    optional int32 coinCount = 2;
    optional int32 resCount = 3;
    repeated int32 lockHero = 4;   // 已锁英雄id
    repeated AwakenHero awakenHero = 5;   // 觉醒英雄
    extend Base
    {
      optional GetMyHerosRs ext = 286;
    }
}

//将领分解
message HeroDecomposeRq {
    required int32 type = 1;  //1 单个分解 2 批量分解
    required int32 id = 2;  //如果是单个分解，传将领的keyId，如果是批量分解，传批量分解的星级（1-5）
    extend Base
    {
      optional HeroDecomposeRq ext = 287;
    }
}

message HeroDecomposeRs {
    repeated Award award = 1;
    extend Base
    {
      optional HeroDecomposeRs ext = 288;
    }
}

//将领升级
message HeroLevelUpRq {
    required int32 keyId = 1; //将领keyId
    extend Base
    {
      optional HeroLevelUpRq ext = 289;
    }
}

message HeroLevelUpRs {
    optional Hero hero = 1;
    extend Base
    {
      optional HeroLevelUpRs ext = 290;
    }
}

//将领升阶
message HeroImproveRq {
    repeated Hero hero = 1; //升阶消耗的将领
    extend Base
    {
      optional HeroImproveRq ext = 291;
    }
}

message HeroImproveRs {
    optional Hero hero = 1;
    extend Base
    {
      optional HeroImproveRs ext = 292;
    }
}

//抽将
message LotteryHeroRq {
    required int32 type = 1; //1 资源1次 2 资源5次  3 金币1次 4 金币5次
    extend Base
    {
      optional LotteryHeroRq ext = 293;
    }
}

message LotteryHeroRs {
    repeated Hero hero = 1;    //获得的将领列表
    optional int64 stone = 2;  //抽将后宝石数量
    optional int32 gold = 3;   //抽将后金币数量
    optional int64 stoneAdd = 4;   //返还水晶量
    extend Base
    {
      optional LotteryHeroRs ext = 294;
    }
}

message BuyExploreRq {
    required int32 type = 1;        //1.装备 2.配件
    extend Base
    {
      optional BuyExploreRq ext = 295;
    }
}

message BuyExploreRs {
    optional int32 count = 1;
    optional int32 gold = 2;
    extend Base
    {
      optional BuyExploreRs ext = 296;
    }
}

message ResetExtrEprRq {
    required int32 type = 1;
    extend Base
    {
      optional ResetExtrEprRq ext = 297;
    }
}

message ResetExtrEprRs {
    extend Base
    {
      optional ResetExtrEprRs ext = 298;
    }
}

message GetFriendRq {
    extend Base
    {
      optional GetFriendRq ext = 299;
    }
}

message GetFriendRs {
    repeated Friend friend = 1;
    optional int32 giveCount = 2;   //玩家当月已赠送道具次数
    extend Base
    {
      optional GetFriendRs ext = 300;
    }
}

message AddFriendRq {
    required int64 friendId = 1;
    extend Base
    {
      optional AddFriendRq ext = 301;
    }
}

message AddFriendRs {
    extend Base
    {
      optional AddFriendRs ext = 302;
    }
}

message DelFriendRq {
    required int64 friendId = 1;
    extend Base
    {
      optional DelFriendRq ext = 303;
    }
}

message DelFriendRs {
    extend Base
    {
      optional DelFriendRs ext = 304;
    }
}

message BlessFriendRq {
    required int64 friendId = 1;
    extend Base
    {
      optional BlessFriendRq ext = 305;
    }
}

message BlessFriendRs {
    optional int32 exp = 1;
    extend Base
    {
      optional BlessFriendRs ext = 306;
    }
}


message GetBlessRq {
    extend Base
    {
      optional GetBlessRq ext = 307;
    }
}

message GetBlessRs {
    repeated Bless bless = 1;
    extend Base
    {
      optional GetBlessRs ext = 308;
    }
}

message AcceptBlessRq {
    required int64 friendId = 1;                //friend为0则是一键领取祝福能量
    extend Base
    {
      optional AcceptBlessRq ext = 309;
    }
}

message AcceptBlessRs {
    optional int32 energy = 1;                      //领取祝福后的总能量
    repeated Award award = 2;
    extend Base
    {
      optional AcceptBlessRs ext = 310;
    }
}

message GetStoreRq {
    extend Base
    {
      optional GetStoreRq ext = 311;
    }
}

message GetStoreRs {
    repeated Store store = 1;
    extend Base
    {
      optional GetStoreRs ext = 312;
    }
}

message RecordStoreRq {
    required int32 pos = 1;
    required int32 enemy = 2;       //0未标记 1标记为敌人
    required int32 friend = 3;      //0未标记 1标记为好友
    required int32 isMine = 4;      //0未标记 1标记为资源
    required int32 type = 5;                //1 玩家 2 资源点
    extend Base
    {

      optional RecordStoreRq ext = 313;
    }
}

message RecordStoreRs {
    optional Store store = 1;
    extend Base
    {
      optional RecordStoreRs ext = 314;
    }
}

message MarkStoreRq {
    required Store store = 1;
    extend Base
    {
      optional MarkStoreRq ext = 315;
    }
}

message MarkStoreRs {
    extend Base
    {
      optional MarkStoreRs ext = 316;
    }
}


message GetMailRq {
    extend Base
    {
      optional GetMailRq ext = 317;
    }
}

message GetMailRs {
    repeated Mail mail = 1;
    extend Base
    {
      optional GetMailRs ext = 318;
    }
}

message SendMailRq {
    optional int32 type = 1; //0 普通 1军团长群发
    required Mail mail = 2;
    extend Base
    {
      optional SendMailRq ext = 319;
    }
}

message SendMailRs {
    optional Mail mail = 1;
    extend Base
    {
      optional SendMailRs ext = 320;
    }
}


message RewardMailRq {
    required int32 keyId = 1;
    extend Base
    {
      optional RewardMailRq ext = 321;
    }
}

message RewardMailRs {
    repeated Award award = 1;
    extend Base
    {
      optional RewardMailRs ext = 322;
    }
}

message DelMailRq {
    required int32 keyId = 1; // keyId为0的时候根据type批量删除 否则跟keyId删除
    optional int32 type = 2;  //邮件类型
	optional int32 delType = 3;  //删除操作类型 1所有 2已读  3系统  4 空白
    extend Base
    {
      optional DelMailRq ext = 323;
    }
}

message DelMailRs {
    extend Base
    {
      optional DelMailRs ext = 324;
    }
}



//一键收取所有邮件附件
message RewardAllMailRq {
    required int32 type = 1;                // 邮件类型 1.邮件 2.发件 3.报告 4.系统 5.个人竞技场 6.全服竞技场
    extend Base
    {
      optional RewardAllMailRq ext = 5821;
    }
}

message RewardAllMailRs {
    repeated Award award = 1;
    extend Base
    {
      optional RewardAllMailRs ext = 5822;
    }
}

//收藏邮件
message CollectionsMailRq {
    required int32 keyId = 1; // 邮件的keyid
    required int32 type = 2;  //1收藏 0取消收藏
    extend Base
    {
      optional CollectionsMailRq ext = 5823;
    }
}

message CollectionsMailRs {
	required int32 keyId = 1; // 邮件的keyid
    extend Base
    {
      optional CollectionsMailRs ext = 5824;
    }
}

//通知玩家，客户端同步更新邮件
message SyncMailRq{
    repeated Award award = 1;
    extend Base
    {
      optional SyncMailRq ext = 1073;
    }
}


message CombatBoxRq {
    required int32 type = 1;        //1.普通副本 2.装备 3.配件 4.限时, 6军工
    required int32 id = 2;          //type 1,2,3表示sectionid
    required int32 which = 3;       //第几个宝箱，type为4时表示第几兑换方式
    extend Base
    {
      optional CombatBoxRq ext = 325;
    }
}

message CombatBoxRs {
    repeated Award award = 1;
    extend Base
    {
      optional CombatBoxRs ext = 326;
    }
}

message BuyPowerRq {
    extend Base
    {
      optional BuyPowerRq ext = 327;
    }
}

message BuyPowerRs {
    optional int32 gold = 1;
    optional int32 power = 2;
    extend Base
    {
      optional BuyPowerRs ext = 328;
    }
}

message UpRankRq {
    extend Base
    {
      optional UpRankRq ext = 329;
    }
}

message UpRankRs {
    optional int64 stone = 1;
    extend Base
    {
      optional UpRankRs ext = 330;
    }
}

message UpCommandRq {
    required bool useGold = 1;
    extend Base
    {
      optional UpCommandRq ext = 331;
    }
}

message UpCommandRs {
    optional bool success = 1;
    optional int32 gold = 2;
    optional int32 book = 3;
    extend Base
    {
      optional UpCommandRs ext = 332;
    }
}

message BuyProsRq {
    extend Base
    {
      optional BuyProsRq ext = 333;
    }
}

message BuyProsRs {
    optional int32 gold = 2;
    extend Base
    {
      optional BuyProsRs ext = 334;
    }
}

message BuyFameRq {
    required int32 type = 1;        //1,2,3,4星授勋
    extend Base
    {
      optional BuyFameRq ext = 335;
    }
}

message BuyFameRs {
    optional int32 gold = 1;
    optional int64 stone = 2;
    optional int32 fameLv = 3;
    optional int32 fame = 4;
    extend Base
    {
      optional BuyFameRs ext = 336;
    }
}

message ClickFameRq {
    extend Base
    {
      optional ClickFameRq ext = 337;
    }
}

message ClickFameRs {
    optional int32 fameLv = 1;
    optional int32 fame = 2;
    extend Base
    {
      optional ClickFameRs ext = 338;
    }
}

message GetSkillRq {
    extend Base
    {
      optional GetSkillRq ext = 339;
    }
}

message GetSkillRs {
    repeated Skill skill = 1;
    extend Base
    {
      optional GetSkillRs ext = 340;
    }
}

message UpSkillRq {
    required int32 id = 1;
    extend Base
    {
      optional UpSkillRq ext = 341;
    }
}

message UpSkillRs {
    optional int32 lv = 1;
    optional int32 bookCount = 2;
    extend Base
    {
      optional UpSkillRs ext = 342;
    }
}

message ResetSkillRq {
    extend Base
    {
      optional ResetSkillRq ext = 343;
    }
}

message ResetSkillRs {
    optional int32 gold = 1;
    optional int32 book = 2;
    extend Base
    {
      optional ResetSkillRs ext = 344;
    }
}

// message GetMillRq {
//     extend Base
//     {
//       optional GetMillRq ext = 345;
//     }
// }

// message GetMillRs {
//     repeated Mill mill = 1;
//     extend Base
//     {
//       optional GetMillRs ext = 346;
//     }
// }

message DestroyMillRq {
    required int32 pos = 1;
    extend Base
    {
      optional DestroyMillRq ext = 347;
    }
}

message DestroyMillRs {
    optional int32 prosMax = 1;
    extend Base
    {
      optional DestroyMillRs ext = 348;
    }
}

message SeachPlayerRq {
    optional string nick = 1;
    extend Base
    {
      optional SeachPlayerRq ext = 349;
    }
}

message SeachPlayerRs {
    optional Man man = 1;
    extend Base
    {
      optional SeachPlayerRs ext = 350;
    }
}

message GetEffectRq {
    extend Base
    {
      optional GetEffectRq ext = 351;
    }
}

message GetEffectRs {
    repeated Effect effect = 1;
    extend Base
    {
      optional GetEffectRs ext = 352;
    }
}

message DoSomeRq {
    required string str = 1;
    optional Mail mail = 2;
    extend Base
    {
      optional DoSomeRq ext = 353;
    }
}

message DoSomeRs {
    optional bool success = 1;
    extend Base
    {
      optional DoSomeRs ext = 354;
    }
}

message DelStoreRq {
    required int32 pos = 1;
    extend Base
    {
      optional DelStoreRq ext = 355;
    }
}

message DelStoreRs {
    extend Base
    {
      optional DelStoreRs ext = 356;
    }
}

message DoLotteryRq {
    required int32 type = 1;                    //1荒宝小 2荒宝中 3荒宝大 4探宝单抽 5探宝三抽 6绿色单抽 7蓝色单抽 8紫色单抽 9紫色九抽
	optional int32 count = 2;
    extend Base
    {
      optional DoLotteryRq ext = 357;
    }
}

message DoLotteryRs {
    repeated Award award = 1;                   //获得的奖励
    optional int32 isDisplay = 2;               //0不显示奖励池 1其他值显示奖励池数量
    repeated Award displayAward = 3;            //奖励池数据
    optional int32 cd = 4;
    optional int32 gold = 5;
    optional int64 stoneAdd = 6;                //返还水晶量
    optional int32 exploreLucky = 7;            //探宝幸运值
    extend Base
    {
      optional DoLotteryRs ext = 358;
    }
}

message GetArenaRq {
    extend Base
    {
      optional GetArenaRq ext = 359;
    }
}

message GetArenaRs {
    optional int32 count = 1;                   //剩余挑战次数
    optional int32 score = 2;                   //积分
    optional int32 rank = 3;                    //当前排名
    optional int32 lastRank = 4;                //上次排名
    optional int32 winCount = 5;                //连胜次数
    optional int32 coldTime = 6;                //开始冷却的时间
    repeated RankPlayer rankPlayer = 7;         //对手
    optional string champion = 8;               //冠军名字
    optional int64 fight = 9;
    optional int32 buyCount = 10;
    optional bool award = 11;                   //是否领取过当日排名奖励
    optional int32 unread = 12;                 //未读邮件数
    extend Base
    {
      optional GetArenaRs ext = 360;
    }
}

message DoArenaRq {
    required int32 rank = 1;
    extend Base
    {
      optional DoArenaRq ext = 361;
    }
}

message DoArenaRs {
    optional int32 result = 1;                  //-1失败 1.胜利
    optional Record record = 2;
    repeated Award award = 3;
    optional Form form = 4;
    optional int32 coldTime = 5;                //战败时，传开始冷却的时间
    optional int32 score = 6;
    optional int32 firstValue1 = 7;
    optional int32 firstValue2 = 8;
    extend Base
    {
      optional DoArenaRs ext = 362;
    }
}

message BuyArenaRq {
    extend Base
    {
      optional BuyArenaRq ext = 363;
    }
}

message BuyArenaRs {
    optional int32 count = 1;
    optional int32 gold = 2;
    extend Base
    {
      optional BuyArenaRs ext = 364;
    }
}

message ArenaAwardRq {
    extend Base
    {
      optional ArenaAwardRq ext = 365;
    }
}

message ArenaAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional ArenaAwardRs ext = 366;
    }
}

message UseScoreRq {
    required int32 propId = 1;
    extend Base
    {
      optional UseScoreRq ext = 367;
    }
}

message UseScoreRs {
    optional int32 score = 1;
    extend Base
    {
      optional UseScoreRs ext = 368;
    }
}

message InitArenaRq {
    required Form form = 1;
    extend Base
    {
      optional InitArenaRq ext = 369;
    }
}

message InitArenaRs {
    optional int32 rank = 1;                    //当前排名
    optional int32 count = 2;                   //剩余挑战次数
    repeated RankPlayer rankPlayer = 3;         //对手
    optional int64 fight = 4;
    extend Base
    {
      optional InitArenaRs ext = 370;
    }
}



message ReadMailRq {
    required int32 keyId = 1;
    extend Base
    {
      optional ReadMailRq ext = 371;
    }
}

message ReadMailRs {
    extend Base
    {
      optional ReadMailRs ext = 372;
    }
}

message GetLotteryEquipRq {
    extend Base
    {
      optional GetLotteryEquipRq ext = 373;
    }
}

message GetLotteryEquipRs {
    repeated LotteryEquip lotteryEquip = 1;
    extend Base
    {
      optional GetLotteryEquipRs ext = 374;
    }
}

message GetPartyRankRq {
    required int32 page = 1;   //每一页显示20个，第一页page=0，第二页page=1
    required int32 type = 2;   //1 所有 2 可加入的
    extend Base
    {
      optional GetPartyRankRq ext = 375;
    }
}

message GetPartyRankRs {
    optional PartyRank party = 1;   //自己军团排名
    repeated PartyRank partyRank = 2;
    extend Base
    {
      optional GetPartyRankRs ext = 376;
    }
}

message GetPartyRq {
    required int32 partyId = 1;                 //partyId值为零时取自己帮派信息,partyId有值时查询帮派
    extend Base
    {
      optional GetPartyRq ext = 377;
    }
}

message GetPartyRs {
    optional Party party = 1;                   //玩家没有帮派的时候Party里面的ID为零
    optional int32 donate = 2;                  //军团贡献值
    optional int32 job = 3;                     //职位 10 普通帮众 99 军团长
    optional int32 enterTime = 4;               //加入军团的时间
    extend Base
    {
      optional GetPartyRs ext = 378;
    }
}

// message GetPartyBuildingRq {
//     extend Base
//     {
//       optional GetPartyBuildingRq ext = 379;
//     }
// }

// message GetPartyBuildingRs {
//  repeated PartyBuilding partyBuilding = 1;
//     extend Base
//     {
//       optional GetPartyBuildingRs ext = 380;
//     }
// }

message GetPartyMemberRq {
    extend Base
    {
      optional GetPartyMemberRq ext = 381;
    }
}

message GetPartyMemberRs {
    repeated PartyMember partyMember = 1;
    extend Base
    {
      optional GetPartyMemberRs ext = 382;
    }
}

message GetPartyHallRq {
    extend Base
    {
      optional GetPartyHallRq ext = 383;
    }
}

message GetPartyHallRs {
    optional PartyDonate partyDonate = 1;
    extend Base
    {
      optional GetPartyHallRs ext = 384;
    }
}

message GetPartyScienceRq {
    extend Base
    {
      optional GetPartyScienceRq ext = 385;
    }
}

message GetPartyScienceRs {
    optional PartyDonate partyDonate = 1;
    repeated Science science = 2;
    extend Base
    {
      optional GetPartyScienceRs ext = 386;
    }
}

message GetPartyWealRq {
    extend Base
    {
      optional GetPartyWealRq ext = 387;
    }
}

message GetPartyWealRs {
    optional int32 everWeal = 1;                //日常福利是否领取 0未领 1已领
    optional int32 live = 2;                    //福利院活跃总值
    optional Weal resource = 3;                  //可领取资源
    optional Weal getResource = 4;             //已领取资源
    repeated LiveTask liveTask = 5;             //活跃任务
    extend Base
    {
      optional GetPartyWealRs ext = 388;
    }
}

message GetPartyTrendRq {
    required int32 page = 1;   //每一页显示20个，第一页page=0，第二页page=1
    required int32 type = 2;   //1民情  2 军情
    extend Base
    {
      optional GetPartyTrendRq ext = 389;
    }
}

message GetPartyTrendRs {
    repeated Trend trend = 1;
    extend Base
    {
      optional GetPartyTrendRs ext = 390;
    }
}
message GetPartyShopRq {
    extend Base
    {
      optional GetPartyShopRq ext = 391;
    }
}

message GetPartyShopRs {
    repeated PartyProp partyProp = 1;
    extend Base
    {
      optional GetPartyShopRs ext = 392;
    }
}

message DonatePartyRq {
    required int32 resouceId = 1;                   //1铁 2石油 3铜 4硅石 5宝石 6金币
    extend Base
    {
      optional DonatePartyRq ext = 393;
    }
}

message DonatePartyRs {
    optional int64 stone = 1;
    optional int64 iron = 2;
    optional int64 silicon = 3;
    optional int64 copper = 4;
    optional int64 oil = 5;
    optional int32 gold = 6;
    optional bool isBuild = 7;                      //是否增加建设度
    extend Base
    {
      optional DonatePartyRs ext = 394;
    }
}

message UpPartyBuildingRq {
    required int32 buildingId = 1;
    extend Base
    {
      optional UpPartyBuildingRq ext = 395;
    }
}

message UpPartyBuildingRs {
    optional int32 buildingId = 1;
    optional int32 buildingLv = 2;
    extend Base
    {
      optional UpPartyBuildingRs ext = 396;
    }
}

message SetPartyJobRq {
    required string jobName1 = 1;
    required string jobName2 = 2;
    required string jobName3 = 3;
    required string jobName4 = 4;
    extend Base
    {
      optional SetPartyJobRq ext = 397;
    }
}

message SetPartyJobRs {
    extend Base
    {
      optional SetPartyJobRs ext = 398;
    }
}

message BuyPartyShopRq {
    required int32 keyId = 1;
    extend Base
    {
      optional BuyPartyShopRq ext = 399;
    }
}

message BuyPartyShopRs {
    repeated Award award = 1;
    extend Base
    {
      optional BuyPartyShopRs ext = 400;
    }
}

// --------------@文件分割标志@---------------

message WealDayPartyRq {
    required int32 type = 1;                //1.领取日常福利 2.领取矿石资源福利（世界采集之后）
    extend Base
    {
      optional WealDayPartyRq ext = 401;
    }
}

message WealDayPartyRs {
    repeated Award award = 1;
    optional int64 stone = 2;
    optional int64 iron = 3;
    optional int64 silicon = 4;
    optional int64 copper = 5;
    optional int64 oil = 6;
    extend Base
    {
      optional WealDayPartyRs ext = 402;
    }
}

message PartyApplyListRq {
    extend Base
    {
      optional PartyApplyListRq ext = 403;
    }
}

message PartyApplyListRs {
    repeated PartyApply partyApply = 1;
    extend Base
    {
      optional PartyApplyListRs ext = 404;
    }
}

message PartyApplyRq {
    required int32 partyId = 1;
    extend Base
    {
      optional PartyApplyRq ext = 405;
    }
}

message PartyApplyRs {
    extend Base
    {
      optional PartyApplyRs ext = 406;
    }
}

message PartyApplyJudgeRq {
    optional int64 lordId = 1;
    required int32 judge = 2;               //1批 2拒绝 3清空

    extend Base
    {
      optional PartyApplyJudgeRq ext = 407;
    }
}

message PartyApplyJudgeRs {
    extend Base
    {
      optional PartyApplyJudgeRs ext = 408;
    }
}

message CreatePartyRq {
    required string partyName = 1;
    required int32 type = 2;    //1 金币创建 2 资源创建
    required int32 applyType = 3;   //加入方式(1.申请即可加入 2.申请后需要审批)
    extend Base
    {
      optional CreatePartyRq ext = 409;
    }
}

message CreatePartyRs {
    optional Party party = 1;
    optional int64 stone = 2;
    optional int64 iron = 3;
    optional int64 silicon = 4;
    optional int64 copper = 5;
    optional int64 oil = 6;
    optional int32 gold = 7;
    extend Base
    {
      optional CreatePartyRs ext = 410;
    }
}

message QuitPartyRq {
    extend Base
    {
      optional QuitPartyRq ext = 411;
    }
}

message QuitPartyRs {
    extend Base
    {
      optional QuitPartyRs ext = 412;
    }
}

message DonateScienceRq {
    required int32 scienceId = 1;
    required int32 resouceId = 2;           //1宝石 2铁 3硅石 4铜 5石油 6金币
    extend Base
    {
      optional DonateScienceRq ext = 413;
    }
}

message DonateScienceRs {
    optional Science science = 1;
    optional int64 stone = 2;
    optional int64 iron = 3;
    optional int64 silicon = 4;
    optional int64 copper = 5;
    optional int64 oil = 6;
    optional int32 gold = 7;
    extend Base
    {
      optional DonateScienceRs ext = 414;
    }
}

message WealResourcePartyRq {//废弃
    required int32 scienceId = 1;
    required int32 resouceId = 2;           //1宝石 2铁 3硅石 4铜 5石油 6金币
    extend Base
    {
      optional WealResourcePartyRq ext = 415;
    }
}

message WealResourcePartyRs {
    extend Base
    {
      optional WealResourcePartyRs ext = 416;
    }
}

message CannlyApplyRq {
    required int32 partyId = 1;
    extend Base
    {
      optional CannlyApplyRq ext = 417;
    }
}

message CannlyApplyRs {
    extend Base
    {
      optional CannlyApplyRs ext = 418;
    }
}

message ApplyListRq {
    extend Base
    {
      optional ApplyListRq ext = 419;
    }
}

message ApplyListRs {
    repeated int32 partyId = 1;
    extend Base
    {
      optional ApplyListRs ext = 420;
    }
}

message SeachPartyRq {
    optional string partyName = 1;
    extend Base
    {
      optional SeachPartyRq ext = 421;
    }
}

message SeachPartyRs {
    optional PartyRank partyRank = 1;
    extend Base
    {
      optional SeachPartyRs ext = 422;
    }
}

message DoneGuideRq {
    optional int64 step = 1;
    extend Base
    {
      optional DoneGuideRq ext = 423;
    }
}

message DoneGuideRs {
    optional int32 pos = 1;
    extend Base
    {
      optional DoneGuideRs ext = 424;
    }
}

message GetMapRq {
    required int32 area = 1;
    extend Base
    {
      optional GetMapRq ext = 425;
    }
}

message GetMapRs {
    repeated MapData data = 1;
    repeated PartyMine partyMine = 2;
    optional WorldMineInfo mineInfo = 3;
	repeated WorldFreeTimeInfo freeTimeInfo = 4;
	optional int32 area = 5;

    extend Base
    {
      optional GetMapRs ext = 426;
    }
}

message ScoutPosRq {
    required int32 pos = 1;
    extend Base
    {
      optional ScoutPosRq ext = 427;
    }
}

message ScoutPosRs {
    optional Mail mail = 1;
    optional int32 cdTime = 2;        //cd结束时间
	optional int32 scoutCount = 3; //侦查次数
    extend Base
    {
      optional ScoutPosRs ext = 428;
    }
}

message AttackPosRq {
    required int32 pos = 1;
    required Form form = 2;
    extend Base
    {
      optional AttackPosRq ext = 429;
    }
}

message AttackPosRs {
    optional Army army = 1;
    extend Base
    {
      optional AttackPosRs ext = 430;
    }
}

message MoveHomeRq {
    required int32 type = 1;    //1.金币 2.道具(随机) 3.道具(定点)
    optional int32 pos = 2;
    extend Base
    {
      optional MoveHomeRq ext = 431;
    }
}

message MoveHomeRs {
    optional int32 pos = 1;
    optional int32 gold = 2;
    optional int32 count = 3;
    extend Base
    {
      optional MoveHomeRs ext = 432;
    }
}

//紧急撤销部队
message RetreatRq {
    required int32 keyId = 1;
    extend Base
    {
      optional RetreatRq ext = 433;
    }
}

message RetreatRs {
    repeated Atom2 atom2 = 1;//剩余道具数量
	optional int32 honourGold = 2;//采集所得荣耀金币
	optional int32 heroGold = 3;//新英雄采集金币
    extend Base
    {
      optional RetreatRs ext = 434;
    }
}

message GetSignRq {
    extend Base
    {
      optional GetSignRq ext = 435;
    }
}

message GetSignRs {
    optional int32 logins = 1;          //1-30天
    repeated int32 signs = 2;           //30个长度 0未领取 1已领取
    optional bool display = 3;      //false则不显示签到，true显示签到
    extend Base
    {
      optional GetSignRs ext = 436;
    }
}

message SignRq {
    required int32 signId = 1;          //1-30天中的任意一天
    extend Base
    {
      optional SignRq ext = 437;
    }
}

message SignRs {
    repeated Award award = 1;
    extend Base
    {
      optional SignRs ext = 438;
    }
}

message GetMajorTaskRq {
    extend Base
    {
      optional GetMajorTaskRq ext = 439;
    }
}

message GetMajorTaskRs {
    repeated Task task = 1;             //主线任务
    extend Base
    {
      optional GetMajorTaskRs ext = 440;
    }
}

message TaskAwardRq {
    required int32 taskId = 1;          //任务编号
    required int32 awardType = 2;       //快速完成
    extend Base
    {
      optional TaskAwardRq ext = 441;
    }
}

message TaskAwardRs {
    repeated Award award = 1;
    repeated Task task = 2;             //新触发任务
    extend Base
    {
      optional TaskAwardRs ext = 442;
    }
}

message SloganPartyRq {
    required int32 type = 1;            //1内部 2外部
    required string slogan = 2;         //公告
    extend Base
    {
      optional SloganPartyRq ext = 443;
    }
}

message SloganPartyRs {
    extend Base
    {
      optional SloganPartyRs ext = 444;
    }
}

message UpMemberJobRq {
    required int32 job = 1;                     //目标职位: 90副军团长 99军团长
    extend Base
    {
      optional UpMemberJobRq ext = 445;
    }
}

message UpMemberJobRs {
    optional int32 job = 2;
    extend Base
    {
      optional UpMemberJobRs ext = 446;
    }
}

message CleanMemberRq {
    required int64 lordId = 1;
    extend Base
    {
      optional CleanMemberRq ext = 447;
    }
}

message CleanMemberRs {
    extend Base
    {
      optional CleanMemberRs ext = 448;
    }
}

message ConcedeJobRq {
    required int64 lordId = 1;
    extend Base
    {
      optional ConcedeJobRq ext = 449;
    }
}

message ConcedeJobRs {
    extend Base
    {
      optional ConcedeJobRs ext = 450;
    }
}

message SetMemberJobRq {
    required int64 lordId = 1;
    required int32 job = 2;             //10 普通成员 90副军团长 20自定职位一 25自定职位二 30自定职位三 35自定职位四
    extend Base
    {
      optional SetMemberJobRq ext = 451;
    }
}

message SetMemberJobRs {
    optional int32 job = 1;             //变动后的职位（可能职位不变）
    extend Base
    {
      optional SetMemberJobRs ext = 452;
    }
}
message PartyJobCountRq {
    extend Base
    {
      optional PartyJobCountRq ext = 453;
    }
}

message PartyJobCountRs {
    optional int32 job1 = 1;                //职位1人数
    optional int32 job2 = 2;                //职位2人数
    optional int32 job3 = 3;
    optional int32 job4 = 4;
    optional int32 cpLegatus = 5;           //副军团长人数
    extend Base
    {
      optional PartyJobCountRs ext = 454;
    }
}

message PartyApplyEditRq {
    required int32 applyType = 1;           //申请方式 1.申请即可加入 2.申请后需要审批
    required int32 applyLv =2;              //申请最低等级
    required int64 fight = 3;               //申请最低战斗力
    required string slogan = 4;             //外部公告
    extend Base
    {
      optional PartyApplyEditRq ext = 455;
    }
}

message PartyApplyEditRs {
    extend Base
    {
      optional PartyApplyEditRs ext = 456;
    }
}

// message GetPartySectionRq {
//     extend Base
//     {
//       optional GetPartySectionRq ext = 457;
//     }
// }

// message GetPartySectionRs {
//     repeated PartySection partySection = 1;     //军团关卡
//     required int32 count = 2;            //剩余攻击次数
//     extend Base
//     {
//       optional GetPartySectionRs ext = 458;
//     }
// }

// message GetPartyCombatRq {
//  required int32 sectionId = 1;       //大关卡ID
//     extend Base
//     {
//       optional GetPartyCombatRq ext = 459;
//     }
// }

// message GetPartyCombatRs {
//     repeated PartyCombat partyCombat = 1;     //军团据点
//     extend Base
//     {
//       optional GetPartyCombatRs ext = 460;
//     }
// }

message GetPartyCombatRq {
    extend Base
    {
      optional GetPartyCombatRq ext = 459;
    }
}

message GetPartyCombatRs {
    repeated PartyCombat partyCombat = 1;       //军团据点
    optional int32 count = 2;                   //剩余攻击次数
    repeated int32 getAward = 3;                //领取过奖励的关卡id
    extend Base
    {
      optional GetPartyCombatRs ext = 460;
    }
}

message DoPartyCombatRq {
    required int32 combatId = 1;
    required Form form = 2;
    extend Base
    {
      optional DoPartyCombatRq ext = 461;
    }
}

message DoPartyCombatRs {
    optional PartyCombat partyCombat = 1;
    repeated Award award = 2;               //奖励
    optional int32 exp = 3;                 //添加经验
    optional int32 build = 4;               //帮派建设度
    optional int32 result = 5;      //-1输 1.1星 2.2星 3.3星
    optional Record record = 6;
    extend Base
    {
      optional DoPartyCombatRs ext = 462;
    }
}

message PartyctAwardRq {
    required int32 combatId = 1;
    extend Base
    {
      optional PartyctAwardRq ext = 463;
    }
}

message PartyctAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional PartyctAwardRs ext = 464;
    }
}

message GetMailListRq {
    optional int32 type = 1;        //邮件类型  1.邮件 2.发件 3.报告 4.系统 5.个人竞技场 6.全服竞技场 （20151013 暂时只在区  5,6时有效）
    extend Base
    {
      optional GetMailListRq ext = 465;
    }
}

message GetMailListRs {
    repeated MailShow mailShow = 1;             //邮件显示
    extend Base
    {
      optional GetMailListRs ext = 466;
    }
}

message GetMailByIdRq {
    required int32 keyId = 1;
    optional int32 type = 2;    //邮件类型  1.邮件 2.发件 3.报告 4.系统 5.个人竞技场 6.全服竞技场 （20151013 暂时只在区  5,6时有效）
    extend Base
    {
      optional GetMailByIdRq ext = 467;
    }
}

message GetMailByIdRs {
    optional Mail mail = 1;             //邮件具体内容
    optional int32 friendState = 2;           //好友状态：0：非好友，1：好友
    extend Base
    {
      optional GetMailByIdRs ext = 468;
    }
}

message GetInvasionRq {
    extend Base
    {
      optional GetInvasionRq ext = 469;
    }
}

message GetInvasionRs {
    repeated Invasion invasion = 1;
    extend Base
    {
      optional GetInvasionRs ext = 470;
    }
}

message GetAidRq {
    extend Base
    {
      optional GetAidRq ext = 471;
    }
}

message GetAidRs {
    repeated Aid aid = 1;
    extend Base
    {
      optional GetAidRs ext = 472;
    }
}

message SetGuardRq {
    required int64 lordId = 1;      //驻防部队的玩家id
    required int32 keyId = 2;       //army keyId
    extend Base
    {
      optional SetGuardRq ext = 473;
    }
}

message SetGuardRs {
    extend Base
    {
      optional SetGuardRs ext = 474;
    }
}

message GuardPosRq {
    required int32 pos = 1;
    required Form form = 2;
    extend Base
    {
      optional GuardPosRq ext = 475;
    }
}

message GuardPosRs {
    optional Army army = 1;
    extend Base
    {
      optional GuardPosRs ext = 476;
    }
}

message GetChatRq {
    extend Base
    {
      optional GetChatRq ext = 477;
    }
}

message GetChatRs {
    repeated Chat chat = 1;
    extend Base
    {
      optional GetChatRs ext = 478;
    }
}

message DoChatRq {
    required int32 channel = 1;     //频道 1.世界 2.军团 3.客服 4.私聊
    optional int32 shareType = 2;
    optional int64 target = 3;      //私聊的对象id

    repeated string msg = 4;
    extend Base
    {
      optional DoChatRq ext = 479;
    }
}

message DoChatRs {
    extend Base
    {
      optional DoChatRs ext = 480;
    }
}

message SynChatRq {
    required Chat chat = 1;
	optional string screenPlayerName=2;
    extend Base
    {
      optional SynChatRq ext = 1001;
    }
}

message GetDayiyTaskRq {
    extend Base
    {
      optional GetDayiyTaskRq ext = 483;
    }
}

message GetDayiyTaskRs {
    optional TaskDayiy taskDayiy = 1;       //日常信息
    repeated Task task = 2;             //任务信息
    extend Base
    {
      optional GetDayiyTaskRs ext = 484;
    }
}

message GetLiveTaskRq {
    extend Base
    {
      optional GetLiveTaskRq ext = 485;
    }
}

message GetLiveTaskRs {
    optional TaskLive taskLive = 1;     //活跃信息
    repeated Task task = 2;             //任务信息
    required int64  endTime=3;          //结束时间
    extend Base
    {
      optional GetLiveTaskRs ext = 486;
    }
}

message AcceptTaskRq {
    required int32 taskId = 1;
    extend Base
    {
      optional AcceptTaskRq ext = 487;
    }
}

message AcceptTaskRs {
    extend Base
    {
      optional AcceptTaskRs ext = 488;
    }
}

message AcceptNoTaskRq {
    extend Base
    {
      optional AcceptNoTaskRq ext = 489;
    }
}

message AcceptNoTaskRs {
    extend Base
    {
      optional AcceptNoTaskRs ext = 490;
    }
}

message SearchOlRq {
    required string name = 1;     //玩家名字
    extend Base
    {
      optional SearchOlRq ext = 481;
    }
}

message SearchOlRs {
    optional Man man = 1;
    extend Base
    {
      optional SearchOlRs ext = 482;
    }
}

message GetReportRq {
    required string name = 1;     //玩家名字
    required int32 reportKey = 2;
    extend Base
    {
      optional GetReportRq ext = 491;
    }
}

message GetReportRs {
    optional Report report = 1;
    optional int32 state = 2;       //1.OK 2.报告被删除
    extend Base
    {
      optional GetReportRs ext = 492;
    }
}

message ShareReportRq {
    required int32 channel = 1;         //1.世界 2.军团
    optional int32 reportKey = 2;       //分享的战报keyId
    optional TankData tankData = 3;     //分享的坦克数据
    optional int32 heroId = 4;              //分享将领
    optional MedalData medalData = 5;   //分享的勋章数据
    optional int32 awakenHeroKeyId = 6; //分享的觉醒将领数据
    extend Base
    {
      optional ShareReportRq ext = 493;
    }
}

message ShareReportRs {
    extend Base
    {
      optional ShareReportRs ext = 494;
    }
}

message TaskLiveAwardRq {
    optional int32 awardId = 1;         //活跃奖励
    extend Base
    {
      optional TaskLiveAwardRq ext = 495;
    }
}

message TaskLiveAwardRs {
    repeated Award award = 1;
    optional TaskLive taskLive = 2;     //活跃信息
    extend Base
    {
      optional TaskLiveAwardRs ext = 496;
    }
}

message TaskDaylyResetRq {
    extend Base
    {
      optional TaskDaylyResetRq ext = 497;
    }
}

message TaskDaylyResetRs {
    extend Base
    {
      optional TaskDaylyResetRs ext = 498;
    }
}

message RefreshDayiyTaskRq {
    extend Base
    {
      optional RefreshDayiyTaskRq ext = 499;
    }
}

message RefreshDayiyTaskRs {
    optional TaskDayiy taskDayiy = 1;       //日常信息
    repeated Task task = 2;             //任务信息
    extend Base
    {
      optional RefreshDayiyTaskRs ext = 500;
    }
}

message RetreatAidRq {
    required int64 lordId = 1;
    required int32 keyId = 2;
    extend Base
    {
      optional RetreatAidRq ext = 501;
    }
}

message RetreatAidRs {
    extend Base
    {
      optional RetreatAidRs ext = 502;
    }
}

message GetExtremeRq {
    required int32 extremeId = 1;
    extend Base
    {
      optional GetExtremeRq ext = 503;
    }
}

message GetExtremeRs {
    optional Extreme first = 1;    //普通副本
    repeated Extreme last3 = 2;    //探险副本(装备、配件、限时)
    extend Base
    {
      optional GetExtremeRs ext = 504;
    }
}

message ExtremeRecordRq {
    required int32 extremeId = 1;
    required int32 which = 2;       // 哪一条记录 0.首次 1.第一个 2.第二个 3.第三个
    extend Base
    {
      optional ExtremeRecordRq ext = 505;
    }
}

message ExtremeRecordRs {
    optional Record record = 1;
    extend Base
    {
      optional ExtremeRecordRs ext = 506;
    }
}

message SetDataRq {
    required int32 type = 1;        // 1.最大战力 2.关卡总星数 3.荣誉度 4.攻击强化 5.暴击强化 6.闪避强化 7.震慑 8.刚毅 9.勋章价值总和 10.总实力
    required int64 value = 2;
    optional Form form = 3;//设置总实力阵形
    extend Base
    {
      optional SetDataRq ext = 507;
    }
}

message SetDataRs {
    extend Base
    {
      optional SetDataRs ext = 508;
    }
}

message NewGetLiveTaskRq {
    extend Base
    {
      optional NewGetLiveTaskRq ext = 5801;
    }
}

message NewGetLiveTaskRs {
    optional TaskLive taskLive = 1;     //活跃信息
    repeated Task task = 2;             //任务信息
    required int64  endTime = 3;        //结束时间
    repeated int64  states = 4;         //礼物领取状态
    extend Base
    {
      optional NewGetLiveTaskRs ext = 5802;
    }
}

message NewTaskLiveAwardRq {
    required int32 awardId = 1;         //活跃奖励
    extend Base
    {
      optional NewTaskLiveAwardRq ext = 5803;
    }
}

message NewTaskLiveAwardRs {
    repeated Award award = 1;
    optional TaskLive taskLive = 2;     //活跃信息
    repeated int64  states = 3;         //礼物领取状态
    extend Base
    {
      optional NewTaskLiveAwardRs ext = 5804;
    }
}

message SynMailRq {
    required MailShow show = 1;
    extend Base
    {
      optional SynMailRq ext = 1003;
    }
}

message SynInvasionRq {
    required Invasion invasion = 1;
    extend Base
    {
      optional SynInvasionRq ext = 1005;
    }
}

message PtcFormRq {
    required int32 combatId = 1;
    extend Base
    {
      optional PtcFormRq ext = 509;
    }
}

message PtcFormRs {
    optional int32 state = 1;  //0.正常获取到 1.关卡已结束
    optional Form form = 2;
    extend Base
    {
      optional PtcFormRs ext = 510;
    }
}

message BeginWipeRq {
    extend Base
    {
      optional BeginWipeRq ext = 511;
    }
}

message BeginWipeRs {
    extend Base
    {
      optional BeginWipeRs ext = 512;
    }
}

message EndWipeRq {
    extend Base
    {
      optional EndWipeRq ext = 513;
    }
}

message EndWipeRs {
    optional int32 combatId = 1;
    repeated Award award = 2;
    extend Base
    {
      optional EndWipeRs ext = 514;
    }
}

message GetGuideGiftRq {
    extend Base
    {
      optional GetGuideGiftRq ext = 515;
    }
}

message GetGuideGiftRs {
    repeated Award award = 1;
	required int32 newerGift = 2;
    extend Base
    {
      optional GetGuideGiftRs ext = 516;
    }
}



message GetRankRq {
    required int32 type = 1;    //1.战力榜 2.关卡榜 3.荣誉榜 4.攻击强化 5.暴击强化 6.闪避强化 7.竞技场 8.极限副本 9.编制 10.震慑 11.刚毅 12.勋章价值 13.展示数量 14.军衔
    required int32 page = 2;
    extend Base
    {
      optional GetRankRq ext = 517;
    }
}

message GetRankRs {
    optional int32 rank = 1;
    repeated RankData rankData = 8;
    optional int64 maxFight = 3;
    extend Base
    {
      optional GetRankRs ext = 518;
    }
}

message GetPartyLiveRankRq {
    extend Base
    {
      optional GetPartyLiveRankRq ext = 519;
    }
}

message GetPartyLiveRankRs {
    repeated PartyLive partyLive = 1;
    extend Base
    {
      optional GetPartyLiveRankRs ext = 520;
    }
}

message SynPartyOutRq {
    required int32 partyId = 1;         //军团ID
    extend Base
    {
      optional SynPartyOutRq ext = 1007;
    }
}

message SynPartyAcceptRq {
    required int32 partyId = 1;         //军团ID
    required int32 accept = 2;          //0拒绝 1同意
    extend Base
    {
      optional SynPartyAcceptRq ext = 1009;
    }
}


message SetPortraitRq {
    required int32 portrait = 1;
    extend Base
    {
      optional SetPortraitRq ext = 521;
    }
}

message SetPortraitRs {
    extend Base
    {
      optional SetPortraitRs ext = 522;
    }
}

message GetLotteryExploreRq {
    extend Base
    {
      optional GetLotteryExploreRq ext = 523;
    }
}

message GetLotteryExploreRs {
    optional int32 singleFree = 1;      //单抽免费次数 1剩余一次，0不剩余
    optional Lottery lottery = 2;       // 探宝
    extend Base
    {
      optional GetLotteryExploreRs ext = 524;
    }
}

message PartyRecruitRq {
    extend Base
    {
      optional PartyRecruitRq ext = 525;
    }
}

message PartyRecruitRs {
    extend Base
    {
      optional PartyRecruitRs ext = 526;
    }
}

message BuyBuildRq {
    extend Base
    {
      optional BuyBuildRq ext = 527;
    }
}

message BuyBuildRs {
    optional int32 gold = 1;
    extend Base
    {
      optional BuyBuildRs ext = 528;
    }
}

message SynBlessRq {
    required Man man = 1;
    extend Base
    {
      optional SynBlessRq ext = 1011;
    }
}

message SynArmyRq {
    required ArmyStatu armyStatu = 1;
    extend Base
    {
      optional SynArmyRq ext = 1013;
    }
}


message GetActivityListRq {
    extend Base
    {
      optional GetActivityListRq ext = 529;
    }
}

message GetActivityListRs {
    repeated Activity activity = 1;
    extend Base
    {
      optional GetActivityListRs ext = 530;
    }
}

message GetActivityAwardRq {
    required int32 activityId = 1;      //活动
    optional int32 keyId = 2;           //奖励索引
    extend Base
    {
      optional GetActivityAwardRq ext = 531;
    }
}

message GetActivityAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional GetActivityAwardRs ext = 532;
    }
}

message ActLevelRq {
    extend Base
    {
      optional ActLevelRq ext = 533;
    }
}

message ActLevelRs {
    repeated ActivityCond activityCond = 1;
    extend Base
    {
      optional ActLevelRs ext = 534;
    }
}

message ActAttackRq {
    required int32 activityId = 1;      //  2.老雷霆计划     57.新雷霆计划
    extend Base
    {
      optional ActAttackRq ext = 535;
    }
}

message ActAttackRs {
    optional int32 state = 1;               //当前已攻打次数
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActAttackRs ext = 536;
    }
}

message ActFightRq {
    extend Base
    {
      optional ActFightRq ext = 537;
    }
}

message ActFightRs {
    optional int32 state = 1;                   //当前军团排名
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActFightRs ext = 538;
    }
}

message ActCombatRq {
    extend Base
    {
      optional ActCombatRq ext = 539;
    }
}

message ActCombatRs {
    optional int32 state = 1;                   //当前关卡排名
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActCombatRs ext = 540;
    }
}

message ActHonourRq {
    extend Base
    {
      optional ActHonourRq ext = 541;
    }
}

message ActHonourRs {
    optional int32 state = 1;                   //当前荣誉排名
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActHonourRs ext = 542;
    }
}

message GiftCodeRq {
    required string code = 1;
    extend Base
    {
      optional GiftCodeRq ext = 551;
    }
}

message GiftCodeRs {
    repeated Award award = 1;
    optional int32 state = 2;       //0.使用正常 1.该类型已兑换过 2.兑换码不存在 3.该码兑换过过 4.兑换码无效，5时效性已过,6渠道不对
    extend Base
    {
      optional GiftCodeRs ext = 552;
    }
}

message ActPartyLvRq {
    extend Base
    {
      optional ActPartyLvRq ext = 553;
    }
}

message ActPartyLvRs {
    optional int32 state = 1;                   //我们军团lv排名
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActPartyLvRs ext = 554;
    }
}

message ActPartyDonateRq {
    extend Base
    {
      optional ActPartyDonateRq ext = 555;
    }
}

message ActPartyDonateRs {
    optional CondState hallResource = 1;    //大厅资源捐献
    optional CondState hallGold = 2;        //大厅金币捐献
    optional CondState scienceResource = 3; //科技厅资源捐献
    optional CondState scienceGold = 4;     //科技厅金币捐献
    extend Base
    {
      optional ActPartyDonateRs ext = 556;
    }
}

message ActCollectRq {
    extend Base
    {
      optional ActCollectRq ext = 557;
    }
}

message ActCollectRs {
    optional CondState stone = 1;           //宝石采集
    optional CondState iron = 2;            //铁采集量
    optional CondState oil = 3;             //石油采集量
    optional CondState copper = 4;          //铜采集量
    optional CondState silicon = 5;         //硅石采集量
    extend Base
    {
      optional ActCollectRs ext = 558;
    }
}

message ActCombatSkillRq {
    extend Base
    {
      optional ActCombatSkillRq ext = 559;
    }
}

message ActCombatSkillRs {
    optional int32 state = 1;                   //攻打打副本次数
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActCombatSkillRs ext = 560;
    }
}

message ActPartyFightRq {
    extend Base
    {
      optional ActPartyFightRq ext = 561;
    }
}

message ActPartyFightRs {
    optional int32 state = 1;                   //军团战力排行
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActPartyFightRs ext = 562;
    }
}

message GetActionCenterRq {
    extend Base
    {
      optional GetActionCenterRq ext = 563;
    }
}

message GetActionCenterRs {
    repeated Activity activity = 1;
    extend Base
    {
      optional GetActionCenterRs ext = 564;
    }
}

message GetActMechaRq {
    extend Base
    {
      optional GetActMechaRq ext = 565;
    }
}

message GetActMechaRs {
    optional Mecha mechaSingle = 1;
    optional Mecha mechaTen = 2;
    extend Base
    {
      optional GetActMechaRs ext = 566;
    }
}

message DoActMechaRq {
    optional int32 mechaId = 1;
    extend Base
    {
      optional DoActMechaRq ext = 567;
    }
}

message DoActMechaRs {
    optional int32 crit = 1;                //下一次的暴击倍数
    optional TwoInt twoInt = 2;     //碎片p1是碎片1的数量 p2是碎片2的数量
    extend Base
    {
      optional DoActMechaRs ext = 568;
    }
}

message AssembleMechaRq {
    required int32 mechaId = 1;
    extend Base
    {
      optional AssembleMechaRq ext = 569;
    }
}

message AssembleMechaRs {
    repeated Award award = 1;
    extend Base
    {
      optional AssembleMechaRs ext = 570;
    }
}

message OlAwardRq {
    extend Base
    {
      optional OlAwardRq ext = 571;
    }
}

message OlAwardRs {
    optional int32 id = 1;
    repeated Award award = 2;
    extend Base
    {
      optional OlAwardRs ext = 572;
    }
}

message ActInvestRq {
    optional int32 activityId = 1;  //活动id
    extend Base
    {
      optional ActInvestRq ext = 573;
    }
}

message ActInvestRs {
    optional int32 state = 1;                   //0未参与，参与后则有等级
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActInvestRs ext = 574;
    }
}

message DoInvestRq {
    optional int32 activityId = 1;  //活动id
    extend Base
    {
      optional DoInvestRq ext = 575;
    }
}

message DoInvestRs {
    optional int32 gold = 1;
    extend Base
    {
      optional DoInvestRs ext = 576;
    }
}


message ActPayRedGiftRq {
    extend Base
    {
      optional ActPayRedGiftRq ext = 577;
    }
}

message ActPayRedGiftRs {
    optional int32 state = 1;                   //当天充值金额
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActPayRedGiftRs ext = 578;
    }
}

message ActEveryDayPayRq {
    extend Base
    {
      optional ActEveryDayPayRq ext = 579;
    }
}

message ActEveryDayPayRs {
    optional int32 state = 1;                   //当天充值金额
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActEveryDayPayRs ext = 580;
    }
}

message ActPayFirstRq {
    extend Base
    {
      optional ActPayFirstRq ext = 581;
    }
}

message ActPayFirstRs {
    optional int32 state = 1;                   //0未充值 其他已充值
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActPayFirstRs ext = 582;
    }
}

message ActQuotaRq {
    extend Base
    {
      optional ActQuotaRq ext = 583;
    }
}

message ActQuotaRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActQuotaRs ext = 584;
    }
}

message DoQuotaRq {
    required int32 quotaId = 1;             //限价ID
    optional int32 activityId = 2;          //活动ID
    extend Base
    {
      optional DoQuotaRq ext = 585;
    }
}

message DoQuotaRs {
    repeated Award award = 1;               //购买后获得的内容
    optional int32 gold = 2;                //剩余金币
    extend Base
    {
      optional DoQuotaRs ext = 586;
    }
}

message SynGoldRq {
    optional int32 gold = 1;            //当前金币数量
    optional int32 addGold = 2;         //变化的金币数量
    optional int32 addTopup = 3;        //变化的充值额度
    optional int32 vip = 4;             //当前vip
    optional string serialId = 5;       //内部订单号
    extend Base
    {
      optional SynGoldRq ext = 1015;
    }
}

message ActPurpleEqpCollRq {
    extend Base
    {
      optional ActPurpleEqpCollRq ext = 587;
    }
}

message ActPurpleEqpCollRs {
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActPurpleEqpCollRs ext = 588;
    }
}

message ActPurpleEqpUpRq {
    extend Base
    {
      optional ActPurpleEqpUpRq ext = 589;
    }
}

message ActPurpleEqpUpRs {
    repeated CondState condState = 1;
    extend Base
    {
      optional ActPurpleEqpUpRs ext = 590;
    }
}

message ActCrazyArenaRq {
    extend Base
    {
      optional ActCrazyArenaRq ext = 591;
    }
}

message ActCrazyArenaRs {
    optional int32 state = 1;                   //竞技场胜利次数
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActCrazyArenaRs ext = 592;
    }
}

message ActCrazyUpgradeRq {
    extend Base
    {
      optional ActCrazyUpgradeRq ext = 593;
    }
}

message ActCrazyUpgradeRs {
    repeated CondState condState = 1;
    extend Base
    {
      optional ActCrazyUpgradeRs ext = 594;
    }
}

message ActPartEvolveRq {
    extend Base
    {
      optional ActPartEvolveRq ext = 595;
    }
}

message ActPartEvolveRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActPartEvolveRs ext = 596;
    }
}

message ActFlashSaleRq {
    extend Base
    {
      optional ActFlashSaleRq ext = 597;
    }
}

message ActFlashSaleRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActFlashSaleRs ext = 598;
    }
}

message ActCostGoldRq {
    optional int32 activityId = 1;                  //活动id
    extend Base
    {
      optional ActCostGoldRq ext = 599;
    }
}

message ActCostGoldRs {
    optional int32 state = 1;                   //消费金币数量
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActCostGoldRs ext = 600;
    }
}

// --------------@文件分割标志@---------------

message ActContuPayRq {
    extend Base
    {
      optional ActContuPayRq ext = 601;
    }
}

message ActContuPayRs {
    optional int32 state = 1;
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActContuPayRs ext = 602;
    }
}

message ActFlashMetaRq {
    extend Base
    {
      optional ActFlashMetaRq ext = 603;
    }
}

message ActFlashMetaRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActFlashMetaRs ext = 604;
    }
}

message ActDayPayRq {
    extend Base
    {
      optional ActDayPayRq ext = 605;
    }
}

message ActDayPayRs {
    optional int32 state = 1;
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActDayPayRs ext = 606;
    }
}

message ActDayBuyRq {
    extend Base
    {
      optional ActDayBuyRq ext = 607;
    }
}

message ActDayBuyRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActDayBuyRs ext = 608;
    }
}

message SynApplyRq {
    optional int32 applyCount = 1;            //申请数量
    extend Base
    {
      optional SynApplyRq ext = 1017;
    }
}

message GetPartyLvRankRq {
    required int32 page = 1;   //每一页显示20个，第一页page=0，第二页page=1
    extend Base
    {
      optional GetPartyLvRankRq ext = 609;
    }
}

message GetPartyLvRankRs {
    optional PartyLvRank party = 1;                 //自己军团排名
    repeated PartyLvRank partyLvRank = 2;           //军团排名列表
    extend Base
    {
      optional GetPartyLvRankRs ext = 610;
    }
}

message ActMonthSaleRq {
    extend Base
    {
      optional ActMonthSaleRq ext = 611;
    }
}

message ActMonthSaleRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActMonthSaleRs ext = 612;
    }
}

message ActGiftOLRq {
    extend Base
    {
      optional ActGiftOLRq ext = 613;
    }
}

message ActGiftOLRs {
    optional int32 state = 1;                   //在线时长
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActGiftOLRs ext = 614;

    }
}

message ActMonthLoginRq {
    extend Base
    {
      optional ActMonthLoginRq ext = 615;
    }
}

message ActMonthLoginRs {
    optional int32 state = 1;                   //每月登录天数取100的模（值=月份*10000+登录时间*100+天数）
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActMonthLoginRs ext = 616;
    }
}

message GetActAmyRebateRq {
    optional int32 activityId = 1;
    extend Base
    {
      optional GetActAmyRebateRq ext = 617;
    }
}

message GetActAmyRebateRs {
    repeated AmyRebate amyRebate = 1;
    extend Base
    {
      optional GetActAmyRebateRs ext = 618;
    }
}

message GetActAmyfestivityRq {
    optional int32 activityId = 1;
    extend Base
    {
      optional GetActAmyfestivityRq ext = 619;
    }
}

message GetActAmyfestivityRs {
    optional int64 state = 1;                   //欢庆值
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional GetActAmyfestivityRs ext = 620;
    }
}

message DoActAmyRebateRq {
    required int32 rebateId = 1;
    optional int32 activityId = 2;
    extend Base
    {
      optional DoActAmyRebateRq ext = 621;
    }
}

message DoActAmyRebateRs {
    optional int32 gold = 1;                    //玩家身上的金币
    repeated Award award = 2;                   //奖励数据
    extend Base
    {
      optional DoActAmyRebateRs ext = 622;
    }
}

message DoActAmyfestivityRq {
    required int32 keyId = 1;           //奖励索引
    optional int32 activityId = 2;
    extend Base
    {
      optional DoActAmyfestivityRq ext = 623;
    }
}

message DoActAmyfestivityRs {
    repeated Award award = 1;
    extend Base
    {
      optional DoActAmyfestivityRs ext = 624;
    }
}

message GetActFortuneRq {
    extend Base
    {
      optional GetActFortuneRq ext = 625;
    }
}

message GetActFortuneRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;               //转盘
    optional int32 free = 3;                //免费次数
    optional string displayList = 4;                //显示奖励
    extend Base
    {
      optional GetActFortuneRs ext = 626;
    }
}

message GetActFortuneRankRq {
    extend Base
    {
      optional GetActFortuneRankRq ext = 627;
    }
}

message GetActFortuneRankRs {
    optional int32 score = 1;                   //我的积分
    repeated ActPlayerRank actPlayerRank = 2;   //排行榜   （只显示前十名）
    optional bool open = 3;                     //true可领奖励 1 不可领奖
    repeated RankAward rankAward = 4;           //排名奖励信息
    optional int32 status = 5;                  //0未领 1已领
    extend Base
    {
      optional GetActFortuneRankRs ext = 628;
    }
}

message DoActFortuneRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActFortuneRq ext = 629;
    }
}

message DoActFortuneRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActFortuneRs ext = 630;
    }
}

message GetRankAwardRq {
    required int32 activityId = 1;              //活动ID
    optional int32 rankType = 2;                //排名类型
    extend Base
    {
      optional GetRankAwardRq ext = 631;
    }
}

message GetRankAwardRs {
    repeated Award award = 1;                   //奖励
    extend Base
    {
      optional GetRankAwardRs ext = 632;
    }
}

message GetActBeeRq {
    optional int32 activityId = 1;          //活动id   102.老    128.新
    extend Base
    {
      optional GetActBeeRq ext = 633;
    }
}

message GetActBeeRs {
    optional CondState stone = 1;           //宝石采集
    optional CondState iron = 2;            //铁采集量
    optional CondState oil = 3;         //石油采集量
    optional CondState copper = 4;          //铜采集量
    optional CondState silicon = 5;         //硅石采集量
    extend Base
    {
      optional GetActBeeRs ext = 634;
    }
}

message GetActBeeRankRq {
    optional int32 activityId = 1;          //活动id   102.老    127.新
    extend Base
    {
      optional GetActBeeRankRq ext = 635;
    }
}

message GetActBeeRankRs {
    optional bool open = 1;             //true可领奖励 false不可领奖
    repeated BeeRank beeRank = 2;       //排行榜
    repeated RankAward rankAward = 3;   //排名奖励信息
    extend Base
    {
      optional GetActBeeRankRs ext = 636;
    }
}

message GetRankAwardListRq {
    required int32 activityId = 1;          //活动ID
    required int32 rankType = 2;            //榜单类型
    extend Base
    {
      optional GetRankAwardListRq ext = 637;
    }
}

message GetRankAwardListRs {
    optional bool open = 1;                 //true可领奖励 false不可领奖
    repeated RankAward rankAward = 2;       //排行榜   奖励
    extend Base
    {
      optional GetRankAwardListRs ext = 638;
    }
}

message EveLoginRq {
    extend Base
    {
      optional EveLoginRq ext = 639;
    }
}

message EveLoginRs {
    optional bool display = 1;          //true显示 false不显示
    optional bool accept = 2;           //true已领取,false未领取
    repeated int32 logins = 3;          //抽取的物品[loginId,loginId,loginId]
    extend Base
    {
      optional EveLoginRs ext = 640;
    }
}

message AcceptEveLoginRq {
    extend Base
    {
      optional AcceptEveLoginRq ext = 641;
    }
}

message AcceptEveLoginRs {
    repeated int32 logins = 1;
    repeated Award award = 2;
    extend Base
    {
      optional AcceptEveLoginRs ext = 642;
    }
}

message GetActProfotoRq {
    extend Base
    {
      optional GetActProfotoRq ext = 643;
    }
}

message GetActProfotoRs {
    optional Profoto profoto = 1;       //宝图
    optional Profoto trust = 2;         //信物
    repeated Profoto parts = 3;         //碎片
    extend Base
    {
      optional GetActProfotoRs ext = 644;
    }
}

message DoActProfotoRq {
    extend Base
    {
      optional GetActProfotoRq ext = 645;
    }
}

message DoActProfotoRs {
    repeated Award award = 1;       //奖励
    repeated Profoto parts = 2;     //碎片
    extend Base
    {
      optional DoActProfotoRs ext = 646;
    }
}

message UnfoldProfotoRq {
    extend Base
    {
      optional UnfoldProfotoRq ext = 647;
    }
}

message UnfoldProfotoRs {
    repeated Award award = 1;       //奖励
    optional Profoto profoto = 2;       //宝图
    optional Profoto trust = 3;     //信物
    extend Base
    {
      optional UnfoldProfotoRs ext = 648;
    }
}


message GetActPartDialRq {
    extend Base
    {
      optional GetActPartDialRq ext = 649;
    }
}

message GetActPartDialRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;           //转盘
    optional int32 free = 3;                //免费次数
    optional string displayList = 4;        //显示奖励
    extend Base
    {
      optional GetActPartDialRs ext = 650;
    }
}

message GetActPartDialRankRq {
    extend Base
    {
      optional GetActPartDialRankRq ext = 651;
    }
}

message GetActPartDialRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 1 不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息


    extend Base
    {
      optional GetActPartDialRankRs ext = 652;
    }
}

message DoActPartDialRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActPartDialRq ext = 653;
    }
}

message DoActPartDialRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActPartDialRs ext = 654;
    }
}

message ActEnemySaleRq {
    extend Base
    {
      optional ActEnemySaleRq ext = 655;
    }
}

message ActEnemySaleRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActEnemySaleRs ext = 656;
    }
}

message ActUpEquipCritRq {
    extend Base
    {
      optional ActUpEquipCritRq ext = 657;
    }
}

message ActUpEquipCritRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActUpEquipCritRs ext = 658;
    }
}

message DoActTankRaffleRq {
    required int32 type = 1;        //1单抽 2十倍抽取
    extend Base
    {
      optional DoActTankRaffleRq ext = 659;
    }
}

message DoActTankRaffleRs {
    repeated int32 color = 1;               //1蓝 2黄 3绿 4红
    repeated Award award = 2;               //奖励
    extend Base
    {
      optional DoActTankRaffleRs ext = 660;
    }
}

message GetActTankRaffleRq {
    extend Base
    {
      optional GetActTankRaffleRq ext = 661;
    }
}

message GetActTankRaffleRs {
    optional int32 free = 1;                //剩余免费次数
    extend Base
    {
      optional GetActTankRaffleRs ext = 662;
    }
}

message WarRegRq {
    required Form form = 1;
    required int64 fight = 2;
    extend Base
    {
      optional WarRegRq ext = 663;
    }
}

message WarRegRs {
    optional int64 fight = 1;
    optional Army army = 2;
    extend Base
    {
      optional WarRegRs ext = 664;
    }
}

message WarMembersRq {
    extend Base
    {
      optional WarMembersRq ext = 665;
    }
}

message WarMembersRs {
    repeated MemberReg memberReg = 1;
    extend Base
    {
      optional WarMembersRs ext = 666;
    }
}

message WarPartiesRq {
    required int32 page = 1;            //页数，每页20条，从0开始
    extend Base
    {
      optional WarPartiesRq ext = 667;
    }
}

message WarPartiesRs {
    repeated PartyReg partyReg = 1;
    optional int32 total = 2;
    extend Base
    {
      optional WarPartiesRs ext = 668;
    }
}

message WarReportRq {
    required int32 type = 1;            // `.全服战况 2.军团战况 3.个人战况
    extend Base
    {
      optional WarReportRq ext = 669;
    }
}

message WarReportRs {
    repeated WarRecord record = 1;
    extend Base
    {
      optional WarReportRs ext = 670;
    }
}

message WarCancelRq {
    extend Base
    {
      optional WarCancelRq ext = 671;
    }
}

message WarCancelRs {
    extend Base
    {
      optional WarCancelRs ext = 672;
    }
}

message SynWarRecordRq {
    required WarRecord record = 1;
    extend Base
    {
      optional SynWarRecordRq ext = 1019;
    }
}

message GetActDestroyRq {
    extend Base
    {
      optional GetActDestroyRq ext = 673;
    }
}

message GetActDestroyRs {
    repeated CondState destoryTank = 1;     //ActivityCond中单param:0全部 1坦克 2战车 3火炮 4火箭
    extend Base
    {
      optional GetActDestroyRs ext = 674;
    }
}

message GetActDestroyRankRq {
    extend Base
    {
      optional GetActDestroyRankRq ext = 675;
    }
}

message GetActDestroyRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 1 不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息

    extend Base
    {
      optional GetActDestroyRankRs ext = 676;
    }
}

message ActReFristPayRq {
    extend Base
    {
      optional ActReFristPayRq ext = 677;
    }
}

message ActReFristPayRs {
    repeated CondState condState = 1;           //

    extend Base
    {
      optional ActReFristPayRs ext = 678;
    }
}

message ActGiftPayRq {
    optional int32 activityId = 1;              //活动ID
    extend Base
    {
      optional ActGiftPayRq ext = 679;
    }
}

message ActGiftPayRs {
    optional int32 state = 1;                   //今天充值
    repeated ActivityCond activityCond = 2;

    extend Base
    {
      optional ActGiftPayRs ext = 680;
    }
}

message GetPartyAmyPropsRq {
    extend Base
    {
      optional GetPartyAmyPropsRq ext = 681;
    }
}

message GetPartyAmyPropsRs {
    repeated Prop prop = 1;                 //道具

    extend Base
    {
      optional GetPartyAmyPropsRs ext = 682;
    }
}

message SendPartyAmyPropRq {
    repeated int64 sendId = 1;              //发送给谁
    optional Prop prop = 2;                 //发送道具
    extend Base
    {
      optional SendPartyAmyPropRq ext = 683;
    }
}

message SendPartyAmyPropRs {
    optional Prop prop = 1;                 //道具剩余数量
    extend Base
    {
      optional SendPartyAmyPropRs ext = 684;
    }
}

message WarWinAwardRq {
    extend Base
    {
      optional WarWinAwardRq ext = 685;
    }
}

message WarWinAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional WarWinAwardRs ext = 686;
    }
}

message WarRankRq {
    required int32 page = 1;
    extend Base
    {
      optional WarRankRq ext = 687;
    }
}

message WarRankRs {
    repeated WarRank warRank = 1;
    optional WarRank selfParty = 2;
    extend Base
    {
      optional WarRankRs ext = 688;
    }
}

message WarWinRankRq {
    extend Base
    {
      optional WarWinRankRq ext = 689;
    }
}

message WarWinRankRs {
    repeated WarWinRank winRank = 1;
    optional int32 winCount = 2;           //自己的连胜次数
    optional bool canGet = 3;              // true 可以领取 false 不可领取
    optional int64 fight = 4;
    extend Base
    {
      optional WarWinRankRs ext = 690;
    }
}

message UseAmyPropRq {
    required Prop prop = 1;             //
    extend Base
    {
      optional UseAmyPropRq ext = 691;
    }
}

message UseAmyPropRs {
    repeated Award award = 1;           //
    extend Base
    {
      optional UseAmyPropRs ext = 692;
    }
}

message SynWarStateRq {
    required int32 state = 1;         //1.战斗中 2.战斗结束 3.发放奖励结束 4.取消
    extend Base
    {
      optional SynWarStateRq ext = 1021;
    }
}

message GetWarFightRq {
    required int32 index = 1;           //序列号 从0开始
    extend Base
    {
      optional GetWarFightRq ext = 693;
    }
}

message GetWarFightRs {
    optional RptAtkWar rpt = 1;           //战报
    extend Base
    {
      optional GetWarFightRs ext = 694;
    }
}

message GetActTechRq {
    extend Base
    {
      optional GetActTechRq ext = 695;
    }
}

message GetActTechRs {
    repeated Tech tech = 1;           //兑换列表
    extend Base
    {
      optional GetActTechRs ext = 696;
    }
}

message DoActTechRq {
    required int32 techId = 1;      //技术ID
    extend Base
    {
      optional DoActTechRq ext = 697;
    }
}

message DoActTechRs {
    repeated Award award = 1;           //得到奖励
    extend Base
    {
      optional DoActTechRs ext = 698;
    }
}

message GetActGeneralRq {
    optional int32 actId = 1;               //活动id
    extend Base
    {
      optional GetActGeneralRq ext = 699;
    }
}

message GetActGeneralRs {
    optional int32 score = 1;               //我的积分
    repeated General general = 2;           //招募信息
    optional int32 count = 3;               //已抽取多少次
    optional int32 luck = 4;                //幸运值
    extend Base
    {
      optional GetActGeneralRs ext = 700;
    }
}

message DoActGeneralRq {
    required int32 generalId = 1;
    optional int32 actId = 2;               //活动id
    extend Base
    {
      optional DoActGeneralRq ext = 701;
    }
}

message DoActGeneralRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    optional int32 count = 3;                   //已抽取多少次
    extend Base
    {
      optional DoActGeneralRs ext = 702;
    }
}

message GetActGeneralRankRq {
    optional int32 actId = 1;               //活动id
    extend Base
    {
      optional GetActGeneralRankRq ext = 703;
    }
}

message GetActGeneralRankRs {
    optional bool open = 1;                     //true可领奖
    optional int32 score = 2;                   //我的积分
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息
    extend Base
    {
      optional GetActGeneralRankRs ext = 704;
    }
}

message ActVipGiftRq {
    extend Base
    {
      optional ActVipGiftRq ext = 705;
    }
}

message ActVipGiftRs {
    repeated QuotaVip quotaVip = 1;

    extend Base
    {
      optional ActVipGiftRs ext = 706;
    }
}

message ActPayContu4Rq {
    extend Base
    {
      optional ActPayContu4Rq ext = 707;
    }
}

message ActPayContu4Rs {
    required int32 state = 1;                   //连续充值天数
    repeated ActivityCond activityCond = 2;

    extend Base
    {
      optional ActPayContu4Rs ext = 708;
    }
}

message DoPartyTipAwardRq {
    extend Base
    {
      optional DoPartyTipAwardRq ext = 709;
    }
}

message DoPartyTipAwardRs {
    repeated Award award = 1;

    extend Base
    {
      optional DoPartyTipAwardRs ext = 710;
    }
}

message GetActEDayPayRq {
    extend Base
    {
      optional GetActEDayPayRq ext = 711;
    }
}

message GetActEDayPayRs {
    required int32 state = 1;           //是否已充值
    optional int32 goldBoxId = 2;       //金币箱子
    optional int32 propBoxId = 3;       //道具箱子

    extend Base
    {
      optional GetActEDayPayRs ext = 712;
    }
}

message DoActEDayPayRq {
    extend Base
    {
      optional DoActEDayPayRq ext = 713;
    }
}

message DoActEDayPayRs {
    repeated Award award = 1;           //开出金币以及道具

    extend Base
    {
      optional DoActEDayPayRs ext = 714;
    }
}

message DoActVipGiftRq {
    required int32 vip = 1;
    extend Base
    {
      optional DoActVipGiftRq ext = 715;
    }
}

message DoActVipGiftRs {
    repeated Award award = 1;
    optional int32 gold = 2;

    extend Base
    {
      optional DoActVipGiftRs ext = 716;
    }
}

message GetBossRq {
    extend Base
    {
      optional GetBossRq ext = 717;
    }
}

message GetBossRs {
    optional int32 cdTime = 1;          //cd结束时间
    optional int32 hurtRank = 2;        //伤害排名
    optional string killer = 3;         //boss终结者
    optional int32 autoFight = 4;       //是否设置自动战斗
    optional int32 bless1 = 5;          //祝福等级
    optional int32 bless2 = 6;
    optional int32 bless3 = 7;
    optional int64 hurt = 8;            //玩家伤害
    optional int32 which = 9;           //当前第几管血
    optional int32 bossHp = 10;         //当前血量万分比
    optional int32 state = 11;          //0.初始（世界boss未出）1.准备中 2.战斗中 3.boss挂了 4.战斗结束
    optional int64 totalHurt = 12;      //boss受到的总伤害
    extend Base
    {
      optional GetBossRs ext = 718;
    }
}

message GetBossHurtRankRq {
    extend Base
    {
      optional GetBossHurtRankRq ext = 719;
    }
}

message GetBossHurtRankRs {
    repeated HurtRank hurtRank = 1;
    optional int64 hurt = 2;
    optional int32 rank = 3;
    optional bool canGet = 4;              // true 可以领取 false 不可领取
    extend Base
    {
      optional GetBossHurtRankRs ext = 720;
    }
}

message SetBossAutoFightRq {
    required bool autoFight = 1;
    extend Base
    {
      optional SetBossAutoFightRq ext = 721;
    }
}

message SetBossAutoFightRs {
    extend Base
    {
      optional SetBossAutoFightRs ext = 722;
    }
}

message BlessBossFightRq {
    required int32 index = 1;           //1.穿刺 2.暴击 3.加伤
    extend Base
    {
      optional BlessBossFightRq ext = 723;
    }
}

message BlessBossFightRs {
    optional int32 lv = 1;
    optional int32 gold = 2;
    extend Base
    {
      optional BlessBossFightRs ext = 724;
    }
}

message FightBossRq {
    extend Base
    {
      optional FightBossRq ext = 725;
    }
}

message FightBossRs {
    optional int32 result = 1;                  //-1失败 1.胜利 2.冷却中
    optional Record record = 2;
    repeated Award award = 3;
    // optional Form form = 4;
    optional int32 coldTime = 4;                //传开始冷却的时间
    optional int64 hurt = 5;
    optional int32 rank = 6;
    optional int32 which = 7;
    optional int32 bossHp = 8;
    extend Base
    {
      optional FightBossRs ext = 726;
    }
}

message BuyBossCdRq {
    required int32 s = 1;                       //客户端剩余秒数
    extend Base
    {
      optional BuyBossCdRq ext = 727;
    }
}

message BuyBossCdRs {
    optional int32 gold = 1;
    extend Base
    {
      optional BuyBossCdRs ext = 728;
    }
}

message BossHurtAwardRq {
    extend Base
    {
      optional BossHurtAwardRq ext = 729;
    }
}

message BossHurtAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional BossHurtAwardRs ext = 730;
    }
}

message ComposeSantRq {
    extend Base
    {
      optional ComposeSantRq ext = 731;
    }
}

message ComposeSantRs {
    repeated Award award = 1;
    extend Base
    {
      optional ComposeSantRs ext = 732;
    }
}

message SynResourceRq {
    optional int64 iron = 1;    //铁
    optional int64 oil = 2;     //石油
    optional int64 copper = 3;  //铜
    optional int64 silicon = 4; //硅
    optional int64 stone = 5;   //宝石
    extend Base
    {
      optional SynResourceRq ext = 1023;
    }
}

message GetTipFriendsRq {
    extend Base
    {
      optional GetTipFriendsRq ext = 733;
    }
}

message GetTipFriendsRs {
    repeated Man man = 1;                   //lordId，icon，昵称
    extend Base
    {
      optional GetTipFriendsRs ext = 734;
    }
}

message AddTipFriendsRq {
    repeated int64 lordId = 1;
    extend Base
    {
      optional AddTipFriendsRq ext = 735;
    }
}

message AddTipFriendsRs {
    extend Base
    {
      optional AddTipFriendsRs ext = 736;
    }
}

message BuyArenaCdRq {
    required int32 s = 1;                       //客户端剩余秒数
    extend Base
    {
      optional BuyArenaCdRq ext = 737;
    }
}

message BuyArenaCdRs {
    optional int32 gold = 1;
    extend Base
    {
      optional BuyArenaCdRs ext = 738;
    }
}

message BuyAutoBuildRq {
    extend Base
    {
      optional BuyAutoBuildRq ext = 739;
    }
}

message BuyAutoBuildRs {
    optional int32 gold = 1;
    optional int32 upBuildTime = 2;
    extend Base
    {
      optional BuyAutoBuildRs ext = 740;
    }
}

message SetAutoBuildRq {
    optional bool state = 1;
    extend Base
    {
      optional SetAutoBuildRq ext = 741;
    }
}

message SetAutoBuildRs {
    optional int32 onBuild = 1;
    optional int32 upBuildTime = 2;
    extend Base
    {
      optional SetAutoBuildRs ext = 742;
    }
}

message SynBuildRq {
    optional BuildQue queue = 1;
    optional int32 state = 2;       //1.开始升级 2.升级结束
    extend Base
    {
      optional SynBuildRq ext = 1025;
    }
}

message ActFesSaleRq {
    optional int32 activityId = 1;               //活动ID
    extend Base
    {
      optional ActFesSaleRq ext = 743;
    }
}

message ActFesSaleRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActFesSaleRs ext = 744;
    }
}

message GetActConsumeDialRq {
    extend Base
    {
      optional GetActConsumeDialRq ext = 745;
    }
}

message GetActConsumeDialRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;           //转盘
    optional int32 free = 3;                //免费次数
    optional int32 count = 4;               //剩余次数
    optional string displayList = 5;        //显示奖励
    extend Base
    {
      optional GetActConsumeDialRs ext = 746;
    }
}

message GetActConsumeDialRankRq {
    extend Base
    {
      optional GetActConsumeDialRankRq ext = 747;
    }
}

message GetActConsumeDialRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 1 不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息

    extend Base
    {
      optional GetActConsumeDialRankRs ext = 748;
    }
}

message DoActConsumeDialRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActConsumeDialRq ext = 749;
    }
}

message DoActConsumeDialRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActConsumeDialRs ext = 750;
    }
}

message GetActVacationlandRq {
    extend Base
    {
      optional GetActVacationlandRq ext = 751;
    }
}

message GetActVacationlandRs {
    optional int32 topup = 1;                   //累计充值额度
    optional int32 villageId = 2;               //0未购买 1-n购买的度假村ID
    repeated Village village = 3;               //度假村
    repeated VillageAward villageAward = 4;     //度假村的奖励
    extend Base
    {
      optional GetActVacationlandRs ext = 752;
    }
}

message BuyActVacationlandRq {
    optional int32 villageId = 1;
    extend Base
    {
      optional BuyActVacationlandRq ext = 753;
    }
}

message BuyActVacationlandRs {
    extend Base
    {
      optional BuyActVacationlandRs ext = 754;
    }
}

message DoActVacationlandRq {
    optional int32 landId = 1;              //唯一键
    extend Base
    {
      optional DoActVacationlandRq ext = 755;
    }
}

message DoActVacationlandRs {
    repeated Award award = 1;               //奖励
    extend Base
    {
      optional DoActVacationlandRs ext = 756;
    }
}

message GetActPartCashRq {
    extend Base
    {
      optional GetActPartCashRq ext = 757;
    }
}

message GetActPartCashRs {
    repeated Cash cash = 1;
    extend Base
    {
      optional GetActPartCashRs ext = 758;
    }
}

message DoPartCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional DoPartCashRq ext = 759;
    }
}

message DoPartCashRs {
    optional Award award = 1;
    repeated Award costList = 2;
    extend Base
    {
      optional DoPartCashRs ext = 760;
    }
}

message GetActEquipCashRq {
    extend Base
    {
      optional GetActEquipCashRq ext = 761;
    }
}

message GetActEquipCashRs {
    repeated Cash cash = 1;
    extend Base
    {
      optional GetActEquipCashRs ext = 762;
    }
}

message DoEquipCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional DoEquipCashRq ext = 763;
    }
}

message DoEquipCashRs {
    optional Award award = 1;
    repeated Award costList = 2;
    extend Base
    {
      optional DoEquipCashRs ext = 764;
    }
}

message GetActPartResolveRq {
    extend Base
    {
      optional GetActPartResolveRq ext = 765;
    }
}

message GetActPartResolveRs {
    optional int32 state = 1;                   //芯片数量
    repeated PartResolve partResolve = 2;       //
    extend Base
    {
      optional GetActPartResolveRs ext = 766;
    }
}

message DoActPartResolveRq {
    optional int32 resolveId = 1;
    extend Base
    {
      optional DoActPartResolveRq ext = 767;
    }
}

message DoActPartResolveRs {
    repeated Award award = 1;
    extend Base
    {
      optional DoActPartResolveRs ext = 768;
    }
}

message RefshPartCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional RefshPartCashRq ext = 769;
    }
}

message RefshPartCashRs {
    optional Cash cash = 1;
    extend Base
    {
      optional RefshPartCashRs ext = 770;
    }
}

message RefshEquipCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional RefshEquipCashRq ext = 771;
    }
}

message RefshEquipCashRs {
    optional Cash cash = 1;
    extend Base
    {
      optional RefshEquipCashRs ext = 772;
    }
}

message SynStaffingRq {
    optional int32 staffing = 1;
    optional int32 staffingLv = 2;
    optional int32 staffingExp = 3;
    extend Base
    {
      optional SynStaffingRq ext = 1027;
    }
}

message GetStaffingRq {
    extend Base
    {
      optional GetStaffingRq ext = 773;
    }
}

message GetStaffingRs {
    optional int32 ranking = 1;
    optional int32 worldLv = 2;
    extend Base
    {
      optional GetStaffingRs ext = 774;
    }
}
message GetActGambleRq {
    extend Base
    {
      optional GetActGambleRq ext = 775;
    }
}

message GetActGambleRs {
    optional int32 topup = 1;                   //我的总充值
    optional int32 count = 2;                   //剩余次数
    optional int32 price = 3;                   //已下注档位（下注档位由低到高顺序下注）
    repeated TopupGamble topupGamble = 4;           //下注数据
    extend Base
    {
      optional GetActGambleRs ext = 776;
    }
}

message DoActGambleRq {
    extend Base
    {
      optional DoActGambleRq ext = 777;
    }
}

message DoActGambleRs {
    optional int32 gold = 1;                //抽中金币
    extend Base
    {
      optional DoActGambleRs ext = 778;
    }
}

message GetActPayTurntableRq {
    extend Base
    {
      optional GetActPayTurntableRq ext = 779;
    }
}

message GetActPayTurntableRs {
    optional int32 topup = 1;                   //我的总充值
    optional int32 count = 2;                   //剩余次数
    optional int32 paycount = 3;                //充值金额得到一次
    optional TopupGamble topupGamble = 4;       //转盘数据
    extend Base
    {
      optional GetActPayTurntableRs ext = 780;
    }
}

message DoActPayTurntableRq {
	optional int32 count = 1;//抽取次数
    extend Base
    {
      optional DoActPayTurntableRq ext = 781;
    }
}

message DoActPayTurntableRs {
    repeated Award award = 1;               //抽中奖励
    extend Base
    {
      optional DoActPayTurntableRs ext = 782;
    }
}

message GetSeniorMapRq {
    extend Base
    {
      optional GetSeniorMapRq ext = 783;
    }
}

message GetSeniorMapRs {
    repeated SeniorMapData data = 1;
    optional int32 count = 2;
    optional int32 limit = 3;
    optional int32 buy = 4;
    extend Base
    {
      optional GetSeniorMapRs ext = 784;
    }
}

message AtkSeniorMineRq {
    required int32 pos = 1;
    required Form form = 2;
    optional int32 type = 3;    //1.掠夺 2.占领
    extend Base
    {
      optional AtkSeniorMineRq ext = 785;
    }
}

message AtkSeniorMineRs {
    optional Army army = 1;
    optional int32 count = 2;
    extend Base
    {
      optional AtkSeniorMineRs ext = 786;
    }
}

message SctSeniorMineRq {
    required int32 pos = 1;
    extend Base
    {
      optional SctSeniorMineRq ext = 787;
    }
}

message SctSeniorMineRs {
    optional Mail mail = 1;
    extend Base
    {
      optional SctSeniorMineRs ext = 788;
    }
}

message ScoreRankRq {
    extend Base
    {
      optional ScoreRankRq ext = 789;
    }
}

message ScoreRankRs {
    repeated ScoreRank scoreRank = 1;
    optional int32 score = 2;               //自己的积分
    optional int32 canGet = 3;               // 0： 不可领取  1：未领取  2:已领取
    optional int32 rank = 4;                //自己的排名
    extend Base
    {
      optional ScoreRankRs ext = 790;
    }
}

message ScorePartyRankRq {
    extend Base
    {
      optional ScorePartyRankRq ext = 791;
    }
}

message ScorePartyRankRs {
    repeated ScoreRank scoreRank = 1;
    optional int32 score = 2;               //本军团积分
    optional int32 canGet = 3;               // 0： 不可领取  1：未领取  2:已领取
    optional int32 rank = 4;                //本军团排名
    extend Base
    {
      optional ScorePartyRankRs ext = 792;
    }
}

message BuySeniorRq {
    extend Base
    {
      optional BuySeniorRq ext = 793;
    }
}

message BuySeniorRs {
    optional int32 count = 1;       //剩余掠夺次数
    optional int32 gold = 2;
    optional int32 buy = 3;         //已购买了几次
    extend Base
    {
      optional BuySeniorRs ext = 794;
    }
}

message ScoreAwardRq {
    extend Base
    {
      optional ScoreAwardRq ext = 795;
    }
}

message ScoreAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional ScoreAwardRs ext = 796;
    }
}

message PartyScoreAwardRq {
    extend Base
    {
      optional PartyScoreAwardRq ext = 797;
    }
}

message PartyScoreAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional PartyScoreAwardRs ext = 798;
    }
}

message GetActCarnivalRq {
    extend Base
    {
      optional GetActCarnivalRq ext = 799;
    }
}

message GetActCarnivalRs {
    optional CondState portrait = 1;            //头像奖励
    optional CondState payFrist = 2;            //首充
    optional CondState payTopup = 3;            //累充领奖(可重复领奖)
    extend Base
    {
      optional GetActCarnivalRs ext = 800;
    }
}

// --------------@文件分割标志@---------------

message GetActPrayRq {
    extend Base
    {
      optional GetActPrayRq ext = 801;
    }
}

message GetActPrayRs {
    repeated Pray pray = 1;                 //祈福信息
    extend Base
    {
      optional GetActPrayRs ext = 802;
    }
}

message DoActPrayRq {
    optional int32 prayCardId = 1;          //祈福卡编号
    optional int32 prayId = 2;              //祈福ID(1-6)
    extend Base
    {
      optional DoActPrayRq ext = 803;
    }
}

message DoActPrayRs {
    optional Pray pray = 1;                 //祈福信息
    extend Base
    {
      optional DoActPrayRs ext = 804;
    }
}

message ActPrayAwardRq {
    optional int32 type = 1;                //1.领取 2.金币消除CD立即领取奖励
    optional int32 prayId = 2;              //祈福ID
    extend Base
    {
      optional ActPrayAwardRq ext = 805;
    }
}

message ActPrayAwardRs {
    optional int32 gold = 1;                //
    repeated Award award = 2;               //祈福信息
    extend Base
    {
      optional ActPrayAwardRs ext = 806;
    }
}

message GetActPartyDonateRankRq {
    extend Base
    {
      optional GetActPartyDonateRankRq ext = 807;
    }
}

message GetActPartyDonateRankRs {
    optional ActPartyRank party = 1;     //本军团信息
    optional bool open = 2;                     //活动开启或未开启领奖
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPartyRank actPartyRank = 4;     //排行榜（只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息

    extend Base
    {
      optional GetActPartyDonateRankRs ext = 808;
    }
}

message GetPartyRankAwardRq {
    required int32 activityId = 1;              //活动ID
    extend Base
    {
      optional GetPartyRankAwardRq ext = 809;
    }
}

message GetPartyRankAwardRs {
    repeated Award award = 1;                   //奖励
    extend Base
    {
      optional GetPartyRankAwardRs ext = 810;
    }
}

//将领升阶
message MultiHeroImproveRq {
    repeated Hero hero = 1; //升阶消耗的将领
    extend Base
    {
      optional MultiHeroImproveRq ext = 811;
    }
}

message MultiHeroImproveRs {
    repeated Hero hero = 1;
    extend Base
    {
      optional MultiHeroImproveRs ext = 812;
    }
}

//将领升阶
message TipGuyRq {
    optional int64 lordId = 1; //玩家ID
    optional string chatMsg = 2;    //玩家的聊天
    extend Base
    {
      optional TipGuyRq ext = 813;
    }
}

message TipGuyRs {
    optional bool result = 1; //举报结果
    extend Base
    {
      optional TipGuyRs ext = 814;
    }
}

message LockPartRq {
    optional int32 keyId = 1;       //配件唯一ID
    optional int32 pos = 2;         //配件唯一ID
    optional bool locked = 3;       //true锁定 false解锁
    extend Base
    {
      optional LockPartRq ext = 815;
    }
}

message LockPartRs {
    optional bool result = 1;       //举报结果
    extend Base
    {
      optional LockPartRs ext = 816;
    }
}

message GetActNewRaffleRq {
    extend Base
    {
      optional GetActNewRaffleRq ext = 817;
    }
}

message GetActNewRaffleRs {
    optional int32 free = 1;                //剩余免费次数
    repeated int32 tankId = 2;              //坦克ID
    optional int32 lockId = 3;              //0未锁定 其他值为锁定的坦克ID
    extend Base
    {
      optional GetActNewRaffleRs ext = 818;
    }
}

message DoActNewRaffleRq {
    optional int32 type = 1;                //1单抽 2十倍抽取
    extend Base
    {
      optional DoActNewRaffleRq ext = 819;
    }
}

message DoActNewRaffleRs {
    optional int32 gold = 1;                //身上的金币
    repeated int32 color = 2;               //1蓝 2黄 3绿 4红
    repeated Award award = 3;               //奖励
    extend Base
    {
      optional DoActNewRaffleRs ext = 820;
    }
}

message LockNewRaffleRq {
    optional int32 tankId = 1;              //锁定坦克ID（0解锁）
    extend Base
    {
      optional LockNewRaffleRq ext = 821;
    }
}

message LockNewRaffleRs {
    optional bool result = 1;               //是否成功
    extend Base
    {
      optional LockNewRaffleRs ext = 822;
    }
}

message GetMilitaryScienceRq{
    extend Base
    {
      optional GetMilitaryScienceRq ext = 823;
    }
}

message GetMilitaryScienceRs{
    repeated MilitaryScience militaryScience  = 1; // 只给实际数据,客户端自己展示
    extend Base
    {
      optional GetMilitaryScienceRs ext = 824;
    }
}

message GetActTankExtractRq {
    extend Base
    {
      optional GetActTankExtractRq ext = 825;
    }
}

message GetActTankExtractRs {
    optional TankExtract tankExtract = 1;
    optional TankFormula tankFormula = 2;
    optional int32 free = 3;
    repeated Award commonAward = 4;             //普通奖励
    repeated Award seniorAward = 5;             //高级奖励
    extend Base
    {
      optional GetActTankExtractRs ext = 826;
    }
}

message DoActTankExtractRq {
    optional int32 price = 1;                   //1普通 2普通10连 3高级 4高级10连
    extend Base
    {
      optional DoActTankExtractRq ext = 827;
    }
}

message DoActTankExtractRs {
    optional int32 gold = 1;                //金币
    repeated Award award = 2;               //奖励
    extend Base
    {
      optional DoActTankExtractRs ext = 828;
    }
}

message FormulaTankExtractRq {
    optional int32 tankFormulaId = 1;       //制作公式
    optional int32 count = 2;               //多少量
    extend Base
    {
      optional FormulaTankExtractRq ext = 829;
    }
}

message FormulaTankExtractRs {
    optional Grab grab = 1;
    repeated Tank tank = 2;
    extend Base
    {
      optional FormulaTankExtractRs ext = 830;
    }
}

message UpMilitaryScienceRq{
    optional int32 militaryScienceId = 1;
    extend Base
    {
      optional UpMilitaryScienceRq ext = 831;
    }
}

message UpMilitaryScienceRs{
    optional int32 militaryScienceId = 1;
    optional int32 level = 2;   // 科技等级
    repeated Atom2 atom2 = 3;   // 消耗后的剩余资源
    extend Base
    {
      optional UpMilitaryScienceRs ext = 832;
    }
}

message GetMilitaryScienceGridRq{
    extend Base
    {
      optional GetMilitaryScienceGridRq ext = 833;
    }
}

message GetMilitaryScienceGridRs{
    repeated MilitaryScienceGrid militaryScienceGrid = 1; //军工科技格子解锁信息
    extend Base
    {
      optional GetMilitaryScienceGridRs ext = 834;
    }
}

message FitMilitaryScienceRq{
    optional int32 militaryScienceId = 1;   // 装配时传入tankId 和位置
    optional int32 tankId = 2;
    optional int32 pos = 3;
    extend Base
    {
      optional FitMilitaryScienceRq ext = 835;
    }
}

message FitMilitaryScienceRs{
    optional MilitaryScienceGrid militaryScienceGrid = 1; // 有改动的格子
    repeated MilitaryScience militaryScience = 2; // 有改动的科技
    extend Base
    {
      optional FitMilitaryScienceRs ext = 836;
    }
}

message MilitaryRefitTankRq{
    optional int32 tankId = 1;
    optional int32 count = 2;
   extend Base
    {
      optional MilitaryRefitTankRq ext = 837;
    }
}

message MilitaryRefitTankRs{
    repeated Atom2 atom2 = 1;
   extend Base
    {
      optional MilitaryRefitTankRs ext = 838;
    }
}

message GetActTankCarnivalRq{
    extend Base
    {
      optional GetActTankCarnivalRq ext = 839;
    }
}

message GetActTankCarnivalRs{
    optional int32 free = 1;
    repeated Atom row = 2;                      //竖排的坦克
    repeated Equate equate= 3;                  //预览奖励
    extend Base
    {
      optional GetActTankCarnivalRs ext = 840;
    }
}

message DoActTankCarnivalRq{
    optional bool fire = 1;                         //false未火力全开，true火力全开
    extend Base
    {
      optional DoActTankCarnivalRq ext = 841;
    }
}

message DoActTankCarnivalRs{
    repeated Atom atom = 1;                         // 1-9号位置的
    repeated Award award= 2;                        //奖励
    extend Base
    {
      optional DoActTankCarnivalRs ext = 842;
    }
}

message GetMilitaryMaterialRq{
    extend Base
    {
      optional GetMilitaryMaterialRq ext = 843;
    }
}

message GetMilitaryMaterialRs{
    repeated MilitaryMaterial militaryMaterial = 1;
    extend Base
    {
      optional GetMilitaryMaterialRs ext = 844;
    }
}

message UnLockMilitaryGridRq{
    required int32 tankId = 1;
     extend Base
    {
      optional UnLockMilitaryGridRq ext = 845;
    }
}

message UnLockMilitaryGridRs{
    optional MilitaryScienceGrid militaryScienceGrid = 1;
    repeated Atom2 atom2 = 2;
     extend Base
    {
      optional UnLockMilitaryGridRs ext = 846;
    }
}

message GetPendantRq{
     extend Base
    {
      optional GetPendantRq ext = 847;
    }
}

message GetPendantRs{
    repeated Pendant pendant = 1;               //type为1-2的不传送  挂件
    repeated Portrait portrait = 2;             //type为1-2的不传送  肖像
     extend Base
    {
      optional GetPendantRs ext = 848;
    }
}

message GetFortressBattlePartyRq{
     extend Base
    {
      optional GetFortressBattlePartyRq ext = 849;
    }
}

message GetFortressBattlePartyRs{
    repeated FortressBattleParty fortressBattleParty = 1;
     extend Base
    {
      optional GetFortressBattlePartyRs ext = 850;
    }
}

message SetFortressBattleFormRq{
    required Form form = 1;
    required int64 fight = 2;
     extend Base
    {
      optional SetFortressBattleFormRq ext = 851;
    }
}

message SetFortressBattleFormRs{
    optional int64 fight = 1;
    optional Army army = 2;
    optional Form form = 3;
     extend Base
    {
      optional SetFortressBattleFormRs ext = 852;
    }
}

message GetFortressBattleDefendRq{
    extend Base
    {
      optional GetFortressBattleDefendRq ext = 853;
    }
}

message GetFortressBattleDefendRs{
    optional FortressSelf fortressSelf = 1; //要塞自身信息(耐久度)
    repeated FortressDefend fortressDefend = 2; // 防守方信息
    optional int32 cdTime = 3;  //冷却时间
    extend Base
    {
      optional GetFortressBattleDefendRs ext = 854;
    }
}

message FortressBattleRecordRq{
    required int32 type = 1;            // 1.全服战况 2个人战况
    optional int32  page = 2;           //每一页显示20个，第一页page=0，第二页page=1
     extend Base
    {
      optional FortressBattleRecordRq ext = 855;
    }
}



message FortressBattleRecordRs {
    repeated FortressRecord record = 1;
    extend Base
    {
      optional FortressBattleRecordRs ext = 856;
    }
}

message SynFortressBattleStateRq {
    required int32 state = 1;         //1战斗准备，2战斗中 3.取消 4战斗结束，5发放奖励结束
    extend Base
    {
      optional SynFortressBattleStateRq ext = 1029;
    }
}


message BuyFortressBattleCdRq{
    extend Base
    {
      optional BuyFortressBattleCdRq ext = 857;
    }
}

message BuyFortressBattleCdRs{
    optional int32 gold = 1;
    extend Base
    {
      optional BuyFortressBattleCdRs ext = 858;
    }
}

message AttackFortressRq{
    required int64 lordId = 1;              // 防守方lordId, 0表示防守方npc
    required Form form = 2;
    extend Base
    {
        optional AttackFortressRq ext = 859;
    }
}

message AttackFortressRs{
    optional FortressRecord record = 1;
    optional RptAtkFortress rptAtkFortress =2;  // 战报
    optional int32 coldTime = 3;                // 结束时间
    repeated Tank tank = 4; // 攻击方tank
    extend Base
    {
        optional AttackFortressRs ext = 860;
    }
}

message GetFortressPartyRankRq{ //获取要塞军团排名
     extend Base
    {
        optional GetFortressPartyRankRq ext = 861;
    }
}

message GetFortressPartyRankRs{
    repeated FortressPartyRank fortressPartyRank = 1;
    optional FortressPartyRank myFortressPartyRank = 2;     // 若不存在则是未参与
     extend Base
    {
        optional GetFortressPartyRankRs ext = 862;
    }
}

message GetFortressJiFenRankRq{//要塞积分排名
    required int32 page = 1;   //每一页显示20个，第一页page=0，第二页page=1
    required int32 type = 2;   //1 军团排名 ，2 全服排名
     extend Base
    {
        optional GetFortressJiFenRankRq ext = 863;
    }
}

message GetFortressJiFenRankRs{
    repeated FortressJiFenRank fortressJiFenRank = 1;
    optional FortressJiFenRank myFortressJiFenRank = 2;  // 不存在就是未上榜
     extend Base
    {
        optional GetFortressJiFenRankRs ext = 864;
    }
}

message GetFortressCombatStaticsRq{
    required int32 type = 1;    // 1个人战绩，2军团战绩
     extend Base
    {
        optional GetFortressCombatStaticsRq ext = 865;
    }
}

message GetFortressCombatStaticsRs{
    repeated TwoInt twoInt = 1; // tankId，count
    optional int32 fightNum = 2;
    optional int32 winNum = 3;
     extend Base
    {
        optional GetFortressCombatStaticsRs ext = 866;
    }
}

message GetFortressFightReportRq{
    required int32 reportKey = 1; // 战报key
     extend Base
    {
        optional GetFortressFightReportRq ext = 867;
    }
}

message GetFortressFightReportRs{
    required RptAtkFortress rptAtkFortress = 1;
     extend Base
    {
        optional GetFortressFightReportRs ext = 868;
    }
}

message GetFortressAttrRq{
     extend Base
    {
        optional GetFortressAttrRq ext = 869;
    }
}

message GetFortressAttrRs{
    repeated MyFortressAttr myFortressAttr= 1;
     extend Base
    {
        optional GetFortressAttrRs ext = 870;
    }
}

message UpFortressAttrRq{
    required int32 id = 1;
    extend Base
    {
        optional UpFortressAttrRq ext = 871;
    }
}

message UpFortressAttrRs{
    required int32 id = 1;
    required int32 level = 2;
    optional int32 gold = 3;
    extend Base
    {
        optional UpFortressAttrRs ext = 872;
    }
}

message GetFightValueAddRq{
     extend Base
    {
        optional GetFightValueAddRq ext = 873;
    }
}

message GetFightValueAddRs{
    required bool isReceived = 1;   // 是否已领取
    optional int32 receiveTime = 2; // 领取时间
     extend Base
    {
        optional GetFightValueAddRs ext = 874;
    }
}

message ReceiveFigthValueAddRq{
    extend Base
    {
        optional ReceiveFigthValueAddRq ext = 875;
    }
}

message ReceiveFigthValueAddRs{
    repeated Award award = 1;
    extend Base
    {
        optional ReceiveFigthValueAddRs ext = 876;
    }
}

message GetNobilityAncestryRq{
     extend Base
    {
        optional GetNobilityAncestryRq ext = 877;
    }
}

message GetNobilityAncestryRs{
    optional bool status = 1;           //是否领取
    optional int32 timeRemaining = 2;   //血统剩余时间
     extend Base
    {
        optional GetNobilityAncestryRs ext = 878;
    }
}

message DoNobilityAncestryRq{
    extend Base
    {
        optional DoNobilityAncestryRq ext = 879;
    }
}

message DoNobilityAncestryRs{
    repeated Effect effect = 1;         //
    optional int32 timeRemaining = 2;   //血统剩余时间
    extend Base
    {
        optional DoNobilityAncestryRs ext = 880;
    }
}

message GetFortressJobRq{
     extend Base
    {
        optional GetFortressJobRq ext = 881;
    }
}

message GetFortressJobRs{
    repeated FortressJob fortressJob = 1;
     extend Base
    {
        optional GetFortressJobRs ext = 882;
    }
}

message FortressAppointRq{
    required int32 jobId = 1;
    required string nick = 2;
     extend Base
    {
        optional FortressAppointRq ext = 883;
    }
}

message FortressAppointRs{
     extend Base
    {
        optional FortressAppointRs ext = 884;
    }
}



message GetFortressWinPartyRq{
    extend Base
    {
        optional GetFortressWinPartyRq ext = 885;
    }
}

message GetFortressWinPartyRs{
    required int32 partyId = 1;
    required string partyName = 2;
    extend Base
    {
        optional GetFortressWinPartyRs ext = 886;
    }
}

message GetMyFortressJobRq{
    extend Base
    {
        optional GetMyFortressJobRq ext = 887;
    }
}

message GetMyFortressJobRs{
    optional FortressJob fortressJob = 1;   // 可能没有,也可能时间过了
    extend Base
    {
        optional GetMyFortressJobRs ext = 888;
    }
}

message SynFortressSelfRq{
    optional FortressSelf fortressSelf = 1;
    extend Base
    {
        optional SynFortressSelfRq ext = 1031;
    }
}

message GetThisWeekMyWarJiFenRankRq{
    extend Base
    {
        optional SynFortressSelfRq ext = 889;
    }
}

message GetThisWeekMyWarJiFenRankRs{
    optional int32 rank = 1;
    optional int32 jifen = 2;
    extend Base
    {
        optional GetThisWeekMyWarJiFenRankRs ext = 890;
    }
}

message GetScoutRq{
    extend Base
    {
        optional GetScoutRq ext = 891;
    }
}

message GetScoutRs{
    optional int32 scout = 1;           //侦查次数
    extend Base
    {
        optional GetScoutRs ext = 892;
    }
}

message GetRoleEnergyStoneRq{
    extend Base
    {
        optional GetRoleEnergyStoneRq ext = 893;
    }
}

message GetRoleEnergyStoneRs{
    repeated Prop prop = 1;
    extend Base
    {
        optional GetRoleEnergyStoneRs ext = 894;
    }
}

message GetEnergyStoneInlayRq{
    extend Base
    {
        optional GetEnergyStoneInlayRq ext = 895;
    }
}

message GetEnergyStoneInlayRs{
    repeated EnergyStoneInlay inlay = 1;
    extend Base
    {
        optional GetEnergyStoneInlayRs ext = 896;
    }
}

message CombineEnergyStoneRq{
    required int32 stoneId = 1;     // 用于合成的能晶id
    required int32 count = 2;       // 单次合成消耗的能晶数量(1-3)
    required bool  batch = 3;       // 是否批量合成，批量合成为true，单次为false
    extend Base
    {
        optional CombineEnergyStoneRq ext = 897;
    }
}

message CombineEnergyStoneRs{
    required int32 successNum = 1;       // 能晶合成成功的次数
    extend Base
    {
        optional CombineEnergyStoneRs ext = 898;
    }
}

message OnEnergyStoneRq{
    required int32 pos = 1;         // 出战部位 1.阵型第一格 2.阵型第二格 ...
    required int32 hole = 2;        // 镶嵌孔id,从1开始
    required int32 stoneId = 3;     // 如果是镶嵌，传入要镶嵌上去的能晶id，如果是卸下，该值为-1
    extend Base
    {
        optional OnEnergyStoneRq ext = 899;
    }
}

message OnEnergyStoneRs{
    extend Base
    {
        optional OnEnergyStoneRs ext = 900;
    }
}

message GetAltarBossDataRq{
    extend Base
    {
        optional GetAltarBossDataRq ext = 901;
    }
}

message GetAltarBossDataRs {
    required int32 nextStateTime = 1;   // boss进入下一阶段的时间点，如果是初始状态，返回0
    optional int32 hurtRank = 2;        // 伤害排名
    optional int32 autoFight = 3;       // 是否设置自动战斗
    optional int32 bless1 = 4;          // 祝福等级
    optional int32 bless2 = 5;
    optional int32 bless3 = 6;
    optional int64 hurt = 7;            // 玩家伤害
    optional int32 which = 8;           // 当前第几管血
    optional int32 bossHp = 9;          // 当前血量万分比
    optional int32 state = 10;          // 0.初始（boss未出）1.准备中 2.战斗中 3.boss挂了 4.战斗结束
    required int32 fightCdTime = 11;    // 战斗cd结束时间
    required int32 bossLv = 12;         //  BOSS的等级
    extend Base
    {
        optional GetAltarBossDataRs ext = 902;
    }
}

message GetAltarBossHurtRankRq {
    extend Base
    {
        optional GetAltarBossHurtRankRq ext = 903;
    }
}

message GetAltarBossHurtRankRs {
    repeated HurtRank hurtRank = 1;
    optional int64 hurt = 2;            // 玩家自己的伤害量
    optional int32 rank = 3;            // 玩家的排行
    optional bool canGet = 4;           // true 可以领取排行奖励 false 不可领取
    extend Base
    {
        optional GetAltarBossHurtRankRs ext = 904;
    }
}

message SetAltarBossAutoFightRq {
    required bool autoFight = 1;
    extend Base
    {
        optional SetAltarBossAutoFightRq ext = 905;
    }
}

message SetAltarBossAutoFightRs {
    extend Base
    {
        optional SetAltarBossAutoFightRs ext = 906;
    }
}

message BlessAltarBossFightRq {
    required int32 index = 1;           // 1.穿刺 2.暴击 3.加伤
    extend Base
    {
        optional BlessAltarBossFightRq ext = 907;
    }
}

message BlessAltarBossFightRs {
    optional int32 lv = 1;              // 当前祝福等级
    optional int32 gold = 2;            // 玩家剩余金币数
    extend Base
    {
        optional BlessAltarBossFightRs ext = 908;
    }
}

message CallAltarBossRq {
    extend Base
    {
        optional CallAltarBossRq ext = 909;
    }
}

message CallAltarBossRs {
    optional int32 state = 1;           // 0.初始（boss未出）1.准备中 2.战斗中 3.boss挂了 4.战斗结束
    optional int32 which = 2;           // 当前第几管血
    optional int32 bossLv = 3;          // 当前BOSS等级
    optional int32 bossHp = 4;          // 当前血量万分比
    required int32 nextStateTime = 5;   // 准备状态结束时间
    extend Base
    {
        optional CallAltarBossRs ext = 910;
    }
}

message BuyAltarBossCdRq {
    extend Base
    {
        optional BuyAltarBossCdRq ext = 911;
    }
}

message BuyAltarBossCdRs {
    optional int32 gold = 1;            // 玩家剩余金币数
    extend Base
    {
        optional BuyAltarBossCdRs ext = 912;
    }
}

message FightAltarBossRq {
    extend Base
    {
        optional FightAltarBossRq ext = 913;
    }
}

message FightAltarBossRs {
    optional int32 result = 1;          // -1失败 1.胜利 2.冷却中
    optional Record record = 2;
    optional int32 cdTime = 3;          // 传挑战结束冷却的时间
    optional int64 hurt = 4;            // 玩家总伤害
    optional int32 rank = 5;
    optional int32 which = 6;
    optional int32 bossHp = 7;
    extend Base
    {
        optional FightAltarBossRs ext = 914;
    }
}

message AltarBossHurtAwardRq {
    extend Base
    {
        optional AltarBossHurtAwardRq ext = 915;
    }
}

message AltarBossHurtAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional AltarBossHurtAwardRs ext = 916;
    }
}

message GetTreasureShopBuyRq {
    extend Base
    {
        optional GetTreasureShopBuyRq ext = 917;
    }
}

message GetTreasureShopBuyRs {
    required int32 openWeek = 1;            // 当前是服务器开服第几周
    repeated TreasureShopBuy shopBuy = 2;   // 玩家在宝物商店的购买信息
    extend Base
    {
        optional GetTreasureShopBuyRs ext = 918;
    }
}

message BuyTreasureShopRq {
    required int32 treasureId = 1;          // 要购买的宝物id
    required int32 count = 2;               // 购买数量
    extend Base
    {
        optional BuyTreasureShopRq ext = 919;
    }
}

message BuyTreasureShopRs {
    required int32 huangbao = 1;            // 剩余荒宝碎片数量
    extend Base
    {
        optional BuyTreasureShopRs ext = 920;
    }
}

message GetDrillDataRq {
    extend Base
    {
        optional GetDrillDataRq ext = 921;
    }
}

message GetDrillDataRs {
    required int32 status = 1;              // 红蓝大战活动的状态，0 未开启，1 报名，2 备战，3 预热，4 第一部队战斗，5 第二部队战斗，6 第三部队战斗, 7 战斗结束
    required int32 enrollNum = 2;           // 已报名玩家的数量
    required int32 camp = 3;                // 玩家所在的阵营，0 未分配，1 红方，2 蓝方
    required int32 myArmy = 4;              // 玩家当前的部队数0~2
    required int32 exploit = 5;             // 玩家当前的功勋值
    required bool isEnrolled = 6;           // 玩家是否已报名，已报名返回true
    repeated int32 redWin = 7;              // 已经结束的战斗的结果，0 平局，1 红方胜，2 蓝方胜
    optional int32 redExploit = 8;          // 红方阵营功勋，从预热状态开始返回该值，战斗结束后不再返回
    optional int32 blueExploit = 9;         // 蓝方阵营功勋，同上
    extend Base
    {
        optional GetDrillDataRs ext = 922;
    }
}

message DrillEnrollRq {
    extend Base
    {
        optional DrillEnrollRq ext = 923;
    }
}

message DrillEnrollRs {
    extend Base
    {
        optional DrillEnrollRs ext = 924;
    }
}

message ExchangeDrillTankRq {
    required int32 tankId = 1;              // 要兑换的基地坦克id
    required int32 count = 2;               // 要兑换的基地坦克数量
    extend Base
    {
        optional ExchangeDrillTankRq ext = 925;
    }
}

message ExchangeDrillTankRs {
    required int32 tankId = 1;              // 兑换到的演习坦克id
    required int32 count = 2;               // 演习军力中该坦克当前的坦克数量
    extend Base
    {
        optional ExchangeDrillTankRs ext = 926;
    }
}

message GetDrillRecordRq {
    required int32 type = 1;                // 战报类型，1 个人战报，2 全服战报
    required int32 which = 2;               // 哪一路的战报，1 第一路，2 第二路，3 第三路
    optional int32 page = 3;                // 全服战报分页，每一页显示20个，第一页page=0，第二页page=1
    extend Base
    {
        optional GetDrillRecordRq ext = 927;
    }
}

message GetDrillRecordRs {
    optional DrillResult result = 1;        // 战斗结果，如果没有，不返回战斗结果
    repeated DrillRecord record = 2;        // 具体战况
    extend Base
    {
        optional GetDrillRecordRs ext = 928;
    }
}

message GetDrillFightReportRq {
    required int32 reportKey = 1;           // 战报key
    extend Base
    {
        optional GetDrillFightReportRq ext = 929;
    }
}

message GetDrillFightReportRs{
    required RptAtkFortress rptAtkFortress = 1;
     extend Base
    {
        optional GetDrillFightReportRs ext = 930;
    }
}

message GetDrillRankRq {
    required int32 rankType = 1;            // 排行榜类型，1 上路排行榜，2 中路排行榜，3 下路排行榜，4 总榜
    extend Base
    {
        optional GetDrillRankRq ext = 931;
    }
}

message GetDrillRankRs {
    required int32 successCamp = 1;         // 胜利阵营，0 平局，1 红方胜，2 蓝方胜
    required bool myCamp = 2;               // 玩家所在的阵营，true为红方
    required int32 myRank = 3;              // 玩家的排名，0为未上榜
    required int32 successNum = 4;          // 玩家胜利次数
    required int32 failNum = 5;             // 玩家失败次数
    required bool canGetRank = 6;           // 是否可领取排行奖励
    optional bool canGetPart = 7;           // 是否可领取阵营奖励
    repeated DrillRank ranks = 8;           // 排行榜数据
    repeated TwoInt killTank = 9;           // 如果是获取总榜数据，返回玩家击毁坦克种类，数量，获取分榜数据时不返回
    optional int32 getExploit = 10;         // 玩家在本次红蓝大战中获得的总功勋值
    extend Base
    {
        optional GetDrillRankRs ext = 932;
    }
}

message DrillRewardRq {
    required int32 rewardType = 1;          // 奖励类型，1 个人奖励， 2 阵营奖励
    extend Base
    {
        optional DrillRewardRq ext = 933;
    }
}

message DrillRewardRs{
    repeated Award award = 1;               //奖励
    extend Base
    {
        optional DrillRewardRs ext = 934;
    }
}

message GetDrillShopRq {
    extend Base
    {
        optional GetDrillShopRq ext = 935;
    }
}

message GetDrillShopRs{
    repeated DrillShopBuy buy = 1;          // 玩家在军演商店的购买信息
    repeated int32 treasureShopId = 2;      // 今天刷新的珍品商品id
    extend Base
    {
        optional GetDrillShopRs ext = 936;
    }
}

message ExchangeDrillShopRq {
    required int32 shopId = 1;              // 要兑换的商品id
    required int32 count = 2;               // 要兑换的商品数量
    extend Base
    {
        optional ExchangeDrillShopRq ext = 937;
    }
}

message ExchangeDrillShopRs {
    required int32 exploit = 1;             // 兑换后玩家剩余的功勋值
    required int32 shopId = 2;              // 兑换的商品id
    optional int32 count = 3;               // 珍品商品当前剩余数量
    extend Base
    {
        optional ExchangeDrillShopRs ext = 938;
    }
}

message GetDrillImproveRq {
    extend Base
    {
        optional GetDrillImproveRq ext = 939;
    }
}

message GetDrillImproveRs {
    repeated DrillImproveInfo improve = 1;  // 所有buff的进修情况
    extend Base
    {
        optional GetDrillImproveRs ext = 940;
    }
}

message DrillImproveRq {
    required int32 buffId = 1;              // 要进修的buffId
    extend Base
    {
        optional DrillImproveRq ext = 941;
    }
}

message DrillImproveRs {
    required DrillImproveInfo improve = 1;  // 进修后该buff当前的进修情况
    extend Base
    {
        optional DrillImproveRs ext = 942;
    }
}

message GetDrillTankRq {
    extend Base
    {
        optional GetDrillTankRq ext = 943;
    }
}

message GetDrillTankRs {
    repeated Tank drillTank = 1;            // 玩家的演习坦克信息
    extend Base
    {
        optional GetDrillTankRs ext = 944;
    }
}

message GetPushStateRq{     //请求推送状态
    extend Base
    {
        optional GetPushStateRq ext = 945;
    }
}

message GetPushStateRs{
    required int32 state = 1;   // 推送状态: 0未推送 1推送
    optional int32 shouldPushTime = 2;  // 当state=0时, shouldPushTime 有效。 单位秒
    extend Base
    {
        optional GetPushStateRs ext = 946;
    }
}

message PushCommentRq{
    required int32 commentState =1;  // 评论状态: 1已经评论 2关闭
    extend Base
    {
        optional PushCommentRq ext = 947;
    }
}

message PushCommentRs{
    required int32 state = 1;   // 推送状态: 0未推送 1推送
    optional int32 shouldPushTime = 2;  // 当state=0时, shouldPushTime 有效。 单位秒
    extend Base
    {
        optional PushCommentRs ext = 948;
    }
}

message GetCrossServerListRq{
    extend Base
    {
        optional GetCrossServerListRq ext = 951;
    }
}

message GetCrossServerListRs{
    repeated GameServerInfo gameServerInfo = 1;
    extend Base
    {
        optional GetCrossServerListRs ext = 952;
    }
}

message GetCrossFightStateRq{
     extend Base
    {
        optional GetCrossFightStateRq ext = 953;
    }
}

message GetCrossFightStateRs{
    required string beginTime = 1;
    required int32 state = 2; // 0未开始   非0表示第几天
    extend Base
    {
        optional GetCrossFightStateRs ext = 954;
    }
}

message CrossFightRegRq{
    required int32 groupId = 1; // 1精英组 2巅峰组
    extend Base
    {
        optional CrossFightRegRq ext = 955;
    }
}

message CrossFightRegRs{
    extend Base
    {
        optional CrossFightRegRs ext = 956;
    }
}

message GetCrossRegInfoRq{
    extend Base
    {
        optional GetCrossRegInfoRq ext = 957;
    }
}

message GetCrossRegInfoRs{
    required int32 jyGroupPlayerNum = 1; // 精英组参加人数
    required int32 dfGroupPlayerNum = 2; // 巅峰组参赛人数
    required int32 myGroup = 3;     // 0未参加 1精英组 2巅峰组
    extend Base
    {
        optional GetCrossRegInfoRs ext = 958;
    }
}

message CancelCrossRegRq{
     extend Base
    {
        optional CancelCrossRegRq ext = 959;
    }
}

message CancelCrossRegRs{
     extend Base
    {
        optional CancelCrossRegRs ext = 960;
    }
}

message GetCrossFormRq{
    extend Base
    {
        optional GetCrossFormRq ext = 961;
    }
}

message GetCrossFormRs{
    repeated Form form = 1;
     extend Base
    {
        optional GetCrossFormRs ext = 962;
    }
}

message SetCrossFormRq{
    required Form form = 1;     // 13,14,15
    required int64 fight = 2;
    extend Base
    {
        optional SetCrossFormRq ext = 963;
    }
}

message SetCrossFormRs{
    optional Form form = 1;     //最终设置成功的阵型
    optional int64 fight = 2;
    extend Base
    {
        optional SetCrossFormRs ext = 964;
    }
}

message GetCrossPersonSituationRq{
    required int32 page = 1;
    extend Base
    {
        optional GetCrossPersonSituationRq ext = 965;
    }
}

message GetCrossPersonSituationRs{
    repeated CrossRecord crossRecord = 1;
    extend Base
    {
        optional GetCrossPersonSituationRs ext = 966;
    }
}

message GetCrossJiFenRankRq{
     required int32 page = 1;
     extend Base
    {
        optional GetCrossJiFenRankRq ext = 967;
    }
}

message GetCrossJiFenRankRs{
    repeated CrossJiFenRank crossJiFenRank = 1;
    optional int32 jifen = 2;// 积分
    optional int32 myRank = 3;// 排名 0表示未上榜
    extend Base
    {
        optional GetCrossJiFenRankRs ext = 968;
    }
}

message GetCrossReportRq{
    required int32 reportKey = 1;
    extend Base
    {
        optional GetCrossReportRq ext = 969;
    }
}

message GetCrossReportRs{
    required CrossRptAtk crossRptAtk = 1;
    extend Base
    {
        optional GetCrossReportRs ext = 970;
    }
}

message GetCrossKnockCompetInfoRq{
    required int32 groupId = 1; // 1精英组 2巅峰组
    required int32 groupType = 2;  // 1A   2B  3C  4D
    extend Base
    {
        optional GetCrossKnockCompetInfoRq ext = 971;
    }
}

message GetCrossKnockCompetInfoRs{
    required int32 groupId = 1; // 1精英组 2巅峰组
    required int32 groupType = 2;  // 1A   2B  3C  4D
    repeated KnockoutCompetGroup knockoutCompetGroup = 3;
    extend Base
    {
        optional GetCrossKnockCompetInfoRs ext = 972;
    }
}

message GetCrossFinalCompetInfoRq{
    required int32 groupId = 1; // 1精英组 2巅峰组
    extend Base
    {
        optional GetCrossFinalCompetInfoRq ext = 973;
    }
}

message GetCrossFinalCompetInfoRs{
    required int32 groupId = 1; // 1精英组 2巅峰组
    repeated FinalCompetGroup finalCompetGroup = 2;
    extend Base
    {
        optional GetCrossFinalCompetInfoRs ext = 974;
    }
}

message BetBattleRq{
    required int32 myGroup = 1; // 1精英组 2巅峰组
    required int32 stage = 2;   // 1淘汰赛,2总决赛
    required int32 groupType = 3; // 淘汰赛有分组,1A 2B 3C 4D  总决赛0
    required int32 competGroupId = 4;//淘汰赛(1-15组) 总决赛(1-4组)
    required int32 pos = 5;    // 位置 1,2
    extend Base
    {
        optional BetBattleRq ext = 975;
    }
}

message BetBattleRs{
    optional MyBet myBet = 1;
    required int32 gold = 2;
    extend Base
    {
        optional BetBattleRs ext = 976;
    }
}

message GetMyBetRq{
    extend Base
    {
        optional GetMyBetRq ext = 977;
    }
}

message GetMyBetRs{
    repeated MyBet myBet = 1;
    extend Base
    {
        optional GetMyBetRs ext = 978;
    }
}

message ReceiveBetRq{
    required int32 myGroup = 1; // 1精英组 2巅峰组
    required int32 stage = 2;   // 1淘汰赛,2总决赛
    required int32 groupType = 3; // 淘汰赛有分组,1A 2B 3C 4D  总决赛0
    required int32 competGroupId = 4;//淘汰赛(1-15组) 总决赛(1-4组)
    extend Base
    {
        optional ReceiveBetRq ext = 979;
    }
}

message ReceiveBetRs{
    optional int32 crossJifen = 1;
    optional MyBet myBet = 2;
    extend Base
    {
        optional ReceiveBetRs ext = 980;
    }
}

message GetCrossShopRq{
    extend Base
    {
        optional GetCrossShopRq ext = 3101;
    }
}

message GetCrossShopRs{
    required int32 crossJifen = 1;          // 玩家拥有的积分
    repeated CrossShopBuy buy = 2;          // 玩家在跨服商店的购买信息
    extend Base
    {
        optional GetCrossShopRs ext = 3102;
    }
}

message ExchangeCrossShopRq{
    required int32 shopId = 1;              // 要兑换的商品id
    required int32 count = 2;               // 要兑换的商品数量
    extend Base
    {
        optional ExchangeCrossShopRq ext = 3103;
    }
}

message ExchangeCrossShopRs{
    required int32 crossJifen = 1;          // 兑换后玩家剩余的积分
    required int32 shopId = 2;              // 兑换的商品id
    optional int32 count = 3;               // 玩家兑换数量
    optional int32 restNum = 4;             // 珍品商品当前剩余数量
    extend Base
    {
        optional ExchangeCrossShopRs ext = 3104;
    }
}

message GetCrossTrendRq{
    extend Base
    {
        optional GetCrossTrendRq ext = 3105;
    }
}

message GetCrossTrendRs{
    required int32 crossJifen = 1;
    repeated CrossTrend crossTrend = 2;
    extend Base
    {
        optional GetCrossTrendRs ext = 3106;
    }
}

message GetCrossFinalRankRq{
    required int32 group = 1; // 1精英组 2巅峰组
    extend Base
    {
        optional GetCrossFinalRankRq ext = 3107;
    }
}

message GetCrossFinalRankRs{
    required int32 group = 1; // 1精英组 2巅峰组
    repeated CrossTopRank crossTopRank = 2;
    required int32 myRank = 3;          // 默认0 (1-64可以领取奖励)
    optional int32 state = 4;           // 0默认  1未领取  2已经领取
    optional int32 myJiFen = 5;         // 我的积分
    extend Base
    {
        optional GetCrossFinalRankRs ext = 3108;
    }
}

message ReceiveRankRwardRq{
    required int32 group = 1; // 1精英组 2巅峰组
    extend Base
    {
        optional ReceiveRankRwardRq ext = 3109;
    }
}

message ReceiveRankRwardRs{
    required int32 group = 1; // 1精英组 2巅峰组
    repeated Award award = 2;
    extend Base
    {
        optional ReceiveRankRwardRs ext = 3110;
    }
}

message GetCrossRankRq{
    optional int32 type = 1;    //不传或者1 跨服战名人堂  2跨服军团名人堂  3跨服军演
    extend Base
    {
        optional GetCrossRankRq ext = 3111;
    }
}

message GetCrossRankRs{
    repeated CrossFameInfo crossFameInfo = 1;   // 跨服战名人堂数据
    repeated CPFameInfo cpFameInfo = 2;         // 跨服军团战名人堂数据
    repeated CDFameInfo cdFameInfo = 3;         // 跨服军演名人堂数据
    extend Base
    {
        optional GetCrossRankRs ext = 3112;
    }
}

message GetRebelDataRq {
    extend Base
    {
        optional GetRebelDataRq ext = 981;
    }
}

message GetRebelDataRs {
    required int32 state = 1;               // 活动状态，0 未开启或已结束，1 已刷新
    required int32 changeTime = 2;          // 下次状态改变时间，单位：s
    required int32 killNum = 3;             // 今日击杀叛军数量
    required int32 restUnit = 4;            // 剩余分队数量
    required int32 restGuard = 5;           // 剩余卫队数量
    required int32 restLeader = 6;          // 剩余领袖数量
    repeated Rebel unitRebels = 7;          // 分队叛军的数据
    repeated Rebel guardRebels = 8;         // 卫队叛军的数据
    repeated Rebel leaderRebels = 9;        // 领袖叛军的数据
	required int32 restBoss = 10;          // 剩余boss数量
    repeated Rebel bossRebels = 11;        // boss叛军的数据

    extend Base
    {
        optional GetRebelDataRs ext = 982;
    }
}

message GetRebelRankRq {
    required int32 rankType = 1;            // 排行榜类型，1：个人周榜，2：个人总榜 ，3：军团周榜
    required int32 page = 2;                // 分页，每一页显示20个，第一页page=0，第二页page=1
    extend Base
    {
        optional GetRebelRankRq ext = 983;
    }
}

message GetRebelRankRs {
    required int32 killUnit = 1;            // 玩家击杀分队数量
    required int32 killGuard = 2;           // 玩家击杀卫队数量
    required int32 killLeader = 3;          // 玩家击杀领袖数量
    required int32 score = 4;               // 玩家的积分
    required int32 rank = 5;                // 玩家积分排行，0为未上榜
    optional bool getReward = 6;            // 是否已领取奖励，只有玩家上榜，并在可领取奖励的排名内才有值
    optional int32 lastRank = 7;            // 上周排行
    repeated RebelRank rebelRanks = 8;      // 排行榜数据
    extend Base
    {
        optional GetRebelRankRs ext = 984;
    }
}

message RebelRankRewardRq {
	required int32 awardType = 1;	//奖励类型 1-周个人榜，3-周军团榜
    extend Base
    {
        optional RebelRankRewardRq ext = 985;
    }
}

message RebelRankRewardRs {
    repeated Award award = 1;               //奖励
    extend Base
    {
        optional RebelRankRewardRs ext = 986;
    }
}

message RebelIsDeadRq {
    required int32 pos = 1;                 // 坐标
    extend Base
    {
        optional RebelIsDeadRq ext = 987;
    }
}

message RebelIsDeadRs {
    required int32 pos = 1;                 // 坐标
    required bool isDead = 2;               // 该坐标的叛军是否死亡
    extend Base
    {
        optional RebelIsDeadRs ext = 988;
    }
}

message GetTankCarnivalRq {
    extend Base
    {
        optional GetTankCarnivalRq ext = 989;
    }
}

message GetTankCarnivalRs {
    required int32 freeNum = 1;             // 坦克嘉年华剩余免费抽奖次数
    extend Base
    {
        optional GetTankCarnivalRs ext = 990;
    }
}

message TankCarnivalRewardRq {
    required int32 allLine = 1;             // 是否选择全开模式，1 是，0 否
    extend Base
    {
        optional TankCarnivalRewardRq ext = 991;
    }
}

message TankCarnivalRewardRs {
    required int32 allLine = 1;             // 是否选择全开模式，1 是，0 否
    repeated int32 equateId = 2;            // 每列转到的equateId
    repeated TankCarnivalReward rewards = 3;// 每条线的获奖信息
    extend Base
    {
        optional TankCarnivalRewardRs ext = 992;
    }
}

message GetPowerGiveDataRq {
    extend Base
    {
        optional GetPowerGiveDataRq ext = 993;
    }
}

message GetPowerGiveDataRs {
    repeated int32 state = 1;               // 能量补给活动状态，0 不能领取，1 未领取，2 已领取
    extend Base
    {
        optional GetPowerGiveDataRs ext = 994;
    }
}

message GetFreePowerRq {
    extend Base
    {
        optional GetFreePowerRq ext = 995;
    }
}

message GetFreePowerRs {
    repeated Award reward = 1;              // 奖励信息
    extend Base
    {
        optional GetFreePowerRs ext = 996;
    }
}

message PartQualityUpRq {
    required int32 keyId = 1;
    required int32 pos = 2;         //要进阶的配件属于哪一格  0为未装备的
    extend Base
    {
        optional PartQualityUpRq ext = 997;
    }
}

message PartQualityUpRs {
    required int32 partId = 1;      //  进阶后变为新的配件id
    required int32 upLv = 2;        //  进阶后的强化等级
    required int32 refitLv = 3;     //  进阶后的改造等级
    repeated Atom2 atom2 = 4;       //  当前剩余资源
    required int32 smeltLv = 5;     //  进阶后的淬炼等级
    required int32 smeltExp = 6;    //  进阶后的淬炼经验
    repeated Award award = 7;       //  增加各种道具
    extend Base
    {
        optional PartQualityUpRs ext = 998;
    }
}

// --------------@文件分割标志@---------------

message SmeltPartRq {
    required int32 keyId     = 1;             //配件唯一id
    required int32 pos       = 2;             //配件位置
    required int32 option    = 3;             //淬炼方式 1 2 3

    extend Base
    {
        optional SmeltPartRq ext = 3001;
    }
}

message SmeltPartRs {
    required int32 smeltLv = 1;         //淬炼等级
    required int32 smeltExp = 2;        //淬炼经验
    repeated PartSmeltAttr attr = 3;    //淬炼属性
    required bool saved = 4;            //是否已经保存萃取
    repeated Atom2 atom2 = 5;           //当前剩余资源
    optional int32 expMult = 6;         //淬炼经验暴击倍数
    optional Award krypton  = 7;        //淬炼大师活动中获得的氪金数量(空:表示没有获得到氪金)
    extend Base
    {
        optional SmeltPartRs ext = 3002;
    }
}

message SaveSmeltPartRq {
    required int32 keyId     = 1;             //配件唯一id
    required int32 pos       = 2;             //配件位置

    extend Base
    {
        optional SaveSmeltPartRq ext = 3003;
    }
}

message SaveSmeltPartRs {
    repeated PartSmeltAttr attr = 1; //淬炼属性
    required bool saved = 2;        //是否已经保存萃取

    extend Base
    {
        optional SaveSmeltPartRs ext = 3004;
    }
}

message TenSmeltPartRq {
    required int32 keyId            = 1; //配件唯一id
    required int32 pos              = 2; //配件位置
    required int32 option           = 3; //淬炼方式1 2 3
    repeated int32 saveAttrId       = 4; //保存属性id
    required int32 times            = 5; //淬炼次数
    extend Base
    {
        optional TenSmeltPartRq ext = 3005;
    }
}

message TenSmeltPartRs {
    repeated PartSmeltRecord records    = 1;    //淬炼记录
    required PartSmeltRecord result     = 2;    //淬炼结果
    required int32 smeltLv              = 3;    //淬炼等级
    required int32 smeltExp             = 4;    //淬炼经验
    repeated PartSmeltAttr attr         = 5;    //淬炼属性
    repeated Atom2 atom2                = 6;    //当前剩余资源
    required bool saved                 = 7;    //是否已经保存萃取
    optional Award krypton              = 8;    //淬炼大师活动中获得的氪金数量(空:表示没有获得到氪金)
    extend Base
    {
        optional TenSmeltPartRs ext = 3006;
    }
}

message SynCrossStateRq{
    required int32 state = 1;   // 1.跨服战报名开启 2.跨服战结束
     extend Base
    {
        optional SynCrossStateRq ext = 1033;
    }
}

message GetCollectCharacterRq {
    extend Base
    {
        optional GetCollectCharacterRq ext = 3007;
    }
}

message GetCollectCharacterRs {
    repeated Atom2 actProp = 1;     // 集字活动道具数量
    repeated TwoInt changeNum = 2;     // 兑换道具剩余次数
    extend Base
    {
        optional GetCollectCharacterRs ext = 3008;
    }
}

message CollectCharacterCombineRq {
    required int32 id = 1;             // 需要合成的id  合成物id
    extend Base
    {
        optional CollectCharacterCombineRq ext = 3009;
    }
}

message CollectCharacterCombineRs {
    repeated Atom2 actProp = 1;     // 更新活动道具数量
    extend Base
    {
        optional CollectCharacterCombineRs ext = 3010;
    }
}

message CollectCharacterChangeRq {
    required int32 id = 1;             // 需要兑换的id
    extend Base
    {
        optional CollectCharacterChangeRq ext = 3011;
    }
}

message CollectCharacterChangeRs {
    repeated Atom2 actProp = 1;     // 更新活动道具数量
    repeated TwoInt changeNum = 2;     // 更细兑换剩余次数
    repeated Award award = 3;       // 兑换的物品
    extend Base
    {
        optional CollectCharacterChangeRs ext = 3012;
    }
}

message GetActM1a2Rq {

    extend Base
    {
        optional GetActM1a2Rq ext = 3013;
    }
}

message GetActM1a2Rs {
    required bool hasFree = 1;     // 拥有普通免费次数
    extend Base
    {
        optional GetActM1a2Rs ext = 3014;
    }
}

message DoActM1a2Rq {
    required int32 id = 1;        // 活动按钮id 普通1 高级2 表中有配置
    required bool single = 2;     // true单次false多次
    extend Base
    {
        optional DoActM1a2Rq ext = 3015;
    }
}

message DoActM1a2Rs {
    required bool hasFree = 1;    // 拥有普通免费次数
    required int32 gold = 2;      // 当前金币
    repeated Award award = 3;     // 获得奖励

    extend Base
    {
        optional DoActM1a2Rs ext = 3016;
    }
}

message M1a2RefitTankRq {
    required int32 tankId = 1;     // 改装tankId
    required int32 count = 2;      // 改装数量

    extend Base
    {
        optional M1a2RefitTankRq ext = 3017;
    }
}

message M1a2RefitTankRs {
    repeated Atom2 atom2 = 1;     // 更新资源和道具数量

    extend Base
    {
        optional M1a2RefitTankRs ext = 3018;
    }
}

message GetFlowerRq {
    extend Base
    {
        optional GetFlowerRq ext = 3019;
    }
}

message GetFlowerRs {
    optional Atom2 actProp = 1;     // 鲜花数量
    repeated TwoInt changeNum = 2;     // 兑换道具剩余次数
    extend Base
    {
        optional GetFlowerRs ext = 3020;
    }
}

message WishFlowerRq {
    required int32 id = 1;             // 需要祝福的id
    extend Base
    {
        optional WishFlowerRq ext = 3021;
    }
}

message WishFlowerRs {
    required Atom2 actProp = 1;     // 更新鲜花数量
    repeated TwoInt changeNum = 2;     // 更细兑换剩余次数
    repeated Award award = 3;       // 祝福获得的物品
    extend Base
    {
        optional WishFlowerRs ext = 3022;
    }
}

message AllEnergyStoneRq {
    required int32 pos = 1;             // 出战部位 1.阵型第一格 2.阵型第二格 ...
    repeated TwoInt holeAndStoneId = 2; // 能晶1.镶嵌位置 2.能晶id
    extend Base
    {
        optional AllEnergyStoneRq ext = 3023;
    }
}

message AllEnergyStoneRs {
    extend Base
    {
        optional AllEnergyStoneRs ext = 3024;
    }
}

message EquipQualityUpRq { // 装备进阶
    required int32 pos = 1;                 //装备位置
    required int32 keyId = 2;               // 装备keyId
    extend Base
    {
        optional EquipQualityUpRq ext = 3025;
    }
}

message EquipQualityUpRs {
    required int32 equipId = 1;             //进阶后装备id
    required int32 lv = 2;                  //进阶后等级
    required int32 exp = 3;                 //进阶后经验
    repeated Atom2 atom2 = 4;               //消耗后的剩余资源
    extend Base
    {
        optional EquipQualityUpRs ext = 3026;
    }
}

message GetPayRebateRq {      // 请求转盘信息
    extend Base
    {
        optional GetPayRebateRq ext = 3027;
    }
}

message GetPayRebateRs {
    required PayRebate payRebate = 1;         // 活动信息
    extend Base
    {
        optional GetPayRebateRs ext = 3028;
    }
}

message DoPayRebateRq {      // 开始转盘
    extend Base
    {
        optional DoPayRebateRq ext = 3029;
    }
}

message DoPayRebateRs {
    required PayRebate payRebate = 1;         // 活动信息
    extend Base
    {
        optional DoPayRebateRs ext = 3030;
    }
}

message GetPirateLotteryRq {     // 请求海贼宝藏抽奖界面
    extend Base
    {
        optional GetPirateLotteryRq ext = 3031;
    }
}

message GetPirateLotteryRs {
    required PirateData data = 1;   // 界面信息
    required int32 awardId = 2; // 奖池id
    extend Base
    {
        optional GetPirateLotteryRs ext = 3032;
    }
}

message DoPirateLotteryRq {      // 请求海贼宝藏抽奖
    required int32 type = 1;     // 1.单抽  2.全抽
    extend Base
    {
        optional DoPirateLotteryRq ext = 3033;
    }
}

message DoPirateLotteryRs {
    required PirateData data = 1;   // 界面信息
    repeated Award awards = 2;      // 抽中道具
    required int32 gold = 3;        // 剩余金币
    extend Base
    {
        optional DoPirateLotteryRs ext = 3034;
    }
}

message ResetPirateLotteryRq {    // 重置海贼宝藏抽奖进度
    extend Base
    {
        optional ResetPirateLotteryRq ext = 3035;
    }
}

message ResetPirateLotteryRs {
    required PirateData data = 1;   // 界面信息
    extend Base
    {
        optional ResetPirateLotteryRs ext = 3036;
    }
}

message GetMedalRq {    // 勋章信息
    extend Base
    {
        optional GetMedalRq ext = 3037;
    }
}

message GetMedalRs {
    repeated Medal medal = 1;        //仓库  身上
    extend Base
    {
        optional GetMedalRs ext = 3038;
    }
}

message GetMedalChipRq {    // 勋章碎片信息
    extend Base
    {
        optional GetMedalChipRq ext = 3039;
    }
}

message GetMedalChipRs {    // 勋章碎片信息
    repeated MedalChip medalChip = 1;   //仓库
    extend Base
    {
        optional GetMedalChipRs ext = 3040;
    }
}

message CombineMedalRq {    // 合成勋章
    required int32 medalChipId = 1;   //碎片id
    extend Base
    {
        optional CombineMedalRq ext = 3041;
    }
}

message CombineMedalRs {    // 合成勋章
    required Medal medal = 1;   //勋章
    extend Base
    {
        optional CombineMedalRs ext = 3042;
    }
}

message ExplodeMedalRq {    // 分解勋章
    optional int32 keyId = 1;       //单个分解，传入
    repeated int32 quality = 2;     //批量分解，传入
    extend Base
    {
        optional ExplodeMedalRq ext = 3043;
    }
}

message ExplodeMedalRs {    // 分解勋章
    repeated Award awards = 1;   //增加奖励信息
    extend Base
    {
        optional ExplodeMedalRs ext = 3044;
    }
}

message ExplodeMedalChipRq {    // 分解勋章碎片
    optional int32 chipId = 1;
    optional int32 count = 2;
    repeated int32 quality = 3;     //批量分解
    extend Base
    {
        optional ExplodeMedalChipRq ext = 3045;
    }
}

message ExplodeMedalChipRs {    // 分解勋章碎片
    repeated Award awards = 1;   //增加奖励信息
    extend Base
    {
        optional ExplodeMedalChipRs ext = 3046;
    }
}

message OnMedalRq {    // 穿上、卸下勋章
    required int32 keyId = 1;    //勋章唯一id
    required int32 pos = 2;      //0穿上  1卸下
    extend Base
    {
        optional OnMedalRq ext = 3047;
    }
}

message OnMedalRs {    // 穿上、卸下勋章
    repeated Medal medals = 1;                //穿上、卸下的勋章列表
    extend Base
    {
        optional OnMedalRs ext = 3048;
    }
}

message LockMedalRq {    // 锁定勋章
    required int32 keyId = 1;    //勋章唯一id
    required int32 pos = 2;      //0仓库 1身上
    required bool locked = 3;    //真锁定 假未锁定
    extend Base
    {
        optional LockMedalRq ext = 3049;
    }
}

message LockMedalRs {
    required bool locked = 1;    //真锁定 假未锁定
    extend Base
    {
        optional LockMedalRs ext = 3050;
    }
}

message UpMedalRq {              //强化勋章
    required int32 keyId = 1;    //勋章唯一id
    required int32 pos = 2;      //0仓库 1身上
    extend Base
    {
        optional UpMedalRq ext = 3051;
    }
}

message UpMedalRs {
    required int32 hitState = 1; //0未发生  1发生升级 2发生经验暴击
    repeated Atom2 atom = 2;     //当前剩余道具
    required int32 cdTime = 3;   //cd结束时间
    required int32 upLv = 4;     //强化等级
    required int32 upExp = 5;    //强化经验
    extend Base
    {
        optional UpMedalRs ext = 3052;
    }
}

message BuyMedalCdTimeRq {       //购买强化勋章cd
    extend Base
    {
        optional BuyMedalCdTimeRq ext = 3053;
    }
}

message BuyMedalCdTimeRs {
    required int32 cdTime = 1; //cd结束时间
    required int32 gold = 2;   //金币当前数量
    extend Base
    {
        optional BuyMedalCdTimeRs ext = 3054;
    }
}

message RefitMedalRq {       //改造勋章
    required int32 keyId = 1;    //勋章唯一id
    required int32 pos = 2;      //0仓库 1身上
    extend Base
    {
        optional RefitMedalRq ext = 3055;
    }
}

message RefitMedalRs {
    required int32 refitLv = 1; //改造等级
    repeated Atom2 atom = 2;    //当前剩余道具
    extend Base
    {
        optional RefitMedalRs ext = 3056;
    }
}

message TransMedalRq {       //精炼勋章
    required int32 keyId = 1;    //勋章唯一id
    required int32 pos = 2;      //0仓库 1身上
    extend Base
    {
        optional TransMedalRq ext = 3357;
    }
}

message TransMedalRs {
    required Medal medal = 1; //改变后的勋章
    repeated Atom2 atom2 = 2; //剩余资源
    extend Base
    {
        optional TransMedalRs ext = 3358;
    }
}

message GetPirateChangeRq {
    extend Base
    {
        optional GetPirateChangeRq ext = 3057;
    }
}

message GetPirateChangeRs {
    optional Atom2 actProp = 1;     // 道具数量
    repeated TwoInt changeNum = 2;     // 兑换道具剩余次数
    required int32 awardId = 3; // 奖池id
    extend Base
    {
        optional GetPirateChangeRs ext = 3058;
    }
}

message DoPirateChangeRq {
    required int32 id = 1;             // 需要兑换的id
    extend Base
    {
        optional DoPirateChangeRq ext = 3059;
    }
}

message DoPirateChangeRs {
    required Atom2 actProp = 1;     // 更新道具数量
    repeated TwoInt changeNum = 2;     // 更细兑换剩余次数
    repeated Award award = 3;       //  获得的物品
    extend Base
    {
        optional DoPirateChangeRs ext = 3060;
    }
}

message BuyScoutCdTimeRq {
    extend Base
    {
        optional BuyScoutCdTimeRq ext = 3061;
    }
}

message BuyScoutCdTimeRs {
    required int32 cdTime = 1;        //cd结束时间
    required int32 gold = 2;          //当前金币
    extend Base
    {
        optional BuyScoutCdTimeRs ext = 3062;
    }
}

message GetActPirateRankRq {
    extend Base
    {
      optional GetActPirateRankRq ext = 3063;
    }
}

message GetActPirateRankRs {
    optional bool open = 1;                     //true可领奖
    optional int32 score = 2;                   //我的积分
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息
    extend Base
    {
      optional GetActPirateRankRs ext = 3064;
    }
}

message GetMedalBounsRq {    // 勋章展示信息
    extend Base
    {
        optional GetMedalBounsRq ext = 3065;
    }
}

message GetMedalBounsRs {
    repeated MedalBouns medalBouns = 1;
    extend Base
    {
        optional GetMedalBounsRs ext = 3066;
    }
}

message DoMedalBounsRq {    // 勋章展示
    required int32 costMedalKeyId = 1;    //消耗仓库中勋章keyId,用来展示
    extend Base
    {
        optional DoMedalBounsRq ext = 3067;
    }
}

message DoMedalBounsRs {
    extend Base
    {
        optional DoMedalBounsRs ext = 3068;
    }
}

message GetActRechargeRq {
    extend Base
    {
        optional GetActRechargeRq ext = 3069;
    }
}

message GetActRechargeRs {
    repeated TwoInt dayState = 1;      //索引是天数 值为充值进度、领取状态(0不能领取 1可以领取 2已经领取)
    extend Base
    {
        optional GetActRechargeRs ext = 3070;
    }
}

message DoActRechargeRq {
    required int32 day = 1;      //领取天数奖励
    extend Base
    {
        optional DoActRechargeRq ext = 3071;
    }
}

message DoActRechargeRs {
    repeated Award award = 1;
    extend Base
    {
        optional DoActRechargeRs ext = 3072;
    }
}

message GetSectionRewardRq {
    required int32 type = 1;      //关卡类型
    extend Base
    {
        optional GetSectionRewardRq ext = 3073;
    }
}

message GetSectionRewardRs {
    required SectionReward sectionReward = 1;      // 某类型关卡次数,奖励
    extend Base
    {
        optional GetSectionRewardRs ext = 3074;
    }
}

message DoSectionRewardRq {
    required int32 id = 1;      // 领取id
    extend Base
    {
        optional DoSectionRewardRq ext = 3075;
    }
}

message DoSectionRewardRs {
     repeated Award award = 1;
    extend Base
    {
        optional DoSectionRewardRs ext = 3076;
    }
}

message ActContuPayMoreRq {
    extend Base
    {
      optional ActContuPayMoreRq ext = 3077;
    }
}

message ActContuPayMoreRs {
    repeated int32 state = 1;   // 持续天数
    repeated ActivityCond activityCond = 2;
    extend Base
    {
      optional ActContuPayMoreRs ext = 3078;
    }
}

//获取能晶转盘界面信息
message GetActEnergyStoneDialRq {
    extend Base
    {
      optional GetActEnergyStoneDialRq ext = 3079;
    }
}

message GetActEnergyStoneDialRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;           //转盘
    optional int32 free = 3;                //免费次数
    optional string displayList = 4;        //显示奖励
    extend Base
    {
      optional GetActEnergyStoneDialRs ext = 3080;
    }
}

message GetActEnergyStoneDialRankRq {
    extend Base
    {
      optional GetActEnergyStoneDialRankRq ext = 3081;
    }
}

message GetActEnergyStoneDialRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 1 不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息


    extend Base
    {
      optional GetActEnergyStoneDialRankRs ext = 3082;
    }
}

//点击能晶转盘抽奖
message DoActEnergyStoneDialRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActEnergyStoneDialRq ext = 3083;
    }
}

message DoActEnergyStoneDialRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActEnergyStoneDialRs ext = 3084;
    }
}

message GetActBossRq {
    required int32 type = 1;      // 0请求全部信息包含自己  1只请求boss信息
    extend Base
    {
        optional GetActBossRq ext = 3085;
    }
}

message GetActBossRs {
    required int32 bossState = 1;      // boss状态  -1不能召唤 0可以召唤 1已召唤
    required int32 bossEndTime = 2;    // bosss结束时间
    required int32 bossBagNum = 3;     // bosss福袋量
    required int32 bossCallTimes = 4;  // bosss被召唤次数
    required string callLordName = 5;  // 召唤人名
    required string bossName = 6;      // boss名字
    required int32 bossIcon = 7;       // bossIcon

    optional int32 callTimes = 8;      // 自己召唤次数--请求boss时不返回
    repeated Atom2 actProp = 9;        // 活动道具数组--请求boss时不返回
    optional int32 attackCd = 10;      // 攻击CD结束时间--请求boss时不返回
    optional int32 bagNum = 11;         // 福袋量--请求boss时不返回

    extend Base
    {
        optional GetActBossRs ext = 3086;
    }
}

message CallActBossRq {
    extend Base
    {
        optional CallActBossRq ext = 3087;
    }
}

message CallActBossRs {//点击后请求一下界面Boss界面 自己信息可以不请求
    required int32 callTimes = 1;      // 自己召唤次数
    required Atom2 atom = 2;           // 道具当前数量
    extend Base
    {
        optional CallActBossRs ext = 3088;
    }
}

message AttackActBossRq {
    required int32 useId = 1;         // 1 第一个选项 2第二个扩展选张
    required bool useGold = 2;        // 是否使用金币替换
    extend Base
    {
        optional AttackActBossRq ext = 3089;
    }
}

message AttackActBossRs {
    required int32 attackCd = 1;      // 攻击CD结束时间
    repeated Atom2 atom = 2;          // 道具当前数量
    repeated Award award = 3;         //奖励
    required int32 bossState = 4;     // boss状态  -1不能召唤 0可以召唤 1已召唤
    required int32 bossBagNum = 5;    // bosss福袋量
    required int32 bagNum = 6;        // 福袋量
    extend Base
    {
        optional AttackActBossRs ext = 3090;
    }
}

message BuyActBossCdRq {
    extend Base
    {
        optional BuyActBossCdRq ext = 3091;
    }
}

message BuyActBossCdRs {
    required int32 cdTime = 1;        //cd结束时间
    required int32 gold = 2;          //当前金币
    extend Base
    {
        optional BuyActBossCdRs ext = 3092;
    }
}

message GetActBossRankRq {
    required int32 rankType = 1;      // 0福袋 1召唤
    extend Base
    {
      optional GetActBossRankRq ext = 3093;
    }
}

message GetActBossRankRs {
    optional int32 score = 1;                    //我的积分
    repeated ActPlayerRank actPlayerRank = 2;    //排行榜  （只显示前30名）
    optional bool open = 3;                      //true可领奖励 1 不可领奖
    repeated RankAward rankAward = 4;            //排名奖励信息
    optional int32 status = 5;                   //0未领 1已领
    extend Base
    {
      optional GetActBossRankRs ext = 3094;
    }
}

message UsePropChooseRq {
    required int32 propId = 1;
    required int32 count = 2;
    required int32 chooseId = 3;
    required int32 chooseType = 4;
    extend Base
    {
      optional UsePropChooseRq ext = 3095;
    }
}

message UsePropChooseRs {
    optional int32 count = 1;       //使用后道具数量
    repeated Award award = 2;
    extend Base
    {
      optional UsePropChooseRs ext = 3096;
    }
}

message GetActHilarityPrayRq {
    extend Base
    {
      optional GetActHilarityPrayRq ext = 3097;
    }
}

message GetActHilarityPrayRs {
    repeated int32 keyId = 1;       // 奖励id
    repeated int32 status = 2;      // 领取状态     1.可领     -1.已领      0.条件不满足不可领
    repeated int32 value = 3;       // 类型值       1.领挂件：连续充值天数            2.首冲领取(无)     3.额度领取：剩余额度
    extend Base
    {
      optional GetActHilarityPrayRs ext = 3098;
    }
}

message ReceiveActHilarityPrayRq {
    required int32 keyId = 1;       // 奖励id
    extend Base
    {
      optional ReceiveActHilarityPrayRq ext = 3099;
    }
}

message ReceiveActHilarityPrayRs {
    required int32 keyId = 1;       // 奖励id
    required int32 status = 2;      // 领取状态     1.可领      0.已领       -1.条件不满足不可领
    required int32 value = 3;       // 类型值       1.领挂件：连续充值天数            2.首冲领取(无)     3.额度领取：剩余额度
    repeated Award awards = 4;      // 奖励道具
    extend Base
    {
      optional ReceiveActHilarityPrayRs ext = 3100;
    }
}

message GetActHilarityPrayActionRq {
    extend Base
    {
      optional GetActHilarityPrayActionRq ext = 4001;
    }
}

message GetActHilarityPrayActionRs {
    repeated Atom2 actProp = 1;     // 祝福卡数量
    repeated int32 index = 2;       // 祈福位置 (1-6)
    repeated int32 time = 3;        // 祈福位置对应时间
    repeated int32 propId = 4;      // 祈福位置对应使用的祝福卡id
    extend Base
    {
      optional GetActHilarityPrayActionRs ext = 4002;
    }
}

message DoActHilarityPrayActionRq {
    required int32 index = 1;       // 祈福位置
    required int32 prop = 2;        // 使用道具
    extend Base
    {
      optional DoActHilarityPrayActionRq ext = 4003;
    }
}

message DoActHilarityPrayActionRs {
    repeated Atom2 actProp = 1;     // 祝福卡数量
    required int32 index = 2;       // 祈福位置 (1-6)
    required int32 time = 3;        // 祈福位置对应时间
    required int32 propId = 4;      // 祈福位置对应使用的祝福卡id
    extend Base
    {
      optional DoActHilarityPrayActionRs ext = 4004;
    }
}

message ReceiveActHilarityPrayActionRq {
    required int32 index = 1;       // 祈福位置
    extend Base
    {
      optional ReceiveActHilarityPrayActionRq ext = 4005;
    }
}

message ReceiveActHilarityPrayActionRs {
    required int32 index = 1;     // 领取的位置
    repeated Award awards = 2;     // 奖励
    extend Base
    {
      optional ReceiveActHilarityPrayActionRs ext = 4006;
    }
}

message SpeedActHilarityPrayActionRq {
    required int32 index = 1;       // 祈福位置
    extend Base
    {
      optional SpeedActHilarityPrayActionRq ext = 4007;
    }
}

message SpeedActHilarityPrayActionRs {
    required int32 index = 1;     // 加速的位置
    required int32 time = 2;      // 加速后将祈福起始时间设为1
    required int32 gold = 3;      // 剩余金币
    extend Base
    {
      optional SpeedActHilarityPrayActionRs ext = 4008;
    }
}

message LockHeroRq {
    required int32 heroId = 1;      // 将领id
    required bool locked = 2;       // 是否锁定
    extend Base
    {
      optional LockHeroRq ext = 4009;
    }
}

message LockHeroRs {
    extend Base
    {
      optional LockHeroRs ext = 4010;
    }
}

message GetDay7ActTipsRq {
    extend Base
    {
      optional GetDay7ActTipsRq ext = 4011;
    }
}

message GetDay7ActTipsRs {
    repeated int32 tips = 1;     // 每天小红点数
    optional bool lvUpIsUse = 2;   //7日活动-快速升级是否使用
    extend Base
    {
      optional GetDay7ActTipsRs ext = 4012;
    }
}

message GetDay7ActRq {
    required int32 day = 1;      // 哪天
    extend Base
    {
      optional GetDay7ActRq ext = 4013;
    }
}

message GetDay7ActRs {
    repeated Day7Act day7Acts = 1;   // 奖励领取状态
    extend Base
    {
      optional GetDay7ActRs ext = 4014;
    }
}

message RecvDay7ActAwardRq {
    required int32 keyId = 1;      // 奖励id
    extend Base
    {
      optional RecvDay7ActAwardRq ext = 4015;
    }
}

message RecvDay7ActAwardRs {
    repeated Award awards = 1;    // 奖励
    repeated Atom2 atom2 = 2;     // 当前剩余各种道具
    extend Base
    {
      optional RecvDay7ActAwardRs ext = 4016;
    }
}

message Day7ActLvUpRq {
    extend Base
    {
      optional Day7ActLvUpRq ext = 4017;
    }
}

message Day7ActLvUpRs {
    repeated Award award = 1;      // 增加经验
    extend Base
    {
      optional Day7ActLvUpRs ext = 4018;
    }
}

message GetOverRebateActRq {
    extend Base
    {
      optional GetOverRebateActRq ext = 4019;
    }
}

message GetOverRebateActRs {
    required int32 gambleId = 1;   // 转盘id
    required int32 payNum = 2;     // 我的充值额度
    repeated int32 hasIndex = 3;   // 已经抽到的道具下标
    extend Base
    {
      optional GetOverRebateActRs ext = 4020;
    }
}

message DoOverRebateActRq {
    extend Base
    {
      optional DoOverRebateActRq ext = 4021;
    }
}

message DoOverRebateActRs {
    required int32 Index = 1;   // 抽到的物品下标
    repeated Award awards = 2;  // 抽到的奖励物品
    extend Base
    {
      optional DoOverRebateActRs ext = 4022;
    }
}

message SynInnerModPropsRq{
    required int32 type = 1;    //  1.增加   -1.减少
    repeated Atom2 props = 2;   //  变动的物品数量
    extend Base
    {
        optional SynInnerModPropsRq ext = 1039;
    }
}

message GetWorshipGodActRq {
    extend Base
    {
      optional GetWorshipGodActRq ext = 4023;
    }
}

message GetWorshipGodActRs{
    required int32 count = 1;    //  剩余拜神次数
    repeated TwoInt record = 2;   //  金币记录  (时间  ：比例)
    extend Base
    {
        optional GetWorshipGodActRs ext = 4024;
    }
}

message DoWorshipGodActRq {
    extend Base
    {
      optional DoWorshipGodActRq ext = 4025;
    }
}

message DoWorshipGodActRs {
    required int64 time = 1;  // 时间
    required int32 proportion = 2;  // 获取金币比例
    extend Base
    {
      optional DoWorshipGodActRs ext = 4026;
    }
}

message GetWorshipTaskActRq {
    extend Base
    {
      optional GetWorshipTaskActRq ext = 4027;
    }
}

message GetWorshipTaskActRs {
    required int32 awardId = 1; // 奖励id
    repeated TwoInt taskNum = 2; // 任务完成数量  (任务下标  ：完成数量)
    required int32 count = 3; // 可许愿次数
    extend Base
    {
      optional GetWorshipTaskActRs ext = 4028;
    }
}

message DoWorshipTaskActRq {
    extend Base
    {
      optional DoWorshipTaskActRq ext = 4029;
    }
}

message DoWorshipTaskActRs {
    repeated Award award = 1;  //  许愿奖励
    extend Base
    {
      optional DoWorshipTaskActRs ext = 4030;
    }
}

message GetSettingRq {  //获取设置
    extend Base
    {
      optional GetSettingRq ext = 4031;
    }
}

message GetSettingRs {
    repeated int32 closeType = 1;
    extend Base
    {
      optional GetSettingRs ext = 4032;
    }
}

message SetSettingRq {  //设置
    required int32 closeType = 1;
    required bool isOpen = 2;
    extend Base
    {
      optional SetSettingRq ext = 4033;
    }
}

message SetSettingRs {
    extend Base
    {
      optional SetSettingRs ext = 4034;
    }
}

message RecvLotteryluckyAwardRq {  //领取探宝幸运值奖励
    required int32 keyId = 1;      //领取id
    extend Base
    {
      optional RecvLotteryluckyAwardRq ext = 4035;
    }
}

message RecvLotteryluckyAwardRs {
    repeated Award award = 1;     //奖励
    extend Base
    {
      optional RecvLotteryluckyAwardRs ext = 4036;
    }
}

message ActRebelIsDeadRq {
    required int32 pos = 1;                 // 坐标
    extend Base
    {
        optional ActRebelIsDeadRq ext = 4037;
    }
}

message ActRebelIsDeadRs {
    required int32 pos = 1;                 // 坐标
    required bool isDead = 2;               // 该坐标的叛军是否死亡
    extend Base
    {
        optional ActRebelIsDeadRs ext = 4038;
    }
}

message GetActMergeGiftRq {
    extend Base
    {
      optional GetActMergeGiftRq ext = 4039;
    }
}

message GetActMergeGiftRs {
    repeated ActivityCond conds = 1;
    extend Base
    {
      optional GetActMergeGiftRs ext = 4040;
    }
}

message SynDay7ActTipsRq {
    repeated int32 tips = 1;     // 每天小红点数
    extend Base
    {
      optional SynDay7ActTipsRq ext = 1065;
    }
}

message GetActRebelRankRq {
    required int32 page = 1;                // 分页，每一页显示20个，第一页page=0，第二页page=1
    extend Base
    {
        optional GetActRebelRankRq ext = 4041;
    }
}

message GetActRebelRankRs {
    required int32 killNum = 1;             // 玩家击杀分队数量
    required int32 score = 2;               // 玩家的积分
    required int32 rank = 3;                // 玩家积分排行，0为未上榜
    optional bool getReward = 4;            // 是否已领取奖励，只有玩家上榜，并在可领取奖励的排名内才有值
    repeated ActRebelRank rebelRanks = 5;   // 排行榜数据
    extend Base
    {
        optional GetActRebelRankRs ext = 4042;
    }
}

message ActRebelRankRewardRq {
    extend Base
    {
        optional ActRebelRankRewardRq ext = 4043;
    }
}

message ActRebelRankRewardRs {
    repeated Award award = 1;               //奖励
    extend Base
    {
        optional ActRebelRankRewardRs ext = 4044;
    }
}

message HeroAwakenRq {
    required int32 heroId = 1;              // 觉醒英雄id
    extend Base
    {
        optional HeroAwakenRq ext = 4045;
    }
}

message HeroAwakenRs {
    required AwakenHero awakenHero = 1;     // 觉醒英雄数据
    extend Base
    {
        optional HeroAwakenRs ext = 4046;
    }
}

message HeroAwakenSkillLvRq {
    required int32 id = 1;              // 升级方式
    required int32 keyId = 2;           // 觉醒英雄唯一id
    extend Base
    {
        optional HeroAwakenSkillLvRq ext = 4047;
    }
}

message HeroAwakenSkillLvRs {
    required int32 keyId = 1;               // 觉醒英雄唯一id
    required int32 lvState = 2;             // 升级状态 0升级失败 1升级成功 2主动技能满级，觉醒成功
    repeated TwoInt skill = 3;              // 技能id-等级
    required int32 failTimes = 4;           // 失败次数
    repeated Atom2 atom2 = 5;               // 消耗后的剩余资源
    extend Base
    {
        optional HeroAwakenSkillLvRs ext = 4048;
    }
}

//商店购买信息
message GetShopInfoRq{
    extend Base
    {
        optional GetShopInfoRq ext = 4049;
    }
}

message GetShopInfoRs{
    repeated Shop shop = 2;//商店信息
    extend Base
    {
        optional GetShopInfoRs ext = 4050;
    }
}

//购买商品
message BuyShopGoodsRq{
    required int32 sty = 1;//商城类型, 101:VIP商城,201世界商城
    required int32 gid = 2;//商店商品唯一ID
    required int32 count = 3;//购买数量
    extend Base
    {
        optional BuyShopGoodsRq ext = 4051;
    }
}

message BuyShopGoodsRs{
    optional int32 gold = 3;//购买后金币数量
    extend Base
    {
        optional BuyShopGoodsRs ext = 4052;
    }
}

message GetActCollegeRq {
    extend Base
    {
        optional GetActCollegeRq ext = 4053;
    }
}

message GetActCollegeRs {
    required int32 id = 1;              // 学科id
    required int32 point = 2;           // 学科点数
    required int32 totalPoint = 3;      // 学科累计点数
    required Atom2 actProp = 4;         // 道具数量
    required int32 freeTime = 5;        // 最后一次开始恢复时间秒 大于0则正在恢复 一分钟恢复1本 满了则为0
    required int32 buyPropNum = 6;      // 购买活动道具数
    extend Base
    {
        optional GetActCollegeRs ext = 4054;
    }
}

message BuyActPropRq {
    required int32 id = 1;              // 活动道具id
    required int32 count = 2;           // 数量1-1000
    extend Base
    {
        optional BuyActPropRq ext = 4055;
    }
}

message BuyActPropRs {
    repeated Atom2 atom2 = 1;           // 消耗后的剩余资源
    optional int32 freeTime = 2;        // 最后一次开始恢复时间秒 大于0则正在恢复 一分钟恢复1本 满了则为0
    required int32 buyPropNum = 3;      // 购买活动道具数
    extend Base
    {
        optional BuyActPropRs ext = 4056;
    }
}

message DoActCollegeRq {
    required int32 times = 1;           // 次数1 10 限制100
    optional bool useGold = 2;          // 是否使用金币购买
    extend Base
    {
        optional DoActCollegeRq ext = 4057;
    }
}

message DoActCollegeRs {
    required int32 id = 1;              // 学科id
    required int32 point = 2;           // 学科点数
    required int32 totalPoint = 3;      // 学科累计点数
    required Atom2 actProp = 4;         // 道具数量
    required int32 freeTime = 5;        // 最后一次开始恢复时间秒 大于0则正在恢复 一分钟恢复1本 满了则为0
    repeated Award award = 6;           // 奖励
    extend Base
    {
        optional DoActCollegeRs ext = 4058;
    }
}

//每月签到信息
message GetMonthSignRq{
    extend Base{
        optional GetMonthSignRq ext = 4061;
    }
}

message GetMonthSignRs{
    optional sint32 today_sign = 1;//今天签到信息: 0-今日未签到,1-今日已签到,2-今日已签到并且有VIP加成
    optional sint32 days = 2;//本月累计签到天数
    repeated sint32 day_ext = 3; // 本月已领取的累计签到额外奖励(天数)
    extend Base{
        optional GetMonthSignRs ext = 4062;
    }
}

//签到
message MonthSignRq{
    extend Base{
        optional MonthSignRq ext = 4063;
    }
}

message MonthSignRs{
    optional sint32 today_sign = 1;//今天签到信息: 0-今日未签到,1-今日已签到,2-今日已签到并且有VIP加成
    optional sint32 days = 2;//本月累计签到天数
    repeated Award award = 3;
    extend Base{
        optional MonthSignRs ext = 4064;
    }
}

//领取每月签到额外奖励
message DrawMonthSignExtRq{
    optional sint32 days = 1;//累计签到天数
    extend Base{
        optional DrawMonthSignExtRq ext = 4065;
    }
}

message DrawMonthSignExtRs{
    optional sint32 days = 1;//累计签到天数
    repeated sint32 day_ext = 2; // 本月已领取的累计签到额外奖励(天数)
    repeated Award award = 3;
    extend Base{
        optional DrawMonthSignExtRs ext = 4066;
    }
}

//飞艇[4067-4200]
message CreateAirshipTeamRq {
    required int32 id = 1;              // 飞艇id
    extend Base
    {
      optional CreateAirshipTeamRq ext = 4067;
    }
}

message CreateAirshipTeamRs {
    required AirshipTeam airshipTeam = 1;       //组队信息
    repeated Atom2 atom2 = 2;                   //剩余道具信息,免费创建时为空
    extend Base
    {
      optional CreateAirshipTeamRs ext = 4068;
    }
}

//加入军团玩家创建的战事(队伍)
message JoinAirshipTeamRq {
    required int64 teamLeader = 1;      //队长ID
    required int32 airshipId = 2;       //飞艇ID(队伍ID)
    required Form form = 3;             //阵形
    extend Base
    {
      optional JoinAirshipTeamRq ext = 4069;
    }
}

message JoinAirshipTeamRs {
    required Army army = 1;     //部队信息
    extend Base
    {
      optional JoinAirshipTeamRs ext = 4070;
    }
}

message CancelTeamRq {  //撤销组队
    extend Base
    {
      optional CancelTeamRq ext = 4071;
    }
}

message CancelTeamRs {
    extend Base
    {
      optional CancelTeamRs ext = 4072;
    }
}

//获取成员战事队伍列表
//注:一个玩家同一时间只能对一个飞艇发起一个战事集结
message GetAirshipTeamListRq {
    required bool self = 1;//true-获取自己的队伍,false-获取成员的队伍列表
    extend Base
    {
      optional GetAirshipTeamListRq ext = 4073;
    }
}

message GetAirshipTeamListRs {
    repeated AirshipTeam teams = 1;     //成员组队信息
    extend Base
    {
      optional GetAirshipTeamListRs ext = 4074;
    }
}

//获取组队详情
message GetAirshipTeamDetailRq {
    required int32 airshipId = 1;          //飞艇ID(一个工会同一时间对一个飞艇只能有一个队伍集结)
    extend Base
    {
      optional GetAirshipTeamDetailRq ext = 4075;
    }
}

message GetAirshipTeamDetailRs {
    repeated AirshipArmy armys = 2;       //部队信息
    extend Base
    {
      optional GetAirshipTeamDetailRs ext = 4076;
    }
}

message SetPlayerAttackSeqRq {          //设置攻击顺序
    required int64 lordId = 1;          // 角色id
    required int32 armyKeyId = 2;       // 部队id
    required int32 step = 3;            // 前移动+1 +2 后移动 -1 -2
    optional bool isGuard = 4;          // 是否驻防
    optional int32 guardAishipId = 5;   // 驻防飞艇id
    extend Base
    {
      optional SetPlayerAttackSeqRq ext = 4077;
    }
}

message SetPlayerAttackSeqRs {
    extend Base
    {
      optional SetPlayerAttackSeqRs ext = 4078;
    }
}

message StartAirshipTeamMarchRq {  //开始行军
    extend Base
    {
      optional StartAirshipTeamMarchRq ext = 4079;
    }
}

message StartAirshipTeamMarchRs {
    extend Base
    {
      optional StartAirshipTeamMarchRs ext = 4080;
    }
}

message GuardAirshipRq {
    required int32 id = 1;
    required Form form = 2;
    required int64 fight = 4;      //战力
    extend Base
    {
      optional GuardAirshipRq ext = 4083;
    }
}

message GuardAirshipRs {
    required Army army = 1;     //部队信息
    extend Base
    {
      optional GuardAirshipRs ext = 4084;
    }
}

//获取部队信息
message GetAirshpTeamArmyRq {
    required int32 airshipId = 1;       //飞艇ID
    required int64 lordId = 2;          //查看角色id
    required int32 armyKeyId = 3;       //查看角色的部队id
    extend Base
    {
      optional GetAirshpTeamArmyRq ext = 4085;
    }
}

message GetAirshpTeamArmyRs {
    required Army army = 1;             // 部队
    extend Base
    {
      optional GetAirshpTeamArmyRs ext = 4086;
    }
}

message GetAirshipGuardRq {  //获取组队信息
    required int32 id = 1;                 // 飞艇id
    extend Base
    {
      optional GetAirshipGuardRq ext = 4087;
    }
}

message GetAirshipGuardRs{
    repeated AirshipArmy armys = 1;   //部队信息
    extend Base
    {
      optional GetAirshipGuardRs ext = 4088;
    }
}

//侦查飞艇
message ScoutAirshipRq {
    required int32 id = 1;                 // 飞艇id
    extend Base
    {
      optional ScoutAirshipRq ext = 4089;
    }
}

message ScoutAirshipRs {
    required int32 commanderCount = 1;      // 指挥官数量
    required int32 tankCount = 2;           // 坦克数量
    required int64 fightCount = 3;          // 战力数量
    required int64 validEndTime = 4;        // 侦查有效期结束时间
    repeated Atom2 atom2 = 5;               // 扣除资源后的剩余资源
    extend Base
    {
      optional ScoutAirshipRs ext = 4090;
    }
}

//领取飞艇生产的物资奖励
message RecvAirshipProduceAwardRq {
    required int32 id = 1;                  //飞艇id
    required bool useProp = 2;              //true-使用物资征收令获得多倍道具
    extend Base
    {
      optional RecvAirshipProduceAwardRq ext = 4091;
    }
}

message RecvAirshipProduceAwardRs {
    required int32 produceTime = 1;     //自产开始时间
    required int32 produceNum = 2;      //自产数量
    repeated Award award = 3;           //获得资源
    repeated Atom2 atom2 = 4;           //剩余道具
    extend Base
    {
      optional RecvAirshipProduceAwardRs ext = 4092;
    }
}

//任命飞艇指挥官
message AppointAirshipCommanderRq{
    required int32 airship_id       = 1;//飞艇ID
    required int64 lordId           = 2;//被任命的指挥官ID
    extend Base{
        optional AppointAirshipCommanderRq ext = 4093;
    }
}

message AppointAirshipCommanderRs{
    required int32 airship_id       = 1;//飞艇ID
    required int64 lordId           = 2;//被任命的指挥官ID
    extend Base{
        optional AppointAirshipCommanderRs ext = 4094;
    }
}

//获取军团中所有飞艇指挥官信息
message GetPartyAirshipCommanderRq{
    extend Base{
        optional GetPartyAirshipCommanderRq ext = 4095;
    }
}

message GetPartyAirshipCommanderRs{
    repeated KvLong kv = 1;//KEY:飞艇ID,VALUE:指挥官ID
    extend Base{
        optional GetPartyAirshipCommanderRs ext = 4096;
    }
}

//重建飞艇
message RebuildAirshipRq{
    required int32 airshipId = 1;
    extend Base{
        optional RebuildAirshipRq ext = 4097;
    }
}

message RebuildAirshipRs{
    required int32 airshipId = 1;       //飞艇ID
    required int32 durability = 2;      //耐久度
    repeated Atom2 atom = 3;            //剩余资源
    extend Base{
        optional RebuildAirshipRs ext = 4098;
    }
}

//获取全部飞艇信息
message GetAirshipRq {
    required int32 airshipId = 1;       //飞艇ID, 0-请求所有飞艇信息
    extend Base
    {
      optional GetAirshipRq ext = 4099;
    }
}

message GetAirshipRs {
    repeated Airship airship = 1;         //全部飞艇信息
    extend Base
    {
      optional GetAirshipRs ext = 4100;
    }
}

//根据飞艇ID获取飞艇信息
message GetAirshipPlayerRq{
    required int32 airshipId = 1;//飞艇ID
    extend Base{
        optional GetAirshipPlayerRq ext = 4101;
    }
}

message GetAirshipPlayerRs{
    optional int32 validEndTime = 1;            //侦查有效时间
    optional int32 remianFreeCnt = 2;           //今日免费创建攻打飞艇集结次数
    extend Base{
        optional GetAirshipPlayerRs ext = 4102;
    }
}

//查看飞艇驻军部队信息
message GetAirshipGuardArmyRq{
    required int32 airshipId = 1;               //飞艇ID
    required int64 lordId = 2;                  //查看玩家ID
    required int32 keyId = 3;                   //查看的部队ID
    extend Base{
        optional GetAirshipGuardArmyRq ext = 4103;
    }
}

message GetAirshipGuardArmyRs{
    required Army army = 1;             // 部队信息
    extend Base{
        optional GetAirshipGuardArmyRs ext = 4104;
    }
}

//同步飞艇部队信息
message SynAirshipTeamArmyRq{
    required int32 state = 1;           // 1消失 2状态改变
    extend Base
    {
      optional SynAirshipTeamArmyRq ext = 1067;
    }
}

//同步飞艇队伍状态信息
message SynAirshipTeamRq{
    required int32 airshipId = 1;       //队伍ID(飞艇ID)
    required int32 status = 2;          //队伍状态(1-创建,2-变化,3-删除)
    extend Base{
        optional SynAirshipTeamRq ext = 1069;
    }
}

//同步飞艇变化
message SynAirshipChangeRq{
    required int32 airshipId = 1;//飞艇ID
    extend Base{
        optional SynAirshipChangeRq ext = 1071;
    }
}


//获取飞艇征收详情
message GetRecvAirshipProduceAwardRecordRq{
    required int32 airshipId = 1;       //队伍ID(飞艇ID)
    extend Base{
        optional GetRecvAirshipProduceAwardRecordRq ext = 4105;
    }
}

message GetRecvAirshipProduceAwardRecordRs{
    repeated RecvAirshipProduceAwardRecord records = 1; //征收记录列表
    extend Base{
        optional GetRecvAirshipProduceAwardRecordRs ext = 4106;
    }
}

//军备相关协议[4201 - 4400]

//军备列表
message GetLordEquipInfoRq{
    extend Base{
        optional GetLordEquipInfoRq ext = 4201;
    }
}

message GetLordEquipInfoRs{
    repeated LordEquip puton = 1;//穿在指挥官身上的装备列表
    repeated LordEquip store = 2;//仓库中的装备列表
    repeated Prop prop = 3;//材料和图纸列表
    optional LordEquipBuilding leqb = 4;//生产中的军备
    optional bool free = 6;//true-最高解锁的铁匠有一次免费使用的机会
    optional int32 employ_tech_id = 7;//雇佣中的铁匠
    optional int32 employ_end_time = 8;//雇佣结束时间
    optional int32 unlock_tech_max = 9;//已解锁的最高技工ID
    repeated LeqMatBuilding mat_queue = 10;//材料生产队列
    optional int32 buyCount = 11;//已经购买的坑位个数
    extend Base{
        optional GetLordEquipInfoRs ext = 4202;
    }
}

//军备穿戴
message PutonLordEquipRq{
    required sint32 keyId = 1;//装备唯一ID
    extend Base{
        optional PutonLordEquipRq ext = 4203;
    }
}

message PutonLordEquipRs{
    repeated LordEquip le = 1;//军备信息
    extend Base{
        optional PutonLordEquipRs ext = 4204;
    }
}

//军备脱下
message TakeOffEquipRq{
    required int32 pos = 1;//军备位置
    extend Base{
        optional TakeOffEquipRq ext = 4205;
    }
}

message TakeOffEquipRs{
    optional LordEquip le = 1;//军备信息
    extend Base{
        optional TakeOffEquipRs ext = 4206;
    }
}

//军备分享
message ShareLordEquipRq{
    extend Base{
        optional ShareLordEquipRq ext = 4207;
    }
}

message ShareLordEquipRs{
    extend Base{
        optional ShareLordEquipRs ext = 4208;
    }
}

//军备生产
message ProductEquipRq{
    required int32  equip_id = 1;//生产的军备ID;
    extend Base{
        optional ProductEquipRq ext = 4209;
    }
}

message ProductEquipRs{
    optional LordEquipBuilding leqb = 1;//生产信息
    repeated Atom2 cost = 2;//消耗的材料列表
    extend Base{
        optional ProductEquipRs ext = 4210;
    }
}

//装备打造结束,收取装备
message CollectLordEquipRq{
    extend Base{
        optional CollectLordEquipRq ext = 4211;
    }
}

message CollectLordEquipRs{
    optional LordEquip lord_equip = 1;//收取的军备
    extend Base{
        optional CollectLordEquipRs ext = 4212;
    }
}


//分解军备
message ResloveLordEquipRq{
    optional int32 keyId = 1;//军备ID列表
    repeated int32 quality = 2;//品质
    extend Base{
        optional ResloveLordEquipRq ext = 4213;
    }
}

message ResloveLordEquipRs{
    repeated Award award = 2;//分解获得的材料
    extend Base{
        optional ResloveLordEquipRs ext = 4214;
    }
}

//使用铁匠加速
message UseTechnicalRq{
    extend Base{
        optional UseTechnicalRq ext = 4215;
    }
}

message UseTechnicalRs{
    optional int32 tech_id = 1;//加速的铁匠
    optional int32 end_time = 2;//军备打造结束时间
    extend Base{
        optional UseTechnicalRs ext = 4216;
    }
}

//雇佣铁匠
message EmployTechnicalRq{
    required int32 tech_id = 1;//技工ID
    extend Base{
        optional EmployTechnicalRq ext = 4217;
    }
}

message EmployTechnicalRs{
    optional int32 tech_id = 1;//技工ID
    optional int32 employ_end_time = 2;//技工雇佣结束时间
    optional int32 gold = 3;//剩余金币数
    extend Base{
        optional EmployTechnicalRs ext = 4218;
    }
}

//使用金币加速生产军备
message LordEquipSpeedByGoldRq{
    extend Base{
        optional LordEquipSpeedByGoldRq ext = 4219;
    }
}

message LordEquipSpeedByGoldRs{
    optional int32 gold = 1;//剩余金币数
    extend Base{
        optional LordEquipSpeedByGoldRs ext = 4220;
    }
}



//军备锁定
message LockLordEquipRq{
    required int32 keyId = 1;//军备ID列表
	required int32 puton = 2;//  0 未穿戴 1 已穿戴
    extend Base{
        optional LockLordEquipRq ext = 4221;
    }
}

message LockLordEquipRs{
    required LordEquip lordEquip = 1;
    extend Base{
        optional LockLordEquipRs ext = 4222;
    }
}

















// 生产军备材料
message ProductLordEquipMatRq{
    required int32 quality = 1;//需要生产的品质
    required int32 costId = 2;//消耗的材料(图纸)ID
    extend Base{
        optional ProductLordEquipMatRq ext = 4261;
    }
}

message ProductLordEquipMatRs{
    repeated Atom2 cost =1; //消耗的材料
    repeated LeqMatBuilding lemb = 2;//材料生产队列
    extend Base{
        optional ProductLordEquipMatRs ext = 4262;
    }
}

//扩建军备材料生产队列
message BuyMaterialProRq{
    extend Base{
        optional BuyMaterialProRq ext = 4263;
    }
}

message BuyMaterialProRs{
    optional int32 gold = 1;//购买后剩余金币
    optional int32 buyCount = 2;//已经购买的坑位个数
    extend Base{
        optional BuyMaterialProRs ext = 4264;
    }
}

//收取已经生产完成的材料
message CollectLeqMaterialRq{
    required int32 queue_idx = 1;//生产队列位置(0-n)
    extend Base{
        optional CollectLeqMaterialRq ext = 4265;
    }
}

message CollectLeqMaterialRs{
    required int32 queue_idx = 1;//生产队列位置(0-n)
    optional Award award = 2;// 收取的材料
    repeated LeqMatBuilding lemb = 3;//剩余材料生产队列
    extend Base{
        optional CollectLeqMaterialRs ext = 4266;
    }
}

//当有生产队列时,没分钟更新队列完成进度
message GetLembQueueRq{
    extend Base{
        optional GetLembQueueRq ext = 4267;
    }
}

message GetLembQueueRs{
    repeated LeqMatBuilding lemb = 2;//材料生产队列
    extend Base{
        optional GetLembQueueRs ext = 4268;
    }
}

//主推解锁的最高技工
message SynUnlockTechnicalRq{
    optional int32 unlock_tech_max = 1;//当前解锁的最高技工等级
    optional bool free = 2;//是否免费
    extend Base{
        optional SynUnlockTechnicalRq ext = 1041;//主推当前解锁的最高技工
    }
}

//军备洗练功能
message LordEquipChangeRq{
    required int32 type = 1;                    // 1 一般洗练 2 至尊洗练 3 神秘洗练
    required int32 keyId = 2;
    required int32 puton = 3;                   // 0 未穿戴 1 已穿戴
    extend Base{
        optional LordEquipChangeRq ext = 4281;
    }
}

message LordEquipChangeRs{
    required int32 num = 1;                                                // 免费剩余次数
    required int32 gold = 2;                                               // 金币数
    required LordEquip le = 3;                                             // 洗练后军备信息
    extend Base{
        optional LordEquipChangeRs ext = 4282;
    }
}

//获取免费洗练次数和恢复时间
message LordEquipChangeFreeTimeRq{
    extend Base{
        optional LordEquipChangeFreeTimeRq ext = 4283;
    }
}

message LordEquipChangeFreeTimeRs{
    required int32 remainingTime = 1;                                // 剩余恢复时间(秒)
    required int32 num = 2;                                          // 免费剩余次数
    extend Base{
        optional LordEquipChangeFreeTimeRs ext = 4284;
    }
}



//军备第二套熟悉继承激活
message LordEquipInheritRq{
    required int32 keyId = 1;
    required int32 puton = 2;                   // 0 未穿戴 1 已穿戴
	required int32 consumekeyId = 3;//消耗得军备keyid
    extend Base{
        optional LordEquipInheritRq ext = 4285;
    }
}

message LordEquipInheritRs{
    required int32 gold = 1;                                               // 金币数
    required LordEquip le = 2;                                             // 洗练后军备信息
    extend Base{
        optional LordEquipInheritRs ext = 4286;
    }
}


//设置军备使用的是第几套
message SetLordEquipUseTypeRq{
    required int32 type = 1;                    // 0第一套  1第二套
	optional int32 keyId = 2;
    optional int32 puton = 3;                   // 0 未穿戴 1 已穿戴
	required int32 operationType = 4; //操作类型 1单个  2批量
    extend Base{
        optional SetLordEquipUseTypeRq ext = 4287;
    }
}

message SetLordEquipUseTypeRs{
    repeated LordEquip le = 1;
    extend Base{
        optional SetLordEquipUseTypeRs ext = 4288;
    }
}



//运营活动协议扩展区间[4401 - 5000)

//获取部件淬炼暴击活动信息
message GetActSmeltPartCritRq{
    extend Base{
        optional GetActSmeltPartCritRq ext = 4401;
    }
}

message GetActSmeltPartCritRs{
    repeated Quota quota = 1;
    extend Base{
        optional GetActSmeltPartCritRs ext = 4402;
    }
}

//获取部件淬炼大师活动信息
message GetActSmeltPartMasterRq{
    extend Base{
        optional GetActSmeltPartMasterRq ext = 4403;
    }
}

message GetActSmeltPartMasterRs{
    repeated Atom2 props = 1;           //氪金数量
    required int32 point = 2;           //抽奖积分
    repeated Broadcast broadcast = 3;   //全服显示信息
    extend Base{
        optional GetActSmeltPartMasterRs ext = 4404;
    }
}

//淬炼大师活动中,消耗氪金抽奖
message LotteryInSmeltPartMasterRq{
    required int32 times = 1;//抽奖次数
    extend Base{
        optional LotteryInSmeltPartMasterRq ext = 4405;
    }
}

message LotteryInSmeltPartMasterRs{
    repeated Atom2 props = 1;   //剩余氪金数量
    required int32 point = 2;   //抽奖积分数量
    repeated Award award = 3;   //抽奖结果
    extend Base{
        optional LotteryInSmeltPartMasterRs ext = 4406;
    }
}

//淬炼大师排行榜
message GetActSmeltPartMasterRankRq{
    extend Base{
        optional GetActSmeltPartMasterRankRq ext = 4407;
    }
}

message GetActSmeltPartMasterRankRs{
    optional bool open = 1;                     //true可领奖
    optional int32 score = 2;                   //我的积分
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜
    repeated RankAward rankAward = 5;           //排名奖励信息
    extend Base{
        optional GetActSmeltPartMasterRankRs ext = 4408;
    }
}


//老玩家回归协议
message GetPlayerBackMessageRq {
    extend Base
    {
        optional GetPlayerBackMessageRq ext = 4501;
    }
}

message GetPlayerBackMessageRs {
    required int32 backTime = 1;        //回归等级
    repeated int32 status = 2;          //每天的礼物内容
    required int32 today = 3;           //今天第几天
    required int32 endTime = 4;         //距离下个阶段的结束时间
    extend Base
    {
        optional GetPlayerBackMessageRs ext = 4502;
    }
}

message GetPlayerBackAwardsRq {
    optional int32 awardTypeId = 1;
    extend Base
    {
        optional GetPlayerBackAwardsRq ext = 4503;
    }
}

message GetPlayerBackAwardsRs {
    repeated Award award = 1;   //礼物内容
    repeated int32 status = 2;  //礼物状态
    optional int32 gold = 3;    // 如果消耗的是金币，当前金币数量
    extend Base
    {
        optional GetPlayerBackAwardsRs ext = 4504;
    }
}

message GetPlayerBackBuffRq {
    extend Base
    {
        optional GetPlayerBackBuffRq ext = 4505;
    }
}

message GetPlayerBackBuffRs {
    repeated int32 buff = 1;            //返回buff
    repeated int32 backTime = 2;        //回归等级
    repeated int64 buffTime = 3;        //buff剩余时间
    extend Base
    {
        optional GetPlayerBackBuffRs ext = 4506;
    }
}

//能量灌注：3日累计充值奖励
//查看充值详情
message GetActCumulativePayInfoRq {
    extend Base
    {
        optional GetActCumulativePayInfoRq ext = 4507;
    }
}

message GetActCumulativePayInfoRs {
    repeated ActCumulativePayInfo pay = 1;     //充值详情
    required int32 status = 2;                 //领取奖励状态 1.可领     -1.已领      0.条件不满足不可领
    required int32 keyId = 3;
    required int32 awardId = 4;                //s_activity_plan表里activityId对应的awardId
    required int32 day = 5;                    //活动第几天
    extend Base
    {
        optional GetActCumulativePayInfoRs ext = 4508;
    }
}

//领取奖励
message GetActCumulativePayAwardRq {
    required int32 day = 1;                 //领取第几天奖励 1,2,3第几天奖励 0 大奖
    extend Base
    {
        optional GetActCumulativePayAwardRq ext = 4509;
    }
}

message GetActCumulativePayAwardRs {
    repeated Award award = 1;
    extend Base
    {
        optional GetActCumulativePayAwardRs ext = 4510;
    }
}

//补充
message ActCumulativeRePayRq {
    required int32 day = 1;              //补充第几天 1,2
    extend Base
    {
        optional ActCumulativeRePayRq ext = 4511;
    }
}

message ActCumulativeRePayRs {
    extend Base
    {
        optional ActCumulativeRePayRs ext = 4512;
    }
}

//荣誉勋章活动[4521-4540]
//获取荣誉勋章活动信息
message GetActMedalofhonorInfoRq{
    extend Base
    {
        optional GetActMedalofhonorInfoRq ext = 4521;
    }
}

message GetActMedalofhonorInfoRs{
    required int32 count = 1;           //当前探索次数
    required int32 medalHonor = 2;      //荣誉勋章数量
    repeated int32 targetId = 3;        //屏幕中间目标ID, 列表下表标识位置[0,1,2]
    extend Base
    {
        optional GetActMedalofhonorInfoRs ext = 4522;
    }
}

//打开活动宝箱(大吉大利,晚上吃鸡)
message OpenActMedalofhonorRq{
    required int32 pos = 1;             //点击目标的位置
    extend Base
    {
        optional OpenActMedalofhonorRq ext = 4523;
    }
}

message OpenActMedalofhonorRs{
    optional int32 chickenId = 1;       //开宝箱位置(值为0或者不存在都标识没有鸡)
    optional int32 medalHonor = 2;      //当前荣誉勋章数量
    repeated Award award = 3;           //开宝箱奖励
    extend Base
    {
        optional OpenActMedalofhonorRs ext = 4524;
    }
}

//搜索宝箱
message SearchActMedalofhonorTargetsRq{
    optional int32 forceResult = 1;         //0: 不指定搜索结果, 1: 指定搜索结果(必定3橙)
    optional int32 searchType = 2;          //0: 单次搜索, 1: 使用一键十倍
    extend Base
    {
        optional SearchActMedalofhonorTargetsRq ext = 4525;
    }
}

message SearchActMedalofhonorTargetsRs{
    repeated int32 targetId = 1;            //搜索结果
    optional int32 gold = 2;                //身上剩余金币
    extend Base
    {
        optional SearchActMedalofhonorTargetsRs ext = 4526;
    }
}

//购买荣誉勋章活动道具
message BuyActMedalofhonorItemRq{
    required int32 id = 1;                  //购买的商品ID
    required int32 buyCount = 2;            //购买个数
    extend Base
    {
        optional BuyActMedalofhonorItemRq ext = 4527;
    }
}

message BuyActMedalofhonorItemRs{
    optional int32 medalHonor = 1;          //剩余荣誉勋章数量
    optional Award award = 2;               //兑换到的奖励
    extend Base
    {
        optional BuyActMedalofhonorItemRs ext = 4528;
    }
}

//领取荣誉勋章活动排名奖励
message GetActMedalofhonorRankAwardRq{
    extend Base
    {
        optional GetActMedalofhonorRankAwardRq ext = 4529;
    }
}

message GetActMedalofhonorRankAwardRs{
    repeated Award award = 1;           //排名奖励
    extend Base
    {
        optional GetActMedalofhonorRankAwardRs ext = 4530;
    }
}

//显示排名信息
message GetActMedalofhonorRankInfoRq{
    extend Base
    {
      optional GetActMedalofhonorRankInfoRq ext = 4531;
    }
}

message GetActMedalofhonorRankInfoRs{
    optional int32 score = 1;                   //我的积分
    repeated ActPlayerRank actPlayerRank = 2;   //排行榜
    optional bool open = 3;                     //true可领奖励 1 不可领奖
    repeated RankAward rankAward = 4;           //排名奖励信息
    optional int32 status = 5;                  //0未领 1已领
    extend Base
    {
      optional GetActMedalofhonorRankInfoRs ext = 4532;
    }
}

//大富翁活动[4541 - 4570]
//获取大富翁活动信息
message GetMonopolyInfoRq{
    extend Base
    {
      optional GetMonopolyInfoRq ext = 4541;
    }
}

message GetMonopolyInfoRs{
    repeated int32 event = 1;                   //格子里面事件列表,下标为格子ID[0,22)
    optional int32 pos = 2;                     //当前所在格子位置
    optional int32 energy = 3;                  //剩余精力
    optional int32 finishRound = 4;             //已经完成的轮数
    repeated int32 drawRound = 5;               //已经领取的宝箱列表
    optional int32 drawFreeEnergySec = 6;       //最后领取免费精力事件:单位：秒
    extend Base
    {
      optional GetMonopolyInfoRs ext = 4542;
    }
}

//投骰子
message ThrowDiceRq{
    required int32 point = 1;                   //0-普通骰子, 1-6 使用意念骰子
    extend Base
    {
      optional ThrowDiceRq ext = 4543;
    }
}

message ThrowDiceRs{
    optional int32 pos  = 1;                    //骰子新位置>=22表示已经完成本轮游戏
    optional int32 energy = 2;                  //剩余精力
    optional int32 finishRound = 3;             //已完成次数
    optional Atom2 atom2 = 6;                   //剩余意念骰子信息
    repeated Award award = 4;                   //如果是宝箱,则直接获得宝箱奖励
    optional int32 buyId = 5;                   //如果新位置是购买商品的事件，则buyId 表示可购买商品标识信息
    extend Base
    {
      optional ThrowDiceRs ext = 4544;
    }
}

//购买或者使用精力
message BuyOrUseEnergyRq{
    required bool isBuy = 1;                    //true-购买精力, false 使用精力道具
    extend Base
    {
      optional BuyOrUseEnergyRq ext = 4545;
    }
}

message BuyOrUseEnergyRs{
    optional int32 energy = 1;                  //剩余精力
    optional int32 gold = 2;                    //剩余金币
    optional Atom2 atom2 = 3;                   //剩余精力信息
    extend Base
    {
      optional BuyOrUseEnergyRs ext = 4546;
    }
}

//购买打折商品
message BuyDiscountGoodsRq{
    required int32 buyId = 1;                   //购买ID
    extend Base
    {
      optional BuyDiscountGoodsRq ext = 4547;
    }
}

message BuyDiscountGoodsRs{
    optional int32 gold = 1;                    //剩余金币
    repeated Award award = 2;                   //获得奖励
    extend Base
    {
      optional BuyDiscountGoodsRs ext = 4548;
    }
}

//选择对话事件，对话选项
message SelectDialogRq{
    required int32 dlgId = 1;                   //对话ID
    extend Base
    {
      optional SelectDialogRq ext = 4549;
    }
}

message SelectDialogRs{
    optional int32 energy = 1;                  //剩余精力
    repeated Award award = 2;                   //获得奖励
    extend Base
    {
      optional SelectDialogRs ext = 4550;
    }
}

//领取已完成的游戏次数奖励
message DrawFinishCountAwardRq{
    optional int32 cnt  = 1;                    //完成的次数
    extend Base
    {
      optional DrawFinishCountAwardRq ext = 4551;
    }
}

message DrawFinishCountAwardRs{
    repeated Award award = 1;                   //奖励内容
    extend Base
    {
      optional DrawFinishCountAwardRs ext = 4552;
    }
}

//领取免费精力
message DrawFreeEnergyRq{
    extend Base
    {
      optional DrawFreeEnergyRq ext = 4553;
    }
}

message DrawFreeEnergyRs{
    optional int32 drawFreeEnergySec = 1;       //最后领取免费精力事件:单位：秒
    optional int32 energy = 2;                  //当前剩余精力
    extend Base
    {
      optional DrawFreeEnergyRs ext = 4554;
    }
}

//秘密武器洗练次数活动[4571-4580]
message GetActScrtWpnStdCntRq{
    extend Base
    {
      optional GetActScrtWpnStdCntRq ext = 4571;
    }
}

message GetActScrtWpnStdCntRs{
    optional int32 cnt = 1;             //本次活动洗练次数
    repeated ActivityCond cond = 2;
    extend Base
    {
      optional GetActScrtWpnStdCntRs ext = 4572;
    }
}

//闪击行动活动[4581-4590]
message GetActStrokeRq{
    extend Base
    {
      optional GetActStrokeRq ext = 4581;
    }
}

message GetActStrokeRs{
    required int32 activityId = 1;          //活动唯一ID, 0-或者null表示当前并无此活动
    optional int32 beginTime = 2;           //活动开启时间
    optional int32 endTime = 3;             //活动结束时间
    optional int32 serverTime = 4;          //服务器当前时间
    repeated int32 id = 5;                  //已经领取过的奖励
    extend Base
    {
      optional GetActStrokeRs ext = 4582;
    }
}

//领取闪击行动奖励
message DrawActStrokeAwardRq{
    required int32 id = 1;//时间点
    extend Base
    {
      optional DrawActStrokeAwardRq ext = 4583;
    }
}

message DrawActStrokeAwardRs{
    optional int32 id = 1;                  //领取的奖励ID
    repeated Award award = 2;               //领取到的奖励
    extend Base
    {
      optional DrawActStrokeAwardRs ext = 4584;
    }
}




//大咖带队活动[4591-4600]
message GetActVipCountInfoRq{
    extend Base
    {
      optional GetActVipCountInfoRq ext = 4591;
    }
}

message GetActVipCountInfoRs{
    repeated TwoInt twoInt = 1;//key-vip等级,V-达成数量
    repeated ActivityCond cond = 2;
    extend Base
    {
      optional GetActVipCountInfoRs ext = 4592;
    }
}


//探宝活动[4601-4610]
message GetActLotteryExploreRq{
    extend Base
    {
      optional GetActLotteryExploreRq ext = 4601;
    }
}

message GetActLotteryExploreRs{
    optional int32 score = 1;               //本次活动积分
    repeated ActivityCond cond = 2;
    extend Base
    {
      optional GetActLotteryExploreRs ext = 4602;
    }
}

//抢红包活动[4611-4630]
//红包活动信息
message GetActRedBagInfoRq{
    extend Base
    {
      optional GetActRedBagInfoRq ext = 4611;
    }
}

message GetActRedBagInfoRs{
    optional int32 activityId = 1;                      //活动ID
    optional int32 money = 2;                           //当前全服累计充值金额
    repeated int32 stage = 3;                           //已经领取过的奖励
    repeated Atom2 prop = 4;                            //玩家身上红包道具信息
	repeated RedBagChat worldChat = 5;					//世界聊天频道中的红包信息
	repeated RedBagChat partyChat = 6;					//军团聊天频道中的红包信息
    extend Base
    {
      optional GetActRedBagInfoRs ext = 4612;
    }
}

//领取红包活动阶段奖励
message DrawActRedBagStageAwardRq{
    required int32 stage = 1;                           //领取的红包充值阶段
    extend Base
    {
      optional DrawActRedBagStageAwardRq ext = 4613;
    }
}

message DrawActRedBagStageAwardRs{
    repeated Award award = 1;                           //领取到的阶段奖励
    extend Base
    {
      optional DrawActRedBagStageAwardRs ext = 4614;
    }
}


//获取红包列表
message GetActRedBagListRq{
    extend Base
    {
      optional GetActRedBagListRq ext = 4615;
    }
}

message GetActRedBagListRs{
    repeated RedBagSummary redBag = 1;                  //红包列表
    extend Base
    {
      optional GetActRedBagListRs ext = 4616;
    }
}

//抢红包
message GrabRedBagRq{
    required int32 uid = 1;                              //红包唯一ID
    extend Base
    {
      optional GrabRedBagRq ext = 4617;
    }
}

message GrabRedBagRs{
    optional int32 grabMoney = 1;                       // >0抢红包金额, 小于等于零: 抢红包失败
    optional ActRedBag redBag = 2;                      //如果未抢到红包则显示红包详细信息
    extend Base
    {
      optional GrabRedBagRs ext = 4618;
    }
}

//发红包
message SendActRedBagRq{
    required int32 propId = 1;                          //红包道具ID
    required int32 grabCnt = 2;                         //最多允许抢多少次
    required bool isPartyRedBag = 3;                    //true-发放的红包只有本军团才能抢
    extend Base
    {
      optional SendActRedBagRq ext = 4621;
    }
}

message SendActRedBagRs{
    optional Atom2 atom2 = 1;                           //剩余红包道具信息
    optional RedBagSummary summary = 2;                 //红包摘要信息
    extend Base
    {
      optional SendActRedBagRs ext = 4622;
    }
}








//与Lord 相关的操作[5001 - 5600]

//获取玩家军衔军功相关信息 [5001 - 5100]
message GetMilitaryRankRq{
    extend Base{
        optional GetMilitaryRankRq ext = 5001;
    }
}

message GetMilitaryRankRs{
    required int32 militaryRank = 1;        //军衔
    required int32 sortRank = 2;            //军衔排名
    required int64 militaryExploit = 3;     //军功
    required int32 mpltGotToday = 4;        //今日已获取的军功
    extend Base{
        optional GetMilitaryRankRs ext = 5002;
    }
}

//升级指挥官军衔
message UpMilitaryRankRq{
    extend Base{
        optional UpMilitaryRankRq ext = 5003;
    }
}

message UpMilitaryRankRs{
    required int32 militaryRank = 1;        //升级后的军衔(注意更新属性和战力)
    required int64 militaryExploit = 2;     //剩余军功
    required int32 curRank = 3;             //当前军衔排名
    extend Base{
        optional UpMilitaryRankRs ext = 5004;
    }
}

//参谋部功能[5101-5150]

//获取文官进驻信息
message GetHeroPutInfoRq{
    extend Base{
        optional GetHeroPutInfoRq ext = 5101;
    }
}

message GetHeroPutInfoRs{
    repeated HeroPut heroPut = 1;
    extend Base{
        optional GetHeroPutInfoRs ext = 5102;
    }
}

//设置文官进驻
message SetHeroPutRq{
    required int32 partId = 1;                        //分类id
    required int32 id = 2;                            //第几个格子
    required int32 heroId = 3;
    extend Base{
        optional SetHeroPutRq ext = 5103;
    }
}

message SetHeroPutRs{
    repeated HeroPut heroPut = 1;
    extend Base{
        optional SetHeroPutRs ext = 5104;
    }
}

//上传玩家收藏的坐标，将坐标收藏由客户端存储更新到服务器存储
message UpLoadStoreRq{
    repeated Store store = 1;
    extend Base{
        optional UpLoadStoreRq ext = 5105;
    }
}

message UpLoadStoreRs{
    extend Base{
        optional UpLoadStoreRs ext = 5106;
    }
}



// --------------@文件分割标志@---------------
//秘密武器功能[5151-5200]

//获取秘密武器信息
message GetSecretWeaponInfoRq{
    extend Base{
        optional GetSecretWeaponInfoRq ext = 5151;
    }
}

message GetSecretWeaponInfoRs{
    repeated SecretWeapon weapon = 1;       //秘密武器列表
    extend Base{
        optional GetSecretWeaponInfoRs ext = 5152;
    }
}

//解锁秘密武器技能栏
message UnlockWeaponBarRq{
    required int32 weaponId = 1;            //秘密武器ID
    extend Base{
        optional UnlockWeaponBarRq ext = 5153;
    }
}

message UnlockWeaponBarRs{
    optional SecretWeapon weapon    = 1;        //注意解锁最后一条技能将会激活新的武器，此时需要重新请求5151协议
    optional int32 gold             = 2;        //剩余金币
    extend Base{
        optional UnlockWeaponBarRs ext = 5154;
    }
}

//锁定秘密武器技能栏
message LockedWeaponBarRq{
    required int32 weaponId = 1;            //秘密武器ID
    required int32 barIdx   = 2;            //锁定的技能蓝位置, 下标从0开始
    required bool lock      = 3;            //true-锁定,false-解除锁定
    extend Base{
        optional LockedWeaponBarRq ext = 5155;
    }
}

message LockedWeaponBarRs{
    optional SecretWeapon weapon = 1;
    extend Base{
        optional LockedWeaponBarRs ext = 5156;
    }
}

//洗练秘密武器技能
message StudyWeaponSkillRq{
    required int32 weaponId = 1;            //武器ID
    extend Base{
        optional StudyWeaponSkillRq ext = 5157;
    }
}

message StudyWeaponSkillRs{
    optional Atom2 atom2 = 1;               //洗练道具剩余数量
    optional int32 gold = 2;                //剩余金币
    optional SecretWeapon weapon = 3;       //秘密武器信息
    extend Base{
        optional StudyWeaponSkillRs ext = 5158;
    }
}

//攻击特效[5201-5250]
//获取攻击特效列表
message GetAttackEffectRq{
    extend Base{
        optional GetAttackEffectRq ext = 5201;
    }
}

message GetAttackEffectRs{
    repeated AttackEffectPb effect = 1;     //攻击特效信息
    extend Base{
        optional GetAttackEffectRs ext = 5202;
    }
}

//使用攻击特效
message UseAttackEffectRq{
    required int32 id = 1;                  //攻击特效唯一ID
    extend Base{
        optional UseAttackEffectRq ext = 5203;
    }
}

message UseAttackEffectRs{
    extend Base{
        optional UseAttackEffectRs ext = 5204;
    }
}




//与广告SDK 相关的操作[5601 - 5800] 参考 Advertisement.proto






message GetCrossPartyStateRq{
    extend Base
    {
        optional GetCrossPartyStateRq ext = 3201;
    }
}

message GetCrossPartyStateRs{
    required string beginTime = 1;
    required int32 state = 2; // 0未开始   非0表示第几天
    extend Base
    {
        optional GetCrossPartyStateRs ext = 3202;
    }
}

message SynCrossPartyStateRq{
    required int32 state = 1;   // 1.跨服军团战报名开启 2.跨服战结束
     extend Base
    {
        optional SynCrossPartyStateRq ext = 1035;
    }
}

message GetCrossPartyServerListRq{
    extend Base
    {
        optional GetCrossPartyServerListRq ext = 3205;
    }
}

message GetCrossPartyServerListRs{
    repeated GameServerInfo gameServerInfo = 1;
    extend Base
    {
        optional GetCrossPartyServerListRs ext = 3206;
    }
}

message CrossPartyRegRq{
    extend Base
    {
        optional CrossPartyRegRq ext = 3207;
    }
}

message CrossPartyRegRs {
    extend Base
    {
        optional CrossPartyRegRs ext = 3208;
    }
}

message GetCPMyRegInfoRq{
    extend Base
    {
        optional GetCPMyRegInfoRq ext = 3209;
    }
}

message GetCPMyRegInfoRs{
    required bool isReg = 1;// 是否报名
    extend Base
    {
        optional GetCPMyRegInfoRs ext = 3210;
    }
}
message GetCrossPartyMemberRq{
    extend Base
    {
        optional GetCrossPartyMemberRq ext = 3211;
    }
}

message GetCrossPartyMemberRs{
     optional int32 partyNums = 1;  // 已报名军团数
     optional int32 myPartyMemberNum = 2;   // 我的军团报名人数
     repeated CPMemberReg cpMemberReg = 3;
     optional int32 group = 4;  //0暂无 1A  2B  3C 4D
    extend Base
    {
        optional GetCrossPartyMemberRs ext = 3212;
    }
}

message GetCrossPartyRq{
    required int32 group = 1;   // 1A 2B 3C 4D 5E
    extend Base
    {
        optional GetCrossPartyRq ext = 3213;
    }
}

message GetCrossPartyRs{
    required int32 group = 1;   // 1A 2B 3C 4D 5E
    repeated CPPartyInfo cpPartyInfo= 2;  // 跨服军团信息
    optional int32 totalRegPartyNum = 3; // 总共报名军团数
    optional int32 groupRegPartyNum = 4; // 当前组报名军团数
    extend Base
    {
        optional GetCrossPartyRs ext = 3214;
    }
}

message GetCPSituationRq{
    required int32 group = 1;  // 1A 2B 3C 4D 5E
    required int32 page = 2;
    extend Base
    {
        optional GetCPSituationRq ext = 3215;
    }
}

message GetCPSituationRs{
    required int32 group = 1;  // 1A 2B 3C 4D 5E
    required int32 page = 2;
    repeated CPRecord cpRecord = 3;
    extend Base
    {
        optional GetCPSituationRs ext = 3216;
    }
}

message GetCPOurServerSituationRq{
    required int32 type = 1;    // 1本服战况 2军团战况 3个人战况
    required int32 page = 2;
    extend Base
    {
        optional GetCPOurServerSituationRq ext = 3217;
    }
}

message GetCPOurServerSituationRs{
    required int32 type = 1;    // 1本服战况 2军团战况 3个人战况
    required int32 page = 2;
    repeated CPRecord cpRecord = 3;
    extend Base
    {
        optional GetCPOurServerSituationRs ext = 3218;
    }
}

message GetCPReportRq{
    required int32 reportKey = 1;
     extend Base
    {
        optional GetCPReportRq ext = 3221;
    }
}

message GetCPReportRs{
    required CPRptAtk cpRptAtk = 1;
    extend Base
    {
        optional GetCPReportRs ext = 3222;
    }
}

message GetCPRankRq{
    required int32 type = 1;    // 1个人排行  2连胜排行   3军团排行
    required int32 page = 2;
    extend Base
    {
        optional GetCPRankRq ext = 3223;
    }
}

message GetCPRankRs{
    required int32 type = 1;    // 1个人排行  2连胜排行   3军团排行
    required int32 page = 2;
    repeated CPRank cpRank = 3; // 排行信息
    optional CPRank mySelf = 4; // 我的排行
    optional int32 myJiFen = 5;// 我的积分
    extend Base
    {
        optional GetCPRankRs ext = 3224;
    }
}

message ReceiveCPRewardRq{     // 1个人排行  2连胜排行
    required int32 type = 1;
    extend Base
    {
        optional ReceiveCPRewardRq ext = 3225;
    }
}

message ReceiveCPRewardRs{
    required int32 type = 1;
    repeated Award award = 2;
    extend Base
    {
        optional ReceiveCPRewardRs ext = 3226;
    }
}

message GetCPShopRq{
    extend Base
    {
        optional GetCPShopRq ext = 3227;
    }
}

message GetCPShopRs{
    required int32 jifen = 1;          // 玩家拥有的积分
    repeated CrossShopBuy buy = 2;     // 玩家在跨服商店的购买信息
    extend Base
    {
        optional GetCPShopRs ext = 3228;
    }
}

message ExchangeCPShopRq{
    required int32 shopId = 1;              // 要兑换的商品id
    required int32 count = 2;               // 要兑换的商品数量
    extend Base
    {
        optional ExchangeCPShopRq ext = 3229;
    }
}

message ExchangeCPShopRs{
    required int32 jifen = 1;          // 兑换后玩家剩余的积分
    required int32 shopId = 2;              // 兑换的商品id
    optional int32 count = 3;               // 玩家兑换数量
    optional int32 restNum = 4;             // 珍品商品当前剩余数量
    extend Base
    {
        optional ExchangeCPShopRs ext = 3230;
    }
}

message GetCPFormRq{
    extend Base
    {
        optional GetCPFormRq ext = 3233;
    }
}

message GetCPFormRs{
    optional Form form = 1;
    optional int64 fight = 2;
    extend Base
    {
        optional GetCPFormRs ext = 3234;
    }
}

message SetCPFormRq{
    required Form form = 1;
    required int64 fight = 2;
    extend Base
    {
        optional SetCPFormRq ext = 3235;
    }
}

message SetCPFormRs{
    required Form form = 1;
    required int64 fight = 2;
    extend Base
    {
        optional SetCPFormRs ext = 3236;
    }
}

message SynCPSituationRq{
    required int32 gruop = 1;     // 1A 2B 3C 4D 5E(决赛)
    required CPRecord cpRecord = 2;
    extend Base
    {
        optional SynCPSituationRq ext = 1037;
    }
}

message GetCPTrendRq{
    extend Base
    {
        optional GetCPTrendRq ext = 3237;
    }
}

message GetCPTrendRs{
    required int32 jifen = 1;
    repeated CrossTrend crossTrend = 2;
    extend Base
    {
        optional GetCPTrendRs ext = 3238;
    }
}


message GetCrossDrillStateRq { // 获取跨服军演状态
    extend Base
    {
        optional GetCrossDrillStateRq ext = 3301;
    }
}

message GetCrossDrillStateRs {
    optional string durationTime = 1;       // 比赛时间
    optional int32 state = 2;               // 当前状态，0 未开始或已结束，1 报名，2 小组赛，3 淘汰赛，4 领奖兑换时间
    optional int32 reg = 3;                 // 玩家是否报名，0 未报名， 1 已报名
    optional CDMyTeamData teamData = 4;     // 我的分组信息
    extend Base
    {
        optional GetCrossDrillStateRs ext = 3302;
    }
}

message SynCrossDrillStateRq { // 通知跨服军演状态
    required int32 state = 1;
    extend Base
    {
        optional SynCrossDrillStateRq ext = 3303;
    }
}

message GetCDServerListRq { // 获取跨服军演服务器列表
    extend Base
    {
        optional GetCDServerListRq ext = 3305;
    }
}

message GetCDServerListRs {
    repeated GameServerInfo gameServerInfo = 1;
    extend Base
    {
        optional GetCDServerListRs ext = 3306;
    }
}

message CrossDrillRegRq { // 跨服军演战报名
    extend Base
    {
        optional CrossDrillRegRq ext = 3307;
    }
}

message CrossDrillRegRs {
    extend Base
    {
        optional CrossDrillRegRs ext = 3308;
    }
}

message GetCrossDrillBetRq { // 获取跨服军演下注信息
    extend Base
    {
        optional GetCrossDrillBetRq ext = 3309;
    }
}

message GetCrossDrillBetRs {
    repeated CDBattleBet bet = 1;
    extend Base
    {
        optional GetCrossDrillBetRs ext = 3310;
    }
}

message GetCDMoraleRq { // 获取跨服军演本服士气数据
    extend Base
    {
        optional GetCDMoraleRq ext = 3311;
    }
}

message GetCDMoraleRs {
    repeated CDMorale morale = 1;
    extend Base
    {
        optional GetCDMoraleRs ext = 3312;
    }
}

message ImproveCDMoraleRq { // 提高跨服军演士气
    required int32 buffId = 1;              // 要提升的buffId
    extend Base
    {
        optional ImproveCDMoraleRq ext = 3313;
    }
}

message ImproveCDMoraleRs {
    optional CDMorale morale = 1;   // 鼓舞士气后该buff当前的情况
    optional int32 gold = 2;        // 如果消耗的是金币，当前金币数量
    optional int64 resource = 3;    // 如果消耗的是资源，当前该资源数量
    extend Base
    {
        optional ImproveCDMoraleRs ext = 3314;
    }
}

message GetCDFinalRankRq { // 获取跨服军演总排行榜
    extend Base
    {
        optional GetCDFinalRankRq ext = 3315;
    }
}

message GetCDFinalRankRs {
    optional int32 state = 1;               // -1 未结束，0 不能领（无领取资格），1 已领取， 2 未领取
    repeated CDFinalRank rank = 2;          // 排行榜数据
    extend Base
    {
        optional GetCDFinalRankRs ext = 3316;
    }
}

message ReceiveCDFinalRankRq { // 领取跨服军演总排行榜奖励
    extend Base
    {
        optional ReceiveCDFinalRankRq ext = 3317;
    }
}

message ReceiveCDFinalRankRs {
    repeated Award award = 1;
    extend Base
    {
        optional ReceiveCDFinalRankRs ext = 3318;
    }
}

message GetCDDistributionRq { // 获取跨服军演小组赛各服务器分布情况
    extend Base
    {
        optional GetCDDistributionRq ext = 3319;
    }
}

message GetCDDistributionRs {
    repeated CDTeamServerDistribution distribute = 1;   // 小组匹配信息
    extend Base
    {
        optional GetCDDistributionRs ext = 3320;
    }
}

message GetCDTeamScoreRq { // 获取跨服军演的小组积分信息
    extend Base
    {
        optional GetCDTeamScoreRq ext = 3321;
    }
}

message GetCDTeamScoreRs {
    repeated CDTeamScore teamScore = 1; // 小组积分信息
    extend Base
    {
        optional GetCDTeamScoreRs ext = 3322;
    }
}

message GetCDHeroRankRq { // 获取跨服军演小组赛英雄榜信息
    extend Base
    {
        optional GetCDHeroRankRq ext = 3323;
    }
}

message GetCDHeroRankRs {
    optional int32 rank = 1;                // 玩家排名，0为未上榜
    optional int32 state = 2;               // -1 未结束，0 无领取资格，1 已领取，2 未领取
    repeated CDHeroRank heroRank = 3;       // 小组赛英雄榜信息
    extend Base
    {
        optional GetCDHeroRankRs ext = 3324;
    }
}

message ReceiveCDHeroRankRq { // 领取跨服军演小组赛英雄榜奖励
    extend Base
    {
        optional ReceiveCDHeroRankRq ext = 3325;
    }
}

message ReceiveCDHeroRankRs {
    repeated Award award = 1;
    extend Base
    {
        optional ReceiveCDHeroRankRs ext = 3326;
    }
}

message GetCDTeamDataRq { // 获取跨服军演某个小组的战场数据
    required int32 teamId = 1;              // 小组id，组别
    extend Base
    {
        optional GetCDTeamDataRq ext = 3327;
    }
}

message GetCDTeamDataRs {
    repeated CDTeamBattleData battleData = 1;   // 战场数据
    extend Base
    {
        optional GetCDTeamDataRs ext = 3328;
    }
}

message GetCDBattlefieldRq { // 获取跨服军演某个战场的战场信息
    required int32 fieldId = 1;             // 战场id，在整个跨服军演活动中，每个战场唯一一个id
    extend Base
    {
        optional GetCDBattlefieldRq ext = 3329;
    }
}

message GetCDBattlefieldRs {
    optional int32 fieldId = 1;                 // 战场id，在整个跨服军演活动中，每个战场唯一一个id
    optional int32 fieldStatus = 2;             // 战场状态，0 未开启，1 报名，2 备战，3 上路战斗，4 中路战斗，5 下路战斗中，6 已结束
    optional string redServerName = 3;          // 红方服务器名称，对应淘汰战中的c1
    optional string blueServerName = 4;         // 蓝方服务器名称
    optional int32 ratio = 5;                   // 红方士气/（红方+蓝方士气）的百分比
    repeated CDBattleStronghold stronghold = 6; // 战场各据点的信息
    extend Base
    {
        optional GetCDBattlefieldRs ext = 3330;
    }
}

message GetCDRecordRq { // 获取跨服军演某一路（据点）的战报
    required int32 strongholdId = 1;        // 据点id，唯一id
    required int32 type = 2;                // 1 据点战报，2 个人战报
    required int32 page = 3;                // 获取第几页的战报，每一页显示20个，第一页page=0，第二页page=1
    extend Base
    {
        optional GetCDRecordRq ext = 3331;
    }
}

message GetCDRecordRs {
    optional int32 strongholdId = 1;        // 据点id，唯一id
    optional int32 type = 2;                // 1 据点战报，2 个人战报
    optional int32 page = 3;                // 获取第几页的战报，每一页显示20个，第一页page=0，第二页page=1
    repeated CDRecord record = 4;           // 具体战报
    extend Base
    {
        optional GetCDRecordRs ext = 3332;
    }
}

message GetCDReportRq { // 获取跨服军演的战报详情
    required int32 reportKey = 1;           // 战报key
    extend Base
    {
        optional GetCDReportRq ext = 3333;
    }
}

message GetCDReportRs {
    optional RptAtkFortress rptAtkFortress = 1;
    extend Base
    {
        optional GetCDReportRs ext = 3334;
    }
}

message GetCDStrongholdRankRq { // 获取跨服军演某个战场某一路战斗的排行榜
    required int32 strongholdId = 1;        // 据点id，唯一id
    extend Base
    {
        optional GetCDStrongholdRankRq ext = 3335;
    }
}

message GetCDStrongholdRankRs {
    required int32 strongholdId = 1;        // 据点id，唯一id
    optional int32 myRank = 2;              // 玩家排行，0为未上榜
    optional int32 winNum = 3;              // 玩家胜利次数
    optional int32 lostNum = 4;             // 玩家失败次数
    repeated CDStrongholdRank rank = 5;     // 排行信息
    extend Base
    {
        optional GetCDStrongholdRankRs ext = 3336;
    }
}

message GetCDTankRq { // 获取跨服军演的演习军力
    extend Base
    {
        optional GetCDTankRq ext = 3337;
    }
}

message GetCDTankRs {
    repeated Tank tank = 1;                 // 玩家的跨服军演坦克信息
    extend Base
    {
        optional GetCDTankRs ext = 3338;
    }
}

message ExchangeCDTankRq { // 兑换跨服军演的坦克
    required int32 tankId = 1;              // 要兑换的基地坦克id
    required int32 count = 2;               // 要兑换的基地坦克数量
    extend Base
    {
        optional ExchangeCDTankRq ext = 3339;
    }
}

message ExchangeCDTankRs {
    optional int32 tankId = 1;              // 兑换到的演习坦克id
    optional int32 count = 2;               // 演习军力中该坦克当前的坦克数量
    extend Base
    {
        optional ExchangeCDTankRs ext = 3340;
    }
}

message GetCDFormRq { // 获取跨服军演据点的阵型
    required int32 fieldId = 1;                 // 战场id，在整个跨服军演活动中，每个战场唯一一个id
    extend Base
    {
        optional GetCDFormRq ext = 3341;
    }
}

message GetCDFormRs {
    repeated CDStrongholdFormData form = 2;  // 所有布阵信息
    extend Base
    {
        optional GetCDFormRs ext = 3342;
    }
}

message SetCDFormRq { // 设置跨服军演的阵型
    required int32 strongholdId = 1;        // 据点id，唯一id
    required Form form = 2;                 // 阵型，阵型类型，1 本据点部队1，2 本据点部队2
    optional bool clean = 3;
    extend Base
    {
        optional SetCDFormRq ext = 3343;
    }
}

message SetCDFormRs {
    optional int32 strongholdId = 1;        // 据点id，唯一id
    optional Form form = 2;                 // 设置成功后的阵型
    optional int64 fight = 3;
    extend Base
    {
        optional SetCDFormRs ext = 3344;
    }
}

message GetCDKnockoutRq { // 获取跨服军演淘汰赛对战信息
    extend Base
    {
        optional GetCDKnockoutRq ext = 3345;
    }
}

message GetCDKnockoutRs {
    optional int32 stage = 1;               // 当前阶段，0 淘汰赛未开始，1 第一轮，2 第二轮，3 第三轮（半决赛），4 第四轮（决赛）， 5 战斗已全部结束
    repeated CDKnockoutBattle battle = 2;   // 各个战斗分组的匹配数据
    extend Base
    {
        optional GetCDKnockoutRs ext = 3346;
    }
}

message CrossDrillBetRq { // 跨服军演下注
    required int32 battleGroupId = 1;       // 淘汰赛组别，1-8组     9-12组    13-14组    15组
    required int32 target = 2;              // 下注目标，1 c1,2 c2
    required int32 betNum = 3;              // 下注金额
    extend Base
    {
        optional CrossDrillBetRq ext = 3347;
    }
}

message CrossDrillBetRs {
    optional int32 battleGroupId = 1;       // 淘汰赛组别，1-8组     9-12组    13-14组    15组
    optional int32 target = 2;              // 下注目标，1 c1,2 c2
    optional int32 betNum = 3;              // 下注后的总下注金额
    optional int32 betCount = 4;            // 下注后玩家总下注次数
    optional int32 gold = 5;                // 玩家当前金币数量
    extend Base
    {
        optional CrossDrillBetRs ext = 3348;
    }
}

message ReceiveCDBetRq { // 领取跨服军演下注奖励
    required int32 battleGroupId = 1;       // 淘汰赛组别，1-8组     9-12组    13-14组    15组
    extend Base
    {
        optional ReceiveCDBetRq ext = 3349;
    }
}

message ReceiveCDBetRs {
    optional int32 battleGroupId = 1;
    optional int32 jifen = 2;               // 玩家当前总积分
    extend Base
    {
        optional ReceiveCDBetRs ext = 3350;
    }
}

message GetCDShopRq { // 获取跨服军演商店数据
    extend Base
    {
        optional GetCDShopRq ext = 3351;
    }
}

message GetCDShopRs {
    optional int32 jifen = 1;               // 玩家当前总积分
    repeated CrossShopBuy buy = 2;          // 商店购买情况
    optional bool canBuyTreasure = 3;       // 玩家是否有资格购买珍品
    extend Base
    {
        optional GetCDShopRs ext = 3352;
    }
}

message ExchangeCDShopRq { // 兑换跨服军演商店的物品
    required int32 shopId = 1;              // 要兑换的商品id
    required int32 count = 2;               // 要兑换的商品数量
    extend Base
    {
        optional ExchangeCDShopRq ext = 3353;
    }
}

message ExchangeCDShopRs {
    optional int32 jifen = 1;               // 玩家当前总积分
    optional int32 shopId = 2;              // 兑换的商品id
    optional int32 count = 3;               // 玩家兑换数量
    optional int32 restNum = 4;             // 珍品商品当前剩余数量
    extend Base
    {
        optional ExchangeCDShopRs ext = 3354;
    }
}

message GetCDTeamBattleResultRq { // 获取跨服军演某队战斗结果数据
    required int32 teamId = 1;              // 小组id，组别
    extend Base
    {
        optional GetCDTeamBattleResultRq ext = 3355;
    }
}

message GetCDTeamBattleResultRs {
    repeated TwoInt battleData = 1; //  据点战斗结果，-1 未结束，1 红方胜，2 蓝方胜
    extend Base
    {
        optional GetCDTeamBattleResultRs ext = 3356;
    }
}

//司令部 皮肤管理[5811-5900]
//获取皮肤
message GetSkinsRq {
    required int32 type = 1;            //1 皮肤 2 铭牌 3 聊天气泡
    extend Base
    {
        optional GetSkinsRq ext = 5811;
    }
}

message GetSkinsRs {
    repeated Skin skin = 1;           //皮肤列表
    extend Base
    {
        optional GetSkinsRs ext = 5812;
    }
}

//购买皮肤
message BuySkinRq {
    required int32 skinId = 1;       //皮肤id
    required int32 count = 2;        //购买数量
    extend Base
    {
        optional BuySkinRq ext = 5813;
    }
}

message BuySkinRs {
    required int32 gold = 1;         //购买皮肤后剩余金币
    repeated Skin skin = 2;           //皮肤列表
    extend Base
    {
        optional BuySkinRs ext = 5814;
    }
}

//使用皮肤
message UseSkinRq {
    required int32 skinId = 1;       //使用的皮肤id
    required int32 count = 2;        //使用数量
    extend Base
    {
        optional UseSkinRq ext = 5815;
    }
}
message UseSkinRs {
    required int32 count = 1;         //使用皮肤后剩余数量
    optional Effect effect = 2;
    repeated Skin skin = 3;           //皮肤列表
    extend Base
    {
        optional UseSkinRs ext = 5816;
    }
}

//活动 [5901-7000]
//进入自选豪礼界面
message GetActChooseGiftRq{
    extend Base{
        optional GetActChooseGiftRq ext = 5901;
    }
}

message GetActChooseGiftRs{
    required int32 awardId = 1;                  //奖励id
    required int32 limit = 2;                    //领取最大次数
    required int32 left = 3;                     //剩余次数
    required int32 states = 4;                   //1 可领取  0 不可领取
    extend Base{
        optional GetActChooseGiftRs ext = 5902;
    }
}

//领取奖励
message DoActChooseGiftRq{
    required int32 id = 3;                        //领取id
    extend Base{
        optional DoActChooseGiftRq ext = 5903;
    }
}

message DoActChooseGiftRs{
    required int32 limit = 1;                    //领取最大次数
    required int32 left = 2;                     //剩余次数
    required int32 states = 3;                   //1 可领取  0 不可领取
    extend Base{
        optional DoActChooseGiftRs ext = 5904;
    }
}

//飞艇活动：兄弟同心
//获取兄弟同心活动界面信息
message GetActBrotherTaskRq {
    extend Base{
        optional GetActBrotherTaskRq ext = 5905;
    }
}

message GetActBrotherTaskRs {
    repeated int32 buffId = 1;
    repeated TwoInt task = 2;              //[id, state] state -1 未完成任务 0 完成任务未领取奖励 1 已领取奖励
    extend Base{
        optional GetActBrotherTaskRs ext = 5906;
    }
}

//升级buffer
message UpBrotherBuffRq {
    required int32 buffType = 1;               //升级的buff id
    extend Base{
        optional UpBrotherBuffRq ext = 5907;
    }
}

message UpBrotherBuffRs {
    repeated int32 buffId = 1;
    extend Base{
        optional UpBrotherBuffRs ext = 5908;
    }
}

//领取奖励
message GetBrotherAwardRq {
    required int32 id = 1;
    extend Base{
        optional GetBrotherAwardRq ext = 5909;
    }
}

message GetBrotherAwardRs {
    repeated TwoInt task = 1;              //[taskId, taskState] taskState -1 未完成任务 0 完成任务未领取奖励 1 已领取奖励
    extend Base{
        optional GetBrotherAwardRs ext = 5910;
    }
}


//超时空财团 刷新动作 (第一次进入商品列表也执行此动作)
message ShowQuinnRq {
    required int32 showType = 1;  //刷新类型 1贸易 2兑换
    required int32 isRefresh = 2;  //刷新类型 0 进入面板 1手动刷新
    extend Base{
        optional ShowQuinnRq ext = 5911;
    }
}

message ShowQuinnRs {
    repeated Quinn quinn = 1;              //商品对象
    required int32 getType = 2;              //当前刷新类型 1免费 2刷新券 3金币
    optional int32 getNumber = 3;              //当前金币刷新次数(刷新类型为免费时此字段为剩余免费次数)
    optional int32 getPrice = 4;              //当前刷新花费金币（getType 为3时需要此字段）
    optional int32 hasMoney = 5;              //剩余金币数量
    optional int32 hasRefreshes = 6;           //此数字为剩余刷新卷数量
    optional int32 hasStars = 7;              //剩余荣耀之星数量
    repeated Award award = 8;              //当前额外奖励（可以没有）
    extend Base{
        optional ShowQuinnRs ext = 5912;
    }
}

//超时空财团 购买动作
message BuyQuinnRq {
    required int32 type = 1; //购买第几格的商品 1-4  100代表兑换界面的招募
    extend Base{
        optional BuyQuinnRq ext = 5913;
    }
}

message BuyQuinnRs {
    repeated Award award = 1; //购买的商品对象
    repeated Award eggs = 2; //弹出贸易亲王额外奖励
    required int32 hasMoney = 3;              //剩余货币
    extend Base{
        optional BuyQuinnRs ext = 5914;
    }
}

//超时空财团 领取奖品动作
message GetQuinnAwardRq {
    extend Base{
        optional GetQuinnAwardRq ext = 5915;
    }
}

message GetQuinnAwardRs {
    repeated Award award = 1; //领取的奖品对象
    extend Base{
        optional GetQuinnAwardRs ext = 5916;
    }
}


//外挂处理 [8001, 8200]
//矿点扫描外挂验证码回答
message PlugInScoutMineValidCodeRq{
    required string validCode = 1;
    extend Base{
        optional PlugInScoutMineValidCodeRq ext = 8001;
    }
}

message PlugInScoutMineValidCodeRs{
    extend Base{
        optional PlugInScoutMineValidCodeRs ext = 8002;
    }
}


//作战实验室



//作战实验室获取物品信息 和 产出的资源信息
message GetFightLabItemInfoRq {
    extend Base{
        optional GetFightLabItemInfoRq ext = 6001;
    }
}

message GetFightLabItemInfoRs {
   repeated TwoInt item=1;//key itemId,value count
   repeated ThreeInt resource=2;//resourceId state 1生产 time已经生产的时间
    extend Base{
        optional GetFightLabItemInfoRs ext = 6002;
    }
}



//作战实验室获取人员信息 科技信息 建筑信息
message GetFightLabInfoRq {
    extend Base{
        optional GetFightLabInfoRq ext = 6003;
    }
}

message GetFightLabInfoRs {
    required int32 freeCount = 1;//人员空闲人数
    repeated ThreeInt presonCount=2;//type count maxcount 各种类型分配人数
    repeated TwoInt techInfo=3;//id level 科技id 科技等级
    repeated TwoInt archInfo=4;//id state 建筑id state 是否激活 1激活

    extend Base{
        optional GetFightLabInfoRs ext = 6004;
    }
}




//作战实验室设置人员信息
message SetFightLabPersonCountRq {
    repeated TwoInt presonCount=1;//type count 各种类型分配人数
    extend Base{
        optional SetFightLabPersonCountRq ext = 6005;
    }
}

message SetFightLabPersonCountRs {
    required int32 freeCount = 1;//空闲人数
    repeated ThreeInt presonCount = 2;//type count maxcount 各种类型分配人数
    repeated ThreeInt resource=3;//resourceId state 1生产 time已经生产的时间

    extend Base{
        optional SetFightLabPersonCountRs ext = 6006;
    }
}


//作战实验室 科技升级
message UpFightLabTechUpLevelRq {
    required int32 techId = 1;//科技id
    extend Base{
        optional UpFightLabTechUpLevelRq ext = 6007;
    }
}

message UpFightLabTechUpLevelRs {
    required int32 techId = 1;//科技id
    required int32 level = 2;//科技level
    required int32 freeCount = 3;//空闲人数
    repeated ThreeInt itemInfo=4;//type itemId count  物品同步

    extend Base{
        optional UpFightLabTechUpLevelRs ext = 6008;
    }
}


//作战实验室 建筑激活
message ActFightLabArchActRq {
    required int32 ActId = 1;//建筑id
    extend Base{
        optional ActFightLabArchActRq ext = 6009;
    }
}

message ActFightLabArchActRs {
    required TwoInt archInfo=1;//id state 建筑id state 是否激活 1激活
    optional TwoInt techInfo=2;//id level 科技id 科技等级
    repeated ThreeInt itemInfo=3;//type itemId count  物品同步
    repeated ThreeInt presonCount=4;//type count maxcount 各种类型分配人数
    repeated ThreeInt resource=5;//resourceId state 1生产 time已经生产的时间

    extend Base{
        optional ActFightLabArchActRs ext = 6010;
    }
}



//作战实验室 领取生产的资源
message GetFightLabResourceRq {
    required int32 resourceId = 1;//资源id
    extend Base{
        optional GetFightLabResourceRq ext = 6011;
    }
}

message GetFightLabResourceRs {
    repeated ThreeInt resource=1;//resourceId state 1生产 time已经生产的时间
    repeated ThreeInt itemInfo=2;//type itemId count  物品同步
    extend Base{
        optional GetFightLabResourceRs ext = 6012;
    }
}






//作战实验室 获取深度研究所信息
message GetFightLabGraduateInfoRq {
    extend Base{
        optional GetFightLabGraduateInfoRq ext = 6013;
    }
}

message GetFightLabGraduateInfoRs {
    repeated ThreeInt info  = 1;//type类型 skillId  level
    required int32 rewardId = 2; //已经领取的奖励
    extend Base{
        optional GetFightLabGraduateInfoRs ext = 6014;
    }
}

//作战实验室 深度研究所 升级
message UpFightLabGraduateUpRq {
    required int32 type = 1;//类型
    required int32 skillId = 2;//id
    extend Base{
        optional UpFightLabGraduateUpRq ext = 6015;
    }
}

message UpFightLabGraduateUpRs {
    required int32 type = 1;//类型
    required int32 skillId = 2;//id
    required int32 level = 3;//level
    repeated ThreeInt dearItemInfo  = 4;//消耗的物品信息
    extend Base{
        optional UpFightLabGraduateUpRs ext = 6016;
    }
}


//作战实验室 获取领取奖励信息
message GetFightLabGraduateRewardRq {
    extend Base{
        optional GetFightLabGraduateRewardRq ext = 6017;
    }
}

message GetFightLabGraduateRewardRs {
    required int32 rewardId = 1;
    repeated Award award = 2;
    extend Base{
        optional GetFightLabGraduateRewardRs ext = 6018;
    }
}



//作战实验室 获取间谍信息
message GetFightLabSpyInfoRq {
    extend Base{
        optional GetFightLabSpyInfoRq ext = 6019;
    }
}

message GetFightLabSpyInfoRs {
    repeated SpyInfo spyinfo = 1;
    extend Base{
        optional GetFightLabSpyInfoRs ext = 6020;
    }
}

//作战实验室 间谍地图激活
message ActFightLabSpyAreaRq {
	required int32 areaId =1;//区域id
    extend Base{
        optional ActFightLabSpyAreaRq ext = 6021;
    }
}

message ActFightLabSpyAreaRs {
    optional SpyInfo spyinfo = 1;
	optional int32 gold = 2;
    extend Base{
        optional ActFightLabSpyAreaRs ext = 6022;
    }
}


//作战实验室 间谍任务刷新
message RefFightLabSpyTaskRq {
	required int32 areaId =1;//区域id
    extend Base{
        optional RefFightLabSpyTaskRq ext = 6023;
    }
}

message RefFightLabSpyTaskRs {
    optional int32 taskId=1;//任务id
	optional int32 gold = 2;
    extend Base{
        optional RefFightLabSpyTaskRs ext = 6024;
    }
}

//作战实验室 间谍任务派遣
message ActFightLabSpyTaskRq {
	required int32 areaId =1;//区域id
	required int32 spyId =2;//间谍id
    extend Base{
        optional ActFightLabSpyTaskRq ext = 6025;
    }
}


message ActFightLabSpyTaskRs {
    optional SpyInfo spyinfo = 1;
	optional int32 gold = 2;
    extend Base{
        optional ActFightLabSpyTaskRs ext = 6026;
    }
}

//作战实验室 间谍任务领取奖励
message GctFightLabSpyTaskRewardRq {
	required int32 areaId =1;//区域id
    extend Base{
        optional GctFightLabSpyTaskRewardRq ext = 6027;
    }
}

message GctFightLabSpyTaskRewardRs {
    optional SpyInfo spyinfo = 1;
	repeated Award award = 2;
	required int32 awardLevel =3;//奖励等级 0成功 1大成功
    extend Base{
        optional GctFightLabSpyTaskRewardRs ext = 6028;
    }
}


//作战实验室 重置深度研究所
message ResetFightLabGraduateUpRq {
    required int32 type = 1;//类型
    extend Base{
        optional ResetFightLabGraduateUpRq ext = 6029;
    }
}

message ResetFightLabGraduateUpRs {
    repeated ThreeInt info  = 1;//type类型 skillId  level
    repeated ThreeInt itemInfo  = 2;//type itemId count  物品同步
	optional int32 gold = 3;

    extend Base{
        optional ResetFightLabGraduateUpRs ext = 6030;
    }
}

// 一键领取所有间谍任务奖励
message GetAllSpyTaskRewardRq {
    extend Base{
        optional GetAllSpyTaskRewardRq ext = 6031;
    }
}

message GetAllSpyTaskRewardRs {
	repeated SpyTaskReward taskAward = 1;
    extend Base{
        optional GetAllSpyTaskRewardRs ext = 6032;
    }
}





//点击宝箱获得奖励
message GetGiftRewardRq {
    extend Base{
        optional GetGiftRewardRq ext = 6100;
    }
}

message GetGiftRewardRs {
    repeated Award award = 1;
    extend Base{
        optional GetGiftRewardRs ext = 6101;
    }
}







//红色方案获取信息
message GetRedPlanInfoRq {
    extend Base{
        optional GetRedPlanInfoRq ext = 6200;
    }
}

message GetRedPlanInfoRs {
    required int32 fuel = 1;//燃料数量
	required int32 itemCount =2;//代币数
	repeated int32 areaInfo =3;//地图地图id 对应地图状态 1没开启 2开启 3未通过(单次已经走到了终点) 4全部通过
	repeated int32 shopInfo =4;//兑换物品信息 goodsid- count已经对接次数
	required int32 fuelBuyCount =5;//购买燃料次数
	required int32 isfirst = 6;//是否第一次打开这个活动 1是 0否
	required int32 nowAreaId =7;//当前打的那一块地图
	required int32 fuelTime = 8;//下次回复燃料剩余时间

    extend Base{
        optional GetRedPlanInfoRs ext = 6201;
    }
}


//红色方案移动格子
message MoveRedPlanRq {
	required int32 areaId = 1;//区域id
    extend Base{
        optional MoveRedPlanRq ext = 6202;
    }
}

message MoveRedPlanRs {
    required int32 nextPointId = 1;//下一个格子id
	repeated Award award = 2;//获得的奖励
	required int32 awardType = 3;//奖励类型
	required int32 itemCount =4;//代币数
	required int32 fuel = 5;//燃料数量
	required int32 rewardInfo =6;//对应奖励的状态 0不可以 1可以领取  2已经领取
	required int32 isfirst = 7;//是否第一次通关 1是 0否
	repeated int32 historyPoint =8;//已经走过的点
	required int32 perfect = 9;//是否完美通关 1是 0否
    extend Base{
        optional MoveRedPlanRs ext = 6203;
    }
}

//红色方案兑换物品
message RedPlanRewardRq {
	required int32 goodsid = 1;//兑换id
	optional int32 count =2;//兑换数量
    extend Base{
        optional RedPlanRewardRq ext = 6204;
    }
}

message RedPlanRewardRs {
	required int32 itemCount =1;//代币数
	repeated Award award = 2;//获得的奖励
	repeated int32 shopInfo =3;//兑换物品信息 goodsid- count已经对接次数

    extend Base{
        optional RedPlanRewardRs ext = 6205;
    }
}


//红色方案购买燃料
message RedPlanBuyFuelRq {
    extend Base{
        optional RedPlanBuyFuelRq ext = 6206;
    }
}

message RedPlanBuyFuelRs {
	required int32 fuelBuyCount = 1;//购买燃料次数
	required int32 gold = 2;//金币数
	required int32 fuel = 3;//燃料数量
    extend Base{
        optional RedPlanBuyFuelRs ext = 6207;
    }
}


//红色方案领取通关宝箱
message GetRedPlanBoxRq {
	required int32 areaId = 1;//区域id
    extend Base{
        optional GetRedPlanBoxRq ext = 6208;
    }
}

message GetRedPlanBoxRs {
	repeated Award award = 1;//获得的奖励
	required int32 rewardInfo =2;//对应奖励的状态 0不可以 1可以领取  2已经领取
    extend Base{
        optional GetRedPlanBoxRs ext = 6209;
    }
}


//红色方案获取区域信息
message GetRedPlanAreaInfoRq {
	required int32 areaId = 1;//区域id
    extend Base{
        optional GetRedPlanAreaInfoRq ext = 6210;
    }
}

message GetRedPlanAreaInfoRs {
	repeated int32 pointIds =1;//通过线路
	repeated int32 areaInfo =2;//地图地图id 对应地图状态 1没开启 2开启 3未通过(单次已经走到了终点) 4全部通过
	required int32 rewardInfo =3;//对应奖励的状态 0不可以 1可以领取  2已经领取
	required int32 nowAreaId =4;//当前打的那一块地图
	required int32 isfirst = 5;//是否第一次打开这个区域 1是 0否
	repeated int32 historyPoint =6;//已经走过的点

    extend Base{
        optional GetRedPlanAreaInfoRs ext = 6211;
    }
}


//红色方案扫荡
message RefRedPlanAreaRq {
	required int32 areaId = 1;//区域id
    extend Base{
        optional RefRedPlanAreaRq ext = 6212;
    }
}

message RefRedPlanAreaRs {
	repeated Award award = 1;//获得的奖励
	required int32 awardType = 2;//奖励类型
	required int32 itemCount =3;//代币数
	required int32 fuel = 4;//燃料数量
    extend Base{
        optional RefRedPlanAreaRs ext = 6213;
    }
}



//新手引导获取奖励
message GetGuideRewardRq {
	required int32 index = 1;
    extend Base{
        optional GetGuideRewardRq ext = 6300;
    }
}

message GetGuideRewardRs {
	repeated Award award = 1;//获得的奖励
	required int32 count = 2;//幸运币剩余数量
    extend Base{
        optional GetGuideRewardRs ext = 6301;
    }
}



//赏金活动组队副本

// 创建队伍
message CreateTeamRq {
	required int32 teamType = 1; //队伍类型
	extend Base{
        optional CreateTeamRq ext = 6400;
    }
}

message CreateTeamRs {
	required int32 teamId = 1; //队伍ID
	required TeamRoleInfo roleInfo = 2; //队伍角色信息
	extend Base{
        optional CreateTeamRs ext = 6401;
    }
}


//加入队伍
message JoinTeamRq {
	required int32 teamId = 1;	 //队伍ID
	extend Base{
        optional JoinTeamRq ext = 6402;
    }
}

message JoinTeamRs {
	extend Base{
        optional JoinTeamRs ext = 6403;
    }
}


//离开队伍
message LeaveTeamRq {
	extend Base{
        optional LeaveTeamRq ext = 6404;
    }
}

message LeaveTeamRs {
	extend Base{
        optional LeaveTeamRs ext = 6405;
    }
}


//踢出队伍
message KickOutRq {
	required int64 roleId = 1; //被踢队员ID
	extend Base{
        optional KickOutRq ext = 6406;
    }
}

message KickOutRs {
	extend Base{
        optional KickOutRs ext = 6407;
    }
}


//解散队伍
message DismissTeamRq {
	extend Base{
        optional DismissTeamRq ext = 6408;
    }
}

message DismissTeamRs {
	extend Base{
        optional DismissTeamRs ext = 6409;
    }
}


//寻找队伍
message FindTeamRq {
	required int32 teamType = 1; //队伍类型
	extend Base{
        optional FindTeamRq ext = 6410;
    }
}

message FindTeamRs {
	extend Base{
        optional FindTeamRs ext = 6411;
    }
}


//切换队员准备状态
message ChangeMemberStatusRq {
	extend Base{
        optional ChangeMemberStatusRq ext = 6412;
    }
}

message ChangeMemberStatusRs {
	extend Base{
        optional ChangeMemberStatusRs ext = 6413;
    }
}


//交换队员出战顺序
message ExchangeOrderRq {
	required int32 roleOne = 1;   //位置序号1
	required int32 roleTwo = 2;	 //位置序号2
	extend Base{
        optional ExchangeOrderRq ext = 6414;
    }
}

message ExchangeOrderRs {
	extend Base{
        optional ExchangeOrderRs ext = 6415;
    }
}


//队伍聊天协议
message TeamChatRq{
	required string message = 1; //聊天内容
	extend Base{
		 optional TeamChatRq ext = 6416;
	}
}

message TeamChatRs{
	required int64 time = 1; //聊天发起时间
	extend Base{
		 optional TeamChatRs ext = 6417;
	}
}


//查看队员阵型信息
message LookMemberInfoRq {
	required int64 roleId = 1; //查看的角色ID
	extend Base{
		 optional LookMemberInfoRq ext = 6418;
	}
}

message LookMemberInfoRs {
	required Form form = 1; //队伍阵型
	required int64 fight = 2; //阵型战力
	extend Base{
		 optional LookMemberInfoRs ext = 6419;
	}
}


//发送世界消息邀请玩家
message InviteMemberRq {
	required int32 stageId = 1;  //关卡ID
	extend Base{
		 optional InviteMemberRq ext = 6420;
	}
}

message InviteMemberRs {
	extend Base{
		 optional InviteMemberRs ext = 6421;
	}
}


//同步队伍信息
message SynTeamInfoRq {
	required int32 teamId = 1;	//队伍ID
	required int64 captainId = 2;	//队长ID
	required int32 teamType = 3; //队伍类型
	repeated int64 order = 4;	//队伍顺序
	repeated TeamRoleInfo teamInfo = 5;	 //队伍角色信息
	required int32 actionType = 6; //操作类型  2/寻找/3离开/4踢出/5加入/7设置阵型
	extend Base{
        optional SynTeamInfoRq ext = 1050;
    }
}


//通知队伍已解散
message SynNotifyDisMissTeamRq {
	extend Base{
        optional SynNotifyDisMissTeamRq ext = 1051;
    }
}


//通知队员被踢出
message SynNotifyKickOutRq {
	extend Base{
        optional SynNotifyKickOutRq ext = 1052;
    }
}


//通知队员状态改变
message SynChangeStatusRq {
	required int64 roleId = 1;	// 状态改变者ID
	required int32 status = 2;  // 状态值
	extend Base{
        optional SynChangeStatusRq ext = 1053;
    }
}


//同步队伍出战顺序
message SynTeamOrderRq {
	repeated int64 order = 1;	//队伍顺序
	extend Base{
        optional SynTeamOrderRq ext = 1054;
    }
}


//同步聊天信息至其他队员
message SynTeamChatRq {
	required int64 roleId = 1;  //讲话者ID
	required string message = 2;  //聊天内容
	required int64 time = 3;   //聊天发起时间
	required string name = 4;  //聊天内容
	optional string serverName=5;//发言人服务器名称
	extend Base{
        optional SynTeamChatRq ext = 1055;
    }
}


//通知关卡已关闭
message SynStageCloseToTeamRq {
	extend Base{
        optional SynStageCloseToTeamRq ext = 1056;
    }
}


//赏金活动兑换物品
message TeamInstanceExchangeRq {
	required int32 goodid = 1; //兑换物品id
	optional int32 count = 2; //单次购买的数量
    extend Base{
        optional TeamInstanceExchangeRq ext = 6424;
    }
}

message TeamInstanceExchangeRs {
	required int32 itemCount = 1;  //剩余代币数
	repeated Award award = 2;	//获得的奖励
	required ShopBuy buyInfo = 3;	//本次购买信息
    extend Base{
        optional TeamInstanceExchangeRs ext = 6425;
    }
}


// 拉取赏金商店界面信息
message GetBountyShopBuyRq {
	extend Base{
        optional GetBountyShopBuyRq ext = 6426;
    }
}

message GetBountyShopBuyRs {
	required int32 openWeek = 1; //当前是开服第几周
	repeated ShopBuy shopInfo = 2; //所有商品的购买信息
	required int32 itemCount = 3; //代币数
	extend Base{
        optional GetBountyShopBuyRs ext = 6427;
    }
}


//拉取通缉令任务奖励状态
message GetTaskRewardStatusRq {
	extend Base{
        optional GetTaskRewardStatusRq ext = 6428;
    }
}

message GetTaskRewardStatusRs {
	repeated TeamTask taskInfo = 1;  // 任务信息
	extend Base{
        optional GetTaskRewardStatusRs ext = 6429;
    }
}


//领取通缉令奖励
message GetTaskRewardRq {
	required int32 taskId = 1;
	extend Base{
        optional GetTaskRewardRq ext = 6430;
    }
}

message GetTaskRewardRs {
	repeated Award award = 1; //奖励
	extend Base{
        optional GetTaskRewardRs ext = 6431;
    }
}


//挑战boss
message TeamFightBossRq {
	extend Base{
        optional TeamFightBossRq ext = 6432;
    }
}

message TeamFightBossRs {
	extend Base{
        optional TeamFightBossRs ext = 6433;
    }
}


//挑战完成之后给队伍里面所有玩家推送这个消息
message SyncTeamFightBossRq {
	repeated Award award = 1; //奖励
	repeated TwoInt count=2;//stageId count 挑战次数
	repeated Record record =3;//战报
	required int32 isSuccess = 4;//挑战是否成功
	repeated TwoLong recordLord  = 5;   //战斗记录中双方指挥官ID
	required int32 tankCount = 6;//挑战者总坦克数量
	extend Base{
        optional SyncTeamFightBossRq ext = 1057;
    }
}


//拉取挑战boss记录
message GetTeamFightBossInfoRq {
	extend Base{
        optional GetTeamFightBossInfoRq ext = 6434;
    }
}

message GetTeamFightBossInfoRs {
	required int32 dayItemCount = 1; //每天获得代币数
	repeated TwoInt count=2;//stageId count 挑战次数
	extend Base{
        optional GetTeamFightBossInfoRs ext = 6435;
    }
}





//假日碎片

//获取假日碎片信息
message GetFestivalInfoRq {
    extend Base{
        optional GetFestivalInfoRq ext = 6500;
    }
}

message GetFestivalInfoRs {
    repeated Atom2 actProp = 1;     // 集字活动道具数量
	required int32 loginRewardState = 2;//登录奖励状态 0 可以领取 1已经领取
	repeated int32 limitCount=3;//兑换限制次数 按照表顺序

    extend Base{
        optional GetFestivalInfoRs ext = 6501;
    }
}

//假日碎片兑换
message GetFestivalRewardRq {
	required int32 id = 1;
	required int32 count = 2;//兑换次数
    extend Base{
        optional GetFestivalRewardRq ext = 6502;
    }
}

message GetFestivalRewardRs {
    repeated Atom2 actProp = 1;     // 集字活动道具数量
	repeated int32 limitCount=2;//兑换限制次数 安装表顺序
	required int32 gold = 3;//金币数
	repeated Award award = 4;//获得的奖励
	repeated Award decrAward = 5;//消耗的物品
    extend Base{
        optional GetFestivalRewardRs ext = 6503;
    }
}

//假日碎片领取登录奖励
message GetFestivalLoginRewardRq {
    extend Base{
        optional GetFestivalLoginRewardRq ext = 6504;
    }
}

message GetFestivalLoginRewardRs {
	required int32 loginRewardState = 1;//登录奖励状态 0 可以领取 1已经领取
	repeated Award award = 2;//获得的奖励
    extend Base{
        optional GetFestivalLoginRewardRs ext = 6505;
    }
}




//幸运奖池

//幸运奖池获取信息
message GetActLuckyInfoRq {
    extend Base{
        optional GetActLuckyInfoRq ext = 6600;
    }
}

message GetActLuckyInfoRs {
    required int32 luckyCount = 1;//可以抽取的次数
	required int32 poolgold = 2;//奖池金额
	required int32 rechargegold = 3;//活动期间充值金额

    extend Base{
        optional GetActLuckyInfoRs ext = 6601;
    }
}

//幸运奖池单次抽取
message GetActLuckyRewardRq {
	required int32 count = 1;//抽取次数
    extend Base{
        optional GetActLuckyRewardRq ext = 6602;
    }
}

message GetActLuckyRewardRs {
    required int32 luckyCount = 1;//可以抽取的次数
	repeated Award award = 2;//获得的奖励
	repeated int32 luckyId = 3;//中奖的配置id
	required int32 poolgold = 4;//奖池金额
    extend Base{
        optional GetActLuckyRewardRs ext = 6603;
    }
}

//幸运奖池 同步奖金池
message ActLuckyPoolGoldChangeRq {

    extend Base{
        optional ActLuckyPoolGoldChangeRq ext = 6604;
    }
}

message ActLuckyPoolGoldChangeRs {
	required int32 poolgold = 1;//奖池金额
    extend Base{
        optional ActLuckyPoolGoldChangeRs ext = 6605;
    }
}


//幸运奖池 获取中奖纪录
message GetActLuckyPoolLogRq {
    extend Base{
        optional GetActLuckyPoolLogRq ext = 6606;
    }
}

message GetActLuckyPoolLogRs {
	repeated ActLuckyPoolLog luckLog = 1;
    extend Base{
        optional GetActLuckyPoolLogRs ext = 6607;
    }
}



//叛军优化

//领取礼盒奖励
message GetRebelBoxAwardRq {
	required int32 pos = 1;  //礼盒坐标
	extend Base{
        optional GetRebelBoxAwardRq ext = 6700;
    }
}

message GetRebelBoxAwardRs {
	required int32 leftCount = 1; // 本次领取之前红包剩余个数  -3 活动已结束/-2单个礼盒每人限领一次/-1超出每日领取次数/0已被领完/>0正常领取
	optional Award award = 2;
	extend Base{
        optional GetRebelBoxAwardRs ext = 6701;
    }
}


//抢红包
message GrabRebelRedBagRq {
	required int32 uid = 1;  //红包唯一ID
    extend Base
    {
      optional GrabRebelRedBagRq ext = 6702;
    }
}

message GrabRebelRedBagRs{
    optional int32 grabMoney = 1;      //   -3 活动已结束/-1超出红包每日可领次数/ 0已被领完或已领取/ >0抢红包金额
    optional ActRedBag redBag = 2;    //如果未抢到红包则显示红包详细信息
    extend Base
    {
      optional GrabRebelRedBagRs ext = 6703;
    }
}


//军工科技重置指令
message ResetMilitaryScienceRq{
    required int32 type = 1;
    extend Base
    {
      optional ResetMilitaryScienceRq ext = 6800;
    }
}

message ResetMilitaryScienceRs{
	repeated Award award = 1;
    required int32 gold = 2;
	repeated MilitaryScience militaryScience  = 3; // 只给实际数据,客户端自己展示
	repeated MilitaryScienceGrid militaryScienceGrid = 4; // 有改动的格子
    extend Base
    {
      optional ResetMilitaryScienceRs ext = 6801;
    }
}



//配件转换
message PartConvertRq {
	required int32 pos = 1;
	required int32 pos2 = 2;
	repeated TwoInt keyIds = 3;
	extend Base
    {
      optional PartConvertRq ext = 6900;
    }
}

message PartConvertRs {
	repeated TwoInt newPartId = 1;  //转换后的新配件ID <keyId, partId >
	required int32 gold = 2;
	extend Base
    {
      optional PartConvertRs ext = 6901;
    }
}



//坦克转换活动

//坦克转换
message TankConvertRq {
	required int32 count = 1;
	required int32 srcTankId = 2; 	//消耗的坦克
	required int32 dstTankId = 3; 	//目标坦克
	extend Base
    {
      optional TankConvertRq ext = 7000;
    }
}

message TankConvertRs {
	extend Base
    {
      optional TankConvertRs ext = 7001;
    }
}


//拉取活动界面
message GetTankConvertInfoRq {
	extend Base
    {
      optional GetTankConvertInfoRq ext = 7002;
    }
}

message GetTankConvertInfoRs {
	required int32 count = 1; 	//活动道具数量
	extend Base
    {
      optional GetTankConvertInfoRs ext = 7003;
    }
}


// 图纸兑换活动

// 拉取活动界面
message GetDrawingCashRq {
    extend Base
    {
      optional GetDrawingCashRq ext = 7100;
    }
}

message GetDrawingCashRs {
    repeated Cash cash = 1;
    extend Base
    {
      optional GetDrawingCashRs ext = 7101;
    }
}


//刷新兑换列表
message RefshDrawingCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional RefshDrawingCashRq ext = 7102;
    }
}

message RefshDrawingCashRs {
    optional Cash cash = 1;
    extend Base
    {
      optional RefshDrawingCashRs ext = 7103;
    }
}


//进行图纸兑换
message DoDrawingCashRq {
    optional int32 cashId = 1;
    extend Base
    {
      optional DoDrawingCashRq ext = 7104;
    }
}

message DoDrawingCashRs {
    optional Award award = 1;
    repeated Award costList = 2;
    extend Base
    {
      optional DoDrawingCashRs ext = 7105;
    }
}



 //装备升星
message UpEquipStarLvRq {
    required int32 keyId = 1;
    required int32 pos = 2;
    extend Base
    {
      optional UpEquipStarLvRq ext = 7200;
    }
}

message UpEquipStarLvRs {
    required Equip equip = 1;
	repeated Award award = 2;//消耗掉的物品
	repeated int32 needKeyId = 3;

    extend Base
    {
      optional UpEquipStarLvRs ext = 7201;
    }
}



//幸运转盘每日目标
message GetActFortuneDayInfoRq {
    extend Base
    {
      optional GetActFortuneDayInfoRq ext = 7300;
    }
}

message GetActFortuneDayInfoRs {
	required int32 count = 1;
	repeated TwoInt rewardStatus = 2;  	//key ：awardId , value : status -1不可领取/0可领取/1已领取
    extend Base
    {
      optional GetActFortuneDayInfoRs ext = 7301;
    }
}


message GetFortuneDayAwardRq {
	required int32 awardId = 1;
    extend Base
    {
      optional GetFortuneDayAwardRq ext = 7303;
    }
}

message GetFortuneDayAwardRs {
	repeated Award award = 1;
    extend Base
    {
      optional GetFortuneDayAwardRs ext = 7304;
    }
}


// 能晶转盘每日目标
message GetEnergyDialDayInfoRq {
    extend Base
    {
      optional GetEnergyDialDayInfoRq ext = 7305;
    }
}

message GetEnergyDialDayInfoRs {
	required int32 count = 1;
	repeated TwoInt rewardStatus = 2;  	//key ：awardId , value : status -1不可领取/0可领取/1已领取
    extend Base
    {
      optional GetEnergyDialDayInfoRs ext = 7306;
    }
}


message GetEnergyDialDayAwardRq {
	required int32 awardId = 1;
    extend Base
    {
      optional GetEnergyDialDayAwardRq ext = 7307;
    }
}

message GetEnergyDialDayAwardRs {
	repeated Award award = 1;
    extend Base
    {
      optional GetEnergyDialDayAwardRs ext = 7308;
    }
}



//装备转盘

// 装备转盘抽奖主页面
message GetActEquipDialRq {
    extend Base
    {
      optional GetActEquipDialRq ext = 7309;
    }
}

message GetActEquipDialRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;           //转盘
    optional int32 free = 3;                //免费次数
    optional string displayList = 4;        //显示奖励
    extend Base
    {
      optional GetActEquipDialRs ext = 7310;
    }
}

// 装备转盘排行榜
message GetActEquipDialRankRq {
    extend Base
    {
      optional GetActEquipDialRankRq ext = 7311;
    }
}

message GetActEquipDialRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 false不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息
    extend Base
    {
      optional GetActEquipDialRankRs ext = 7312;
    }
}

// 装备转盘抽奖
message DoActEquipDialRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActEquipDialRq ext = 7313;
    }
}

message DoActEquipDialRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActEquipDialRs ext = 7314;
    }
}

// 装备转盘每日目标主界面
message GetEquipDialDayInfoRq {
    extend Base
    {
      optional GetEquipDialDayInfoRq ext = 7315;
    }
}

message GetEquipDialDayInfoRs {
	required int32 count = 1;
	repeated TwoInt rewardStatus = 2;  	//key ：awardId , value : status -1不可领取/0可领取/1已领取
    extend Base
    {
      optional GetEquipDialDayInfoRs ext = 7316;
    }
}

// 装备转盘每日目标领奖
message GetEquipDialDayAwardRq {
	required int32 awardId = 1;
    extend Base
    {
      optional GetEquipDialDayAwardRq ext = 7317;
    }
}

message GetEquipDialDayAwardRs {
	repeated Award award = 1;
    extend Base
    {
      optional GetEquipDialDayAwardRs ext = 7318;
    }
}



//勋章分解兑换活动
message GetActMedalResolveRq {
    extend Base
    {
      optional GetActMedalResolveRq ext = 7319;
    }
}

message GetActMedalResolveRs {
    optional int32 state = 1;                   //芯片数量
    repeated PartResolve partResolve = 2;       //
    extend Base
    {
      optional GetActMedalResolveRs ext = 7320;
    }
}

message DoActMedalResolveRq {
    optional int32 resolveId = 1;
    extend Base
    {
      optional DoActMedalResolveRq ext = 7321;
    }
}

message DoActMedalResolveRs {
    repeated Award award = 1;
    extend Base
    {
      optional DoActMedalResolveRs ext = 7322;
    }
}



//优化，兑换购买类活动批量操作
message BuyInBuckRq {
    required int32 activityId = 1;
	required int32 goodId = 2;
	required int32 count = 3;
    extend Base
    {
      optional BuyInBuckRq ext = 7323;
    }
}

message BuyInBuckRs {
    repeated Award award = 1;
	repeated TwoInt changeNum = 2;     // 更细兑换剩余次数
	optional Atom2 actProp = 3;     // 剩余道具数量
    extend Base
    {
      optional BuyInBuckRs ext = 7324;
    }
}




//新首冲活动
message GetActNewPayInfoRq {
    extend Base
    {
      optional GetActNewPayInfoRq ext = 7400;
    }
}

message GetActNewPayInfoRs {
    repeated TwoInt info = 1;    //充值了的是1 没有充值的0
    extend Base
    {
      optional GetActNewPayInfoRs ext = 7401;
    }
}



//科技优惠
message ActTechInfoRq {
    extend Base
    {
      optional ActTechInfoRq ext = 7402;
    }
}

message ActTechInfoRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActTechInfoRs ext = 7403;
    }
}

//建筑优惠
message ActBuildInfoRq {
    extend Base
    {
      optional ActBuildInfoRq ext = 7404;
    }
}

message ActBuildInfoRs {
    repeated Quota quota = 1;
    extend Base
    {
      optional ActBuildInfoRs ext = 7405;
    }
}

//新首冲活动2
message GetActNew2PayInfoRq {
    extend Base
    {
      optional GetActNew2PayInfoRq ext = 7406;
    }
}

message GetActNew2PayInfoRs {
    repeated TwoInt info = 1;    //充值了的是1 没有充值的0
    extend Base
    {
      optional GetActNew2PayInfoRs ext = 7407;
    }
}

//每日每周礼包购买领取
message GetBoxInfoRq {
    extend Base
    {
      optional GetBoxInfoRq ext = 7500;
    }
}

message GetBoxInfoRs {
    repeated TwoInt info = 1;    //id count
    extend Base
    {
      optional GetBoxInfoRs ext = 7501;
    }
}

message BuyBoxRq {
	required int32 id = 1;
    extend Base
    {
      optional BuyBoxRq ext = 7502;
    }
}

message BuyBoxRs {
    repeated TwoInt info = 1;    //id count
	repeated Award award = 2;//奖励
	required int32 gold = 3;
    extend Base
    {
      optional BuyBoxRs ext = 7503;
    }
}


//侦查验证码的  获取cd时间
message GetScoutFreeTimeRq {
    extend Base
    {
      optional GetScoutFreeTimeRq ext = 7600;
    }
}

message GetScoutFreeTimeRs {
    required int32 time = 1;    //cd时间 时间单位毫秒
	required int32 scoutCount = 2;//侦查次数
	required int32 scoutFailCount = 3;//侦查失败次数
	required int32 isVerification = 4;//0不需要 1需要
    extend Base
    {
      optional GetScoutFreeTimeRs ext = 7601;
    }
}

//侦查验证码的 验证码输入完成发送
message VCodeScoutRq {
	repeated int32 imgId = 1;
    extend Base
    {
      optional VCodeScoutRq ext = 7602;
    }
}

message VCodeScoutRs {
    optional Award award = 1;//奖励
	required int32 time = 2; //cd时间
	required int32 scoutFailCount = 3;//侦查失败次数
	required int32 status = 4;//验证结果，0失败1成功
    extend Base
    {
      optional VCodeScoutRs ext = 7603;
    }
}

// 刷新验证码图片
message RefreshScoutImgRq {
	required bool isFirst = 1;	// 区分第一次刷新，第一次触发验证为true, 以后的刷新为false
    extend Base
    {
      optional RefreshScoutImgRq ext = 7604;
    }
}

message RefreshScoutImgRs {
	required int32 kindOne = 1;		// 图片分类，<100表示图片大类
	required int32 kindTwo = 2;
	repeated int32 imgId = 3;
    extend Base
    {
      optional RefreshScoutImgRs ext = 7605;
    }
}



// 新活跃宝箱

// 通知宝箱掉落
message SynActiveBoxDropRq {
	repeated int32 boxId = 1; 	//宝箱ID
    extend Base
    {
      optional SynActiveBoxDropRq ext = 1100;
    }
}

message GetActiveBoxAwardRq {
	repeated int32 boxId = 1;  //宝箱ID
	extend Base
    {
      optional GetActiveBoxAwardRq ext = 7700;
    }
}

message GetActiveBoxAwardRs {
	repeated Award award = 1;  //奖励
	extend Base
    {
      optional GetActiveBoxAwardRs ext = 7701;
    }
}



// 荣耀生存玩法

// 通知玩家玩法开启或关闭
message SynHonourSurviveOpenRq {
	required int32 type = 1;	//1表示开启，2表示关闭
    extend Base
    {
      optional SynHonourSurviveOpenRq ext = 1101;
    }
}

// 同步更新安全区
message SynUpdateSafeAreaRq {
	required int32 xbegin = 1;
	required int32 ybegin = 2;
	required int32 xend = 3;
	required int32 yend = 4;
	required int32 phase = 5;		// 略不同于服务端定义的phase, 取服务端phase的绝对值
    extend Base
    {
      optional SynUpdateSafeAreaRq ext = 1102;
    }
}

// 同步通知下一个安全区范围
message SynNextSafeAreaRq {
	required int32 pos = 1;			//中心点坐标
	required int32 length = 2;		//半边长
	required int32 startTime = 3;	//缩圈开始时间
	required int32 endTime = 4;		//缩圈结束时间
	required int32 phase = 5;		//区别于服务端定义的phase, 只用于客户端判断是否显示下一个安全区显示，0显示，1不显示
    extend Base
    {
      optional SynNextSafeAreaRq ext = 1103;
    }
}

// 拉取排行榜信息
message GetHonourRankRq {
	required int32 type = 1;  	//排行榜类型，1：个人榜，2：军团榜
	extend Base
    {
      optional GetHonourRankRq ext = 7710;
    }

}

message GetHonourRankRs {
	required int32 rank = 1;	// <=0 表示未上榜
	required int32 score = 2;
	optional string partyName = 3;
	required int32 awardStatus = 4;	 //1可领取;2不可领取;3已领取
	repeated HonourRank rankList = 5;
	extend Base
    {
      optional GetHonourRankRs ext = 7711;
    }
}

// 领取荣耀排行榜奖励
message GetHonourRankAwardRq {
	required int32 awardType = 1;	//奖励类型，1：个人榜，2：军团榜
	extend Base
    {
      optional GetHonourRankAwardRq ext = 7712;
    }
}

message GetHonourRankAwardRs {
    repeated Award award = 1;               //奖励
    extend Base
    {
        optional GetHonourRankAwardRs ext = 7713;
    }
}

// 查看荣耀玩法期间的采集信息
message HonourCollectInfoRq {
	required int32 keyId = 1;		//部队ID
	 extend Base
    {
        optional HonourCollectInfoRq ext = 7714;
    }
}

message HonourCollectInfoRs {
	required int32 honourGold = 1;
	required int32 honourScore = 2;
	 extend Base
    {
        optional HonourCollectInfoRs ext = 7715;
    }
}

// 由客户端主动拉取荣耀活动状态
message GetHonourStatusRq {
	 extend Base
    {
        optional GetHonourStatusRq ext = 7730;
    }
}

message GetHonourStatusRs {
	required int32 status = 1 ; 	// 0开启1关闭
	 extend Base
    {
        optional GetHonourStatusRs ext = 7731;
    }
}

// 获取积分金币信息
message HonourScoreGoldInfoRq {
	 extend Base
    {
        optional HonourScoreGoldInfoRq ext = 7732;
    }
}

message HonourScoreGoldInfoRs {
	required int32 score = 1;
	required int32  awardId = 2;	//对应奖励id，0表示没有对应奖励
	required int32 status = 3;		//0不可领，1可领，2已领
	 extend Base
    {
        optional HonourScoreGoldInfoRs ext = 7733;
    }
}

// 领取积分金币
message GetHonourScoreGoldRq {
	required int32 awardId = 1;
	 extend Base
    {
        optional GetHonourScoreGoldRq ext = 7734;
    }
}

message GetHonourScoreGoldRs {
	required Award award = 1;
	 extend Base
    {
        optional GetHonourScoreGoldRs ext = 7735;
    }
}


// 优化，勋章一键升级
message QuickUpMedalRq {
	required int32 keyId = 1;
	required int32 pos = 2;
	 extend Base
    {
        optional QuickUpMedalRq ext = 7716;
    }
}

message QuickUpMedalRs {
	required int32 luckyUp = 1; 	//是否直接升级，0否1是
	required int32 luckyHit = 2; 	//发生经验暴击的次数
    repeated Atom2 atom = 3;     //当前剩余道具
    required int32 cdTime = 4;   //cd结束时间
    required int32 upLv = 5;     //强化等级
    required int32 upExp = 6;    //强化经验
	required int32 state = 7; 	//升级结束原因 ：1材料不足 2CD冷却 3已升级
	 extend Base
    {
        optional QuickUpMedalRs ext = 7717;
    }
}


// 登陆福利
message GetLoginWelfareInfoRq {
	 extend Base
    {
        optional GetLoginWelfareInfoRq ext = 7718;
    }
}

message GetLoginWelfareInfoRs {
	required int32 days = 1;		//已登陆天数
	repeated int64 status = 2; 	//奖励状态			0未登录不可领1可领2已领
	required int32 index = 3;	//当前是活动第几天
	extend Base
    {
        optional GetLoginWelfareInfoRs ext = 7719;
    }
}

message GetLoginWelfareAwardRq {
	required int32 awardId = 1;	//奖励id，对应当前登陆天数，7表示最终额外奖励
	extend Base
    {
        optional GetLoginWelfareAwardRq ext = 7720;
    }
}

message GetLoginWelfareAwardRs {
	repeated Award awards = 1;
	extend Base
    {
        optional GetLoginWelfareAwardRs ext = 7721;
    }
}


// 设置军备方案
message SetLeqSchemeRq {
	required LeqScheme leqScheme = 1;
	extend Base
    {
        optional SetLeqSchemeRq ext = 7722;
    }
}

message SetLeqSchemeRs {
	optional LeqScheme leqScheme = 1;
	extend Base
    {
        optional SetLeqSchemeRs ext = 7723;
    }
}

// 读取并穿戴军备
message PutonLeqSchemeRq {
	required int32 type = 1;
	extend Base
    {
        optional PutonLeqSchemeRq ext = 7724;
    }
}

message PutonLeqSchemeRs {
	repeated LordEquip leq = 1;
	repeated int32 resolve = 2; //军备方案中被分解的装备所属部位
	extend Base
    {
        optional PutonLeqSchemeRs ext = 7725;
    }
}

// 获取所有军备方案信息
message GetAllLeqSchemeRq {
	extend Base
    {
        optional GetAllLeqSchemeRq ext = 7726;
    }
}

message GetAllLeqSchemeRs {
	repeated LeqScheme leqScheme = 1;
	extend Base
    {
        optional GetAllLeqSchemeRs ext = 7727;
    }
}

//新金币采集英雄
// 新金币采集英雄 获取采集的金币
message GetNewHeroInfoRq {
	required int32 keyId = 1;		//部队ID
	 extend Base
    {
        optional GetNewHeroInfoRq ext = 7800;
    }
}


message GetNewHeroInfoRs {
	required int32 gold = 1;
	optional int32 stafExp=2;
	 extend Base
    {
        optional GetNewHeroInfoRs ext = 7801;
    }
}

// 清除英雄cd
message ClearHeroCdRq {
	required int32 heroId = 1;		//英雄id
	 extend Base
    {
        optional ClearHeroCdRq ext = 7802;
    }
}


message ClearHeroCdRs {
	required int32 gold = 1;
	 extend Base
    {
        optional ClearHeroCdRs ext = 7803;
    }
}

//获取英雄cd时间
message GetHeroCdRq {
	 extend Base
    {
        optional GetHeroCdRq ext = 7804;
    }
}


message GetHeroCdRs {
	repeated TwoLong heroCd = 1;	//key heroId,valu cd时间戳
	repeated TwoInt heroClearCount = 2;//清除cd次数 key heroId,value count
	 extend Base
    {
        optional GetHeroCdRs ext = 7805;
    }
}


//获取英雄过期时间
message GetHeroEndTimeRq {
	 extend Base
    {
        optional GetHeroEndTimeRq ext = 7806;
    }
}


message GetHeroEndTimeRs {
	repeated TwoLong heroEndTime = 1;	//key heroId,valu 过期时间戳
	 extend Base
    {
        optional GetHeroEndTimeRs ext = 7807;
    }
}



// 一键领取军团副本奖励
message GetAllPcbtAwardRq {
	 extend Base
    {
        optional GetAllPcbtAwardRq ext = 7900;
    }
}

message GetAllPcbtAwardRs {
	required int32 donate = 1;		// >0表示已扣除的贡献，<=0表示所需贡献
	repeated int32 combatId = 2;	// 已领取的关卡id
	repeated Award award = 3;
	 extend Base
    {
        optional GetAllPcbtAwardRs ext = 7901;
    }
}


// 一键捐献军团大厅
message DonateAllPartyResRq {
	 extend Base
    {
        optional DonateAllPartyResRq ext = 7902;
    }
}

message DonateAllPartyResRs {
	optional int64 stone = 1;
    optional int64 iron = 2;
    optional int64 silicon = 3;
    optional int64 copper = 4;
    optional int64 oil = 5;
	required int32 build = 6; //增加的贡献度
	required bool isBuild = 7; //是否增加建设度
	 extend Base
    {
        optional DonateAllPartyResRs ext = 7903;
    }
}


// 一键捐献军团科技
message DonateAllPartyScienceRq {
	required int32 scienceId = 1;
	 extend Base
    {
        optional DonateAllPartyScienceRq ext = 7904;
    }
}

message DonateAllPartyScienceRs {
	optional int64 stone = 1;
    optional int64 iron = 2;
    optional int64 silicon = 3;
    optional int64 copper = 4;
    optional int64 oil = 5;
	optional int32 build = 6;
	optional Science science = 7; //增加的贡献度
	 extend Base
    {
        optional DonateAllPartyScienceRs ext = 7905;
    }
}


//问卷调查
message QueSendAnswerRq {
	repeated QueAnswer answer = 1;
	extend Base
    {
		optional QueSendAnswerRq ext = 7906;
    }
}

message QueSendAnswerRs {
	repeated Award award = 1;
	required int32 queStatus = 2;
	extend Base
    {
		optional QueSendAnswerRs ext = 7907;
    }
}

message GetQueAwardStatusRq {
	extend Base
    {
		optional GetQueAwardStatusRq ext = 7908;
    }
}

message GetQueAwardStatusRs {
	required int32 queStatus = 1;	//问卷状态  0未答 1已答
	extend Base
    {
		optional GetQueAwardStatusRs ext = 7909;
    }
}

//世界矿点编制经验
message GetWorldStaffingRq {
	extend Base
    {
		optional GetWorldStaffingRq ext = 8100;
    }
}

message GetWorldStaffingRs {
	required int64 worldExp = 1;	//世界总exp
	required int64 dayExp = 2;	//玩家当天贡献的exp
	extend Base
    {
		optional GetWorldStaffingRs ext = 8101;
    }
}


// 新累计充值
// 获取充值奖励情况
message GetNewPayEverydayRq {
	extend Base
    {
      optional GetNewPayEverydayRq ext = 8201;
    }
}

message GetNewPayEverydayRs {
	required int32 days = 1;                      // 最大连续充值天数
	required Activity activity = 2;               // 开始时间
	repeated ActivityCond activityCond = 3;     // 奖励状态
	extend Base
    {
      optional GetNewPayEverydayRs ext = 8202;
    }
}

//军团充值
message GetPartyRechargeRq {
	extend Base
    {
      optional GetPartyRechargeRq ext = 8203;
    }
}

message GetPartyRechargeRs {
	required int32 totalGold = 1;                      // 军团累计充值金币数
	optional int32 partyId = 2;     			  // 军团id
	//required Activity activity = 3;               // 开始时间
	repeated ActivityCond activityCond = 3;       // 奖励状态
	extend Base
    {
      optional GetPartyRechargeRs ext = 8204;
    }
}




//军团战活跃 获取信息
message GetWarActivityInfoRq {
	extend Base
    {
      optional GetWarActivityInfoRq ext = 8300;
    }
}
message GetWarActivityInfoRs {
	repeated TwoInt info = 2;	// key:id value:已经完成的值
	repeated TwoInt rewardState = 3;	// key:id value:是否领取奖励  1领取 0未领取
	extend Base
    {
      optional GetWarActivityInfoRs ext = 8301;
    }
}

//军团战活跃 领取奖励
message GetWarActivityRewardRq {
	required int32 id = 1;
	extend Base
    {
      optional GetWarActivityRewardRq ext = 8302;
    }
}
message GetWarActivityRewardRs {
	repeated Award award = 1;
	repeated TwoInt rewardState = 2;	// key:id value:是否领取奖励  1领取 0未领取
	extend Base
    {
      optional GetWarActivityRewardRs ext = 8303;
    }
}


//祭坛Boss喂养：
//获取资源捐献类型和次数
message GetFeedAltarBossRq {
	extend Base
    {
      optional GetFeedAltarBossRq ext = 8400;
    }
}
message GetFeedAltarBossRs {
	repeated TwoInt contributeCount = 1;	// key:type value:count  捐献的类型、次数
	extend Base
    {
      optional GetFeedAltarBossRs ext = 8401;
    }
}



//资源捐献的种类
message GetFeedAltarContriButeRq {
    repeated  int32 type = 1;
	extend Base
    {
      optional GetFeedAltarContriButeRq ext = 8402;
    }
}
message GetFeedAltarContriButeRs {
	optional int64 stone = 1;
    optional int64 iron = 2;
    optional int64 silicon = 3;
    optional int64 copper = 4;
    optional int64 oil = 5;
	required int32 contribute = 6; //增加的贡献度
	repeated TwoInt contributeCount = 7;	// key:type value:count  捐献的类型、次数
	required int32 exp = 8;
	extend Base
    {
      optional GetFeedAltarContriButeRs ext = 8403;
    }
}









//战术大师
//获取战术
message GetTacticsRq {
	extend Base
    {
      optional GetTacticsRq ext = 8500;
    }
}

message GetTacticsRs {
	repeated Tactics tactics=1;//战术
	repeated TwoInt tacticsSlice = 2;//战术碎片 key:Id value:count
	repeated TwoInt tacticsItem = 3;//战术材料 key:Id value:count
	repeated TacticsForm facticsForm = 4;
	extend Base
    {
      optional GetTacticsRs ext = 8501;
    }
}

//升级
message UpgradeTacticsRq {
	required int32 keyId =1;//需要升级的战术
	repeated int32 consumeKeyId=2;//消耗得战术keyid
	repeated TwoInt tacticsSlice =3;//需要消耗得战术碎片

	extend Base
    {
      optional UpgradeTacticsRq ext = 8502;
    }
}

message UpgradeTacticsRs {
	required Tactics tactics=1;//战术
	repeated int32 consumeKeyId=2;//消耗得战术keyid
	repeated TwoInt tacticsSlice = 3;//战术碎片 key:Id value:count
	repeated Award award = 4;//返还突破的材料
	extend Base
    {
      optional UpgradeTacticsRs ext = 8503;
    }
}

//突破
message TpTacticsRq {
	required int32 keyId =1;//需要升级的战术
	extend Base
    {
      optional TpTacticsRq ext = 8504;
    }
}

message TpTacticsRs {
	required Tactics tactics=1;//战术
	repeated Atom2 atom2 = 2;               //消耗后剩余的资源
	extend Base
    {
      optional TpTacticsRs ext = 8505;
    }
}


//进阶
message AdvancedTacticsRq {
	required int32 keyId =1;//需要升级的战术
	extend Base
    {
      optional AdvancedTacticsRq ext = 8506;
    }
}

message AdvancedTacticsRs {
	required Tactics tactics=1;//战术
	repeated Atom2 atom2 = 2;               //消耗后剩余的资源
	extend Base
    {
      optional AdvancedTacticsRs ext = 8507;
    }
}


//合成战术
message ComposeTacticsRq {
	required int32 tacticsId =1;//
	extend Base
    {
      optional ComposeTacticsRq ext = 8508;
    }
}

message ComposeTacticsRs {
	required Tactics tactics=1;//战术
	repeated TwoInt tacticsSlice = 2;//战术碎片 key:Id value:count
	extend Base
    {
      optional ComposeTacticsRs ext = 8509;
    }
}

//设置战术阵型
message SetTacticsFormRq {
	required int32 index =1;//
	repeated int32 keyId =2;//Tactics keyid
	extend Base
    {
      optional SetTacticsFormRq ext = 8510;
    }
}

message SetTacticsFormRs {
	required int32 index =1;//
	repeated int32 keyId =2;//Tactics keyid
	extend Base
    {
      optional SetTacticsFormRs ext = 8511;
    }
}


//绑定战术 如果是绑定的发过来就是解绑
message BindTacticsFormRq {
	required int32 keyId =1;//Tactics keyid
	extend Base
    {
      optional BindTacticsFormRq ext = 8512;
    }
}

message BindTacticsFormRs {
	required Tactics tactics=1;//战术
	extend Base
    {
      optional BindTacticsFormRs ext = 8513;
    }
}




//最强王者活动
//获取个人三项奖励
message GetPsnKillRankRq{
    required int32 type =1;// type:类型 1-叛军榜 2-采集榜 3-军功榜
	extend Base
	{
		 optional GetPsnKillRankRq ext = 8600;
	}
}

message GetPsnKillRankRs{
    required int64 startTime = 1; //活动开始时间
	required int64 endTime = 2; //活动结束时间
    required int64 totalNumber = 3; //击杀数或者资源数
    required int64 points = 4 ; //积分
    repeated TwoInt status = 5;  //0未领 1已领
	extend Base
	{
		 optional GetPsnKillRankRs ext = 8601;
	}
}


//获取榜首信息
message GetAllRanksRq{
	extend Base
	{
		 optional GetAllRanksRq ext = 8602;
	}
}

message GetAllRanksRs{
	required int64 points = 1 ; //个人积分
    required int64 partyPoint=2;//军团总积分
    repeated KvString firstRankInfo = 3;//榜首信息

	extend Base
	{
		 optional GetAllRanksRs ext = 8603;
	}
}

//获取排行榜分榜信息
message GetRanksInfoRq{
	required int32 type =1;//类型 1-叛军榜 2-采集榜 3-军功榜 4-个人榜 5-军团榜
	extend Base
	{
		 optional GetRanksInfoRq ext = 8604;
	}
}

message GetRanksInfoRs{
	required int32 myRank=1;    //我的排名
	required int64 myPoint=2;   //我的积分
    required int32 status =3;  //0未领 1已领
    repeated KingRankInfo kingRankInfo = 4;//排行榜分榜信息

	extend Base
	{
		 optional GetRanksInfoRs ext = 8605;
	}
}

//领排行奖励协议
message GetKingRankAwardRq{
    required int32 type = 1;//排行榜类型 类型 1-叛军榜 2-采集榜 3-军功榜 4-个人榜 5-军团榜
    extend Base
    {
         optional GetKingRankAwardRq ext = 8606;
    }
}

message GetKingRankAwardRs{
    repeated Award award = 1;//奖励
    required int32 status =2;  //0未领 1已领
	extend Base
    {
         optional GetKingRankAwardRs ext = 8607;
    }
}


//领条件奖励
message GetKingAwardRq{
    required int32 id = 1;//
    extend Base
    {
         optional GetKingAwardRq ext = 8608;
    }
}

message GetKingAwardRs{
    repeated Award award = 1;//奖励
    repeated TwoInt status = 2;  //0未领 1已领
	extend Base
    {
         optional GetKingAwardRs ext = 8609;
    }
}

message FriendGivePropRq{
  required int32 type = 1;//类型
  required int32 propId = 2;//道具id
  required int32 count = 3;//赠送数量
  required int64 friendId = 4;//好友id
  extend Base{
    optional FriendGivePropRq ext = 8610;
  }
}

message FriendGivePropRs{
  optional Atom2 atom2 = 1;
  extend Base{
    optional FriendGivePropRs ext = 8611;
  }
}

//获取扫荡设置信息
message GetWipeInfoRq{
    extend Base
    {
         optional GetWipeInfoRq ext = 8700;
    }
}

message GetWipeInfoRs{
    repeated WipeInfo info = 1;//扫荡设置信息
	extend Base
    {
         optional GetWipeInfoRs ext = 8701;
    }
}

//设置扫荡信息
message SetWipeInfoRq{
	repeated WipeInfo info = 1;//扫荡设置信息
    extend Base
    {
         optional SetWipeInfoRq ext = 8702;
    }
}

message SetWipeInfoRs{
    repeated WipeInfo info = 1;//扫荡设置信息
	extend Base
    {
         optional SetWipeInfoRs ext = 8703;
    }
}


//扫荡
message GetWipeRewarRq{
    extend Base
    {
         optional GetWipeRewarRq ext = 8704;
    }
}

message GetWipeRewarRs{
    repeated WipeRewardInfo rewardInfo = 1;//扫荡奖励信息
	required int32 gold = 2;//
    optional int32 partBuy = 3;                //配件副本已购买次数
    optional int32 partEplr = 4;               //配件副本已挑战次数
	optional int32 equipBuy = 5;               //装备副本已购买次数
	optional int32 equipEplr = 6;              //装备副本已挑战次数
	optional int32 medalBuy = 7;               //勋章关卡购买次数
	optional int32 medalEplr = 8;              //勋章关卡次数
	optional int32 militaryBuy = 9;            //军工副本已购买次数
	optional int32 militaryEplr =10;            //军工副本已挑战次数
	optional int32 energyStoneBuy = 11;         //能晶副本已购买次数
	optional int32 energyStoneEplrId = 12;      //能晶副本已挑战次数
	optional int32 tacticsBuy = 13;                //战术副本已购买次数
    optional int32 tacticsReset = 14;              //战术副本已经挑战次数
	extend Base
    {
         optional GetWipeRewarRs ext = 8705;
    }
}









//资源点免战时间同步
message SyncFreeTimeInfoRq {
	required int32 time = 1;//时间 如果是0就是删除
	required int32 pos = 2;//坐标位置
	extend Base{
        optional SyncFreeTimeInfoRq ext = 1058;
    }
}

//新首冲活动 充值状态
message SyncActNewPayInfoRq {
	repeated TwoInt info = 1;    //充值了的是1 没有充值的0
	extend Base{
        optional SyncActNewPayInfoRq ext = 1059;
    }
}

//新首冲活动2 充值状态
message SyncActNew2PayInfoRq {
	 repeated TwoInt info = 1;    //充值了的是1 没有充值的0
	extend Base{
        optional SyncActNew2PayInfoRq ext = 1060;
    }
}


//激活或升级某个技能时广播的消息
message SynBrotherRq {
    required int32 id = 1;            //buff id
    required string nick = 2;         //激活或升级的玩家名称
    extend Base
    {
      optional SynBrotherRq ext = 1075;
    }
}

//打完飞艇或占领飞艇时广播消息
message SynAirShipFightTaskRq {
    required int32 taskType = 1;     // 1 打飞艇任务 2 占领飞艇任务
    extend Base
    {
      optional SynAirShipFightTaskRq ext = 1077;
    }
}

//通知玩家在别处登录
message SynLoginElseWhereRq {
    extend Base
    {
      optional SynLoginElseWhereRq ext = 1079;
    }
}

//通知玩家已被标记为正在使用扫矿外挂需要输入验证码来取消
message SynPlugInScoutMineRq{
    optional string validCode = 1;
    extend Base
    {
      optional SynPlugInScoutMineRq ext = 1081;
    }
}

//同步红包发放信息
message SynSendActRedBagRq{
    required RedBagChat chat = 1;
    extend Base
    {
      optional SynSendActRedBagRq ext = 1083;
    }
}


//同步世界编制经验
message  SynWorldStaffingRq {
	required int64 worldExp = 1;	//世界总exp
	required int64 dayExp = 2;	//玩家当天贡献的exp
	extend Base
    {
		optional SynWorldStaffingRq ext = 1084;
    }
}


//同步世界编制经验
message  SynWarActivityInfoRq {
	repeated TwoInt info = 1;	// key:id value:已经完成的值
	extend Base
    {
		optional SynWarActivityInfoRq ext = 1085;
    }
}


//同步祭坛boss exp
message  SynFeedAltarContriButeExpRq {
	required int32 exp = 1;	//exp
	extend Base
    {
		optional SynFeedAltarContriButeExpRq ext = 1086;
    }
}

//同步战术状态
message  SynTacticsRq {
	repeated Tactics tactics=1;//战术
	extend Base
    {
		optional SynTacticsRq ext = 1087;
    }
}

//同步消息给好友（添加好友，删除好友，增加友好度），客户端进行主动刷新
message SynFriendlinessRq{
  required Friend friend = 1;
  extend Base{
    optional SynFriendlinessRq ext = 1088;
  }
}
//叛军boss状态
message RebelBoosStateRq{
	required Rebel boosState = 1;
	extend Base
    {
         optional RebelBoosStateRq ext = 1089;
    }
}

//叛军boss buff
message RebelBoosEffectRq{
    required Effect effect = 1;
	extend Base
    {
         optional RebelBoosEffectRq ext = 1090;
    }
}

//推送跨服组队的服务器列表
message SynCrossServerInfoRq{
	required int32 state=1;// 1.未开启 2.开启
	required int32 crossMineState=2; // 1.未开启 2.开启
	extend Base{
        optional SynCrossServerInfoRq ext = 1091;
    }
}


//获取战术 转盘界面信息
message GetActTicDialRq {
    extend Base
    {
      optional GetActTicDialRq ext = 8709;
    }
}

message GetActTicDialRs {
    optional int32 score = 1;               //我的积分
    repeated Fortune fortune = 2;           //转盘
    optional int32 free = 3;                //免费次数
    optional string displayList = 4;        //显示奖励
    extend Base
    {
      optional GetActTicDialRs ext = 8710;
    }
}

//获取战术 转盘排行信息
message GetActTicDialRankRq {
    extend Base
    {
      optional GetActTicDialRankRq ext = 8711;
    }
}

message GetActTicDialRankRs {
    optional int32 score = 1;                   //我的积分
    optional bool open = 2;                     //true可领奖励 1 不可领奖排行奖励
    optional int32 status = 3;                  //0未领 1已领
    repeated ActPlayerRank actPlayerRank = 4;   //排行榜   （只显示前十名）
    repeated RankAward rankAward = 5;           //排名奖励信息
    extend Base
    {
      optional GetActTicDialRankRs ext = 8712;
    }
}

//点击战术转盘抽奖
message DoActTicDialRq {
    required int32 fortuneId = 1;               //转盘ID
    extend Base
    {
      optional DoActTicDialRq ext = 8713;
    }
}

message DoActTicDialRs {
    optional int32 score = 1;                   //我的积分
    repeated Award award = 2;                   //奖励
    extend Base
    {
      optional DoActTicDialRs ext = 8714;
    }
}

// 战术转盘每日目标
message GetTicDialDayInfoRq {
    extend Base
    {
      optional GetTicDialDayInfoRq ext = 8715;
    }
}

message GetTicDialDayInfoRs {
	required int32 count = 1;
	repeated TwoInt rewardStatus = 2;  	//key ：awardId , value : status -1不可领取/0可领取/1已领取
    extend Base
    {
      optional GetTicDialDayInfoRs ext = 8716;
    }
}


message GetTicDialDayAwardRq {
	required int32 awardId = 1;
    extend Base
    {
      optional GetTicDialDayAwardRq ext = 8717;
    }
}

message GetTicDialDayAwardRs {
	repeated Award award = 1;
    extend Base
    {
      optional GetTicDialDayAwardRs ext = 8718;
    }
}

//请求能源核心
message EnergyCoreRq{
	extend Base{
		optional EnergyCoreRq ext = 8719;
	}
}
//返回能源核心信息
message EnergyCoreRs{
	required ThreeInt coreInfo=1 ;//1.等级 2.阶段 3.经验
	required int32 state =2; // 1.达到最高级且熔炼完成
	required int32 redExp=3;//冗余经验
	extend Base{
		optional EnergyCoreRs ext=8720;
	}
}
//能源核心消耗装备/装备卡
message SmeltCoreEquipRq{
	repeated ThreeInt equip=1; //1.type 2.keyid 3.count  
	extend Base{
		optional SmeltCoreEquipRq ext = 8721;
	}
}
//返回能源核心信息
message SmeltCoreEquipRs{
	required ThreeInt coreInfo=1 ;//1.等级 2.阶段 3.经验
	repeated Atom2 atom=2;
	required int32 state =3; // 1.达到最高级且熔炼完成
	required int32 redExp=4;//冗余经验
	extend Base{
		optional SmeltCoreEquipRs ext=8722;
	}
}

//获取跨服服务器列表
message GetCrossServerInfoRq{		
	extend Base{
		optional GetCrossServerInfoRq ext=8723;
	}
}
message GetCrossServerInfoRs{
	required int32 state=1;//跨服开启状态 1.未开启 2.开启
	repeated GameServerInfo info=2;
	required int32 crossMineState=3;//跨服开启状态 1.未开启 2.开启
	extend Base{
		optional GetCrossServerInfoRs ext=8724;
	}
}

//跨服军矿 查看军矿地图信息
message GetCrossSeniorMapRq{
	extend Base
    {
      optional GetCrossSeniorMapRq ext = 8725;
    }
}

message GetCrossSeniorMapRs {
    repeated SeniorMapData data = 1;
    optional int32 count = 2;
    optional int32 limit = 3;
    optional int32 buy = 4;
    extend Base
    {
      optional GetCrossSeniorMapRs ext = 8726;
    }
}

//查看单个军矿信息
message SctCrossSeniorMineRq {
    required int32 pos = 1;
    extend Base
    {
      optional SctCrossSeniorMineRq ext = 8727;
    }
}

message SctCrossSeniorMineRs {
    optional Mail mail = 1;
    extend Base
    {
      optional SctCrossSeniorMineRs ext = 8728;
    }
}

//攻打军矿
message AtkCrossSeniorMineRq {
    required int32 pos = 1;
    required Form form = 2;
    optional int32 type = 3;    //1.掠夺 2.占领
    extend Base
    {
      optional AtkCrossSeniorMineRq ext = 8729;
    }
}

message AtkCrossSeniorMineRs {
    optional Army army = 1;
    optional int32 count = 2;
    extend Base
    {
      optional AtkCrossSeniorMineRs ext = 8730;
    }
}


//查看个人排名
message CrossScoreRankRq {
    extend Base
    {
      optional CrossScoreRankRq ext = 8731;
    }
}

message CrossScoreRankRs {
    repeated ScoreRank scoreRank = 1;
    optional int32 score = 2;               //自己的积分
    optional int32 canGet = 3;               // 0： 不可领取  1：未领取  2:已领取
    optional int32 rank = 4;                //自己的排名
    extend Base
    {
      optional CrossScoreRankRs ext = 8732;
    }
}

//领取跨服个人排名奖励
message CrossScoreAwardRq {
    extend Base
    {
      optional CrossScoreAwardRq ext = 8733;
    }
}

message CrossScoreAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional CrossScoreAwardRs ext = 8734;
    }
}

//查看服务器排名
message CrossServerScoreRankRq {
    extend Base
    {
      optional CrossServerScoreRankRq ext = 8735;
    }
}

message CrossServerScoreRankRs {
    repeated ScoreRank scoreRank = 1;    	// name 服务器名称 fight 服务器id ;score: 服务器得分;
    optional int32 canGet = 2;               // 0： 不可领取  1：未领取  2:已领取
	optional int32 score=3;					//本服积分
	optional int32 rank=4;					//本服排行
    extend Base
    {
      optional CrossServerScoreRankRs ext = 8736;
    }
}

//领取服务器排名奖励
message CrossServerScoreAwardRq {
    extend Base
    {
      optional CrossServerScoreAwardRq ext = 8737;
    }
}

message CrossServerScoreAwardRs {
    repeated Award award = 1;
    extend Base
    {
      optional CrossServerScoreAwardRs ext = 8738;
    }
}

//查看巅峰树
message QueryPeakInfoRq{
	extend Base
    {
      optional QueryPeakInfoRq ext = 8739;
    }
}
//查看巅峰树
message QueryPeakInfoRs{
	repeated TwoInt peak=1;  //v1.树id v2.state: 1.未激活. 2.激活
	extend Base
    {
      optional QueryPeakInfoRs ext = 8740;
    }
}
//查看巅峰树
message ActPeakRq{
	required int32 id=1; 
	repeated ThreeInt cost=3;//type , id, count 
	extend Base
    {
      optional ActPeakRq ext = 8741;
    }
}



